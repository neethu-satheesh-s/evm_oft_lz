{"id":"d78a8ebc56eba629d0495e463276ac16","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/libraries/BytesLib.sol":{"content":"// SPDX-License-Identifier: Unlicense\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.8.0 <0.9.0;\n\nlibrary BytesLib {\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\n        bytes memory tempBytes;\n\n        assembly {\n            // Get a location of some free memory and store it in tempBytes as\n            // Solidity does for memory variables.\n            tempBytes := mload(0x40)\n\n            // Store the length of the first bytes array at the beginning of\n            // the memory for tempBytes.\n            let length := mload(_preBytes)\n            mstore(tempBytes, length)\n\n            // Maintain a memory counter for the current write location in the\n            // temp bytes array by adding the 32 bytes for the array length to\n            // the starting location.\n            let mc := add(tempBytes, 0x20)\n            // Stop copying when the memory counter reaches the length of the\n            // first bytes array.\n            let end := add(mc, length)\n\n            for {\n                // Initialize a copy counter to the start of the _preBytes data,\n                // 32 bytes into its memory.\n                let cc := add(_preBytes, 0x20)\n            } lt(mc, end) {\n                // Increase both counters by 32 bytes each iteration.\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                // Write the _preBytes data into the tempBytes memory 32 bytes\n                // at a time.\n                mstore(mc, mload(cc))\n            }\n\n            // Add the length of _postBytes to the current length of tempBytes\n            // and store it as the new length in the first 32 bytes of the\n            // tempBytes memory.\n            length := mload(_postBytes)\n            mstore(tempBytes, add(length, mload(tempBytes)))\n\n            // Move the memory counter back from a multiple of 0x20 to the\n            // actual end of the _preBytes data.\n            mc := end\n            // Stop copying when the memory counter reaches the new combined\n            // length of the arrays.\n            end := add(mc, length)\n\n            for {\n                let cc := add(_postBytes, 0x20)\n            } lt(mc, end) {\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                mstore(mc, mload(cc))\n            }\n\n            // Update the free-memory pointer by padding our last write location\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\n            // next 32 byte block, then round down to the nearest multiple of\n            // 32. If the sum of the length of the two arrays is zero then add\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\n            mstore(\n                0x40,\n                and(\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\n                    not(31) // Round down to the nearest 32 bytes.\n                )\n            )\n        }\n\n        return tempBytes;\n    }\n\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\n        assembly {\n            // Read the first 32 bytes of _preBytes storage, which is the length\n            // of the array. (We don't need to use the offset into the slot\n            // because arrays use the entire slot.)\n            let fslot := sload(_preBytes.slot)\n            // Arrays of 31 bytes or less have an even value in their slot,\n            // while longer arrays have an odd value. The actual length is\n            // the slot divided by two for odd values, and the lowest order\n            // byte divided by two for even values.\n            // If the slot is even, bitwise and the slot with 255 and divide by\n            // two to get the length. If the slot is odd, bitwise and the slot\n            // with -1 and divide by two.\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n            let newlength := add(slength, mlength)\n            // slength can contain both the length and contents of the array\n            // if length < 32 bytes so let's prepare for that\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n            switch add(lt(slength, 32), lt(newlength, 32))\n            case 2 {\n                // Since the new array still fits in the slot, we just need to\n                // update the contents of the slot.\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\n                sstore(\n                    _preBytes.slot,\n                    // all the modifications to the slot are inside this\n                    // next block\n                    add(\n                        // we can just add to the slot contents because the\n                        // bytes we want to change are the LSBs\n                        fslot,\n                        add(\n                            mul(\n                                div(\n                                    // load the bytes from memory\n                                    mload(add(_postBytes, 0x20)),\n                                    // zero all bytes to the right\n                                    exp(0x100, sub(32, mlength))\n                                ),\n                                // and now shift left the number of bytes to\n                                // leave space for the length in the slot\n                                exp(0x100, sub(32, newlength))\n                            ),\n                            // increase length by the double of the memory\n                            // bytes length\n                            mul(mlength, 2)\n                        )\n                    )\n                )\n            }\n            case 1 {\n                // The stored value fits in the slot, but the combined value\n                // will exceed it.\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // The contents of the _postBytes array start 32 bytes into\n                // the structure. Our first read should obtain the `submod`\n                // bytes that can fit into the unused space in the last word\n                // of the stored array. To get this, we read 32 bytes starting\n                // from `submod`, so the data we read overlaps with the array\n                // contents by `submod` bytes. Masking the lowest-order\n                // `submod` bytes allows us to add that value directly to the\n                // stored value.\n\n                let submod := sub(32, slength)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\n\n                for {\n                    mc := add(mc, 0x20)\n                    sc := add(sc, 1)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n            default {\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                // Start copying to the last used word of the stored array.\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // Copy over the first `submod` bytes of the new data as in\n                // case 1 above.\n                let slengthmod := mod(slength, 32)\n                let mlengthmod := mod(mlength, 32)\n                let submod := sub(32, slengthmod)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\n\n                for {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n        }\n    }\n\n    function slice(\n        bytes memory _bytes,\n        uint _start,\n        uint _length\n    ) internal pure returns (bytes memory) {\n        require(_length + 31 >= _length, \"slice_overflow\");\n        require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n            case 0 {\n                // Get a location of some free memory and store it in tempBytes as\n                // Solidity does for memory variables.\n                tempBytes := mload(0x40)\n\n                // The first word of the slice result is potentially a partial\n                // word read from the original array. To read it, we calculate\n                // the length of that partial word and start copying that many\n                // bytes into the array. The first word we copy will start with\n                // data we don't care about, but the last `lengthmod` bytes will\n                // land at the beginning of the contents of the new array. When\n                // we're done copying, we overwrite the full first word with\n                // the actual length of the slice.\n                let lengthmod := and(_length, 31)\n\n                // The multiplication in the next line is necessary\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\n                // the following copy loop was copying the origin's length\n                // and then ending prematurely not copying everything it should.\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                let end := add(mc, _length)\n\n                for {\n                    // The multiplication in the next line has the same exact purpose\n                    // as the one above.\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                } lt(mc, end) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    mstore(mc, mload(cc))\n                }\n\n                mstore(tempBytes, _length)\n\n                //update free-memory pointer\n                //allocating the array padded to 32 bytes like the compiler does now\n                mstore(0x40, and(add(mc, 31), not(31)))\n            }\n            //if we want a zero-length slice let's just return a zero-length array\n            default {\n                tempBytes := mload(0x40)\n                //zero out the 32 bytes slice we are about to return\n                //we need to do it because Solidity does not garbage collect\n                mstore(tempBytes, 0)\n\n                mstore(0x40, add(tempBytes, 0x20))\n            }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\n        require(_bytes.length >= _start + 20, \"toAddress_outOfBounds\");\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\n        require(_bytes.length >= _start + 1, \"toUint8_outOfBounds\");\n        uint8 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x1), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\n        require(_bytes.length >= _start + 2, \"toUint16_outOfBounds\");\n        uint16 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x2), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\n        require(_bytes.length >= _start + 4, \"toUint32_outOfBounds\");\n        uint32 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x4), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\n        require(_bytes.length >= _start + 8, \"toUint64_outOfBounds\");\n        uint64 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x8), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\n        require(_bytes.length >= _start + 12, \"toUint96_outOfBounds\");\n        uint96 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0xc), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\n        require(_bytes.length >= _start + 16, \"toUint128_outOfBounds\");\n        uint128 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x10), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\n        require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\");\n        uint tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\n        require(_bytes.length >= _start + 32, \"toBytes32_outOfBounds\");\n        bytes32 tempBytes32;\n\n        assembly {\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempBytes32;\n    }\n\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\n        bool success = true;\n\n        assembly {\n            let length := mload(_preBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(length, mload(_postBytes))\n            case 1 {\n                // cb is a circuit breaker in the for loop since there's\n                //  no said feature for inline assembly loops\n                // cb = 1 - don't breaker\n                // cb = 0 - break\n                let cb := 1\n\n                let mc := add(_preBytes, 0x20)\n                let end := add(mc, length)\n\n                for {\n                    let cc := add(_postBytes, 0x20)\n                    // the next line is the loop condition:\n                    // while(uint256(mc < end) + cb == 2)\n                } eq(add(lt(mc, end), cb), 2) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    // if any of these checks fails then arrays are not equal\n                    if iszero(eq(mload(mc), mload(cc))) {\n                        // unsuccess:\n                        success := 0\n                        cb := 0\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\n        bool success = true;\n\n        assembly {\n            // we know _preBytes_offset is 0\n            let fslot := sload(_preBytes.slot)\n            // Decode the length of the stored array like in concatStorage().\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(slength, mlength)\n            case 1 {\n                // slength can contain both the length and contents of the array\n                // if length < 32 bytes so let's prepare for that\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n                if iszero(iszero(slength)) {\n                    switch lt(slength, 32)\n                    case 1 {\n                        // blank the last byte which is the length\n                        fslot := mul(div(fslot, 0x100), 0x100)\n\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\n                            // unsuccess:\n                            success := 0\n                        }\n                    }\n                    default {\n                        // cb is a circuit breaker in the for loop since there's\n                        //  no said feature for inline assembly loops\n                        // cb = 1 - don't breaker\n                        // cb = 0 - break\n                        let cb := 1\n\n                        // get the keccak hash to get the contents of the array\n                        mstore(0x0, _preBytes.slot)\n                        let sc := keccak256(0x0, 0x20)\n\n                        let mc := add(_postBytes, 0x20)\n                        let end := add(mc, mlength)\n\n                        // the next line is the loop condition:\n                        // while(uint256(mc < end) + cb == 2)\n                        for {\n\n                        } eq(add(lt(mc, end), cb), 2) {\n                            sc := add(sc, 1)\n                            mc := add(mc, 0x20)\n                        } {\n                            if iszero(eq(sload(sc), mload(mc))) {\n                                // unsuccess:\n                                success := 0\n                                cb := 0\n                            }\n                        }\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n}\n"},"contracts/libraries/ExcessivelySafeCall.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.7.6;\n\nlibrary ExcessivelySafeCall {\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeCall(\n        address _target,\n        uint _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal returns (bool, bytes memory) {\n        // set up for assembly call\n        uint _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := call(\n                _gas, // gas\n                _target, // recipient\n                0, // ether value\n                add(_calldata, 0x20), // inloc\n                mload(_calldata), // inlen\n                0, // outloc\n                0 // outlen\n            )\n            // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n            // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n            // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /// @notice Use when you _really_ really _really_ don't trust the called\n    /// contract. This prevents the called contract from causing reversion of\n    /// the caller in as many ways as we can.\n    /// @dev The main difference between this and a solidity low-level call is\n    /// that we limit the number of bytes that the callee can cause to be\n    /// copied to caller memory. This prevents stupid things like malicious\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\n    /// to memory.\n    /// @param _target The address to call\n    /// @param _gas The amount of gas to forward to the remote contract\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\n    /// to memory.\n    /// @param _calldata The data to send to the remote contract\n    /// @return success and returndata, as `.call()`. Returndata is capped to\n    /// `_maxCopy` bytes.\n    function excessivelySafeStaticCall(\n        address _target,\n        uint _gas,\n        uint16 _maxCopy,\n        bytes memory _calldata\n    ) internal view returns (bool, bytes memory) {\n        // set up for assembly call\n        uint _toCopy;\n        bool _success;\n        bytes memory _returnData = new bytes(_maxCopy);\n        // dispatch message to recipient\n        // by assembly calling \"handle\" function\n        // we call via assembly to avoid memcopying a very large returndata\n        // returned by a malicious contract\n        assembly {\n            _success := staticcall(\n                _gas, // gas\n                _target, // recipient\n                add(_calldata, 0x20), // inloc\n                mload(_calldata), // inlen\n                0, // outloc\n                0 // outlen\n            )\n            // limit our copy to 256 bytes\n            _toCopy := returndatasize()\n            if gt(_toCopy, _maxCopy) {\n                _toCopy := _maxCopy\n            }\n            // Store the length of the copied bytes\n            mstore(_returnData, _toCopy)\n            // copy the bytes from returndata[0:_toCopy]\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\n        }\n        return (_success, _returnData);\n    }\n\n    /**\n     * @notice Swaps function selectors in encoded contract calls\n     * @dev Allows reuse of encoded calldata for functions with identical\n     * argument types but different names. It simply swaps out the first 4 bytes\n     * for the new selector. This function modifies memory in place, and should\n     * only be used with caution.\n     * @param _newSelector The new 4-byte selector\n     * @param _buf The encoded contract args\n     */\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\n        require(_buf.length >= 4);\n        uint _mask = LOW_28_MASK;\n        assembly {\n            // load the first word of\n            let _word := mload(add(_buf, 0x20))\n            // mask out the top 4 bytes\n            // /x\n            _word := and(_word, _mask)\n            _word := or(_newSelector, _word)\n            mstore(add(_buf, 0x20), _word)\n        }\n    }\n}\n"},"contracts/lzApp/interfaces/ILayerZeroEndpoint.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\nimport \"./ILayerZeroUserApplicationConfig.sol\";\n\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\n    // @param _dstChainId - the destination chain identifier\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\n    // @param _payload - a custom bytes payload to send to the destination contract\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\n    function send(\n        uint16 _dstChainId,\n        bytes calldata _destination,\n        bytes calldata _payload,\n        address payable _refundAddress,\n        address _zroPaymentAddress,\n        bytes calldata _adapterParams\n    ) external payable;\n\n    // @notice used by the messaging library to publish verified payload\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source contract (as bytes) at the source chain\n    // @param _dstAddress - the address on destination chain\n    // @param _nonce - the unbound message ordering nonce\n    // @param _gasLimit - the gas limit for external contract execution\n    // @param _payload - verified payload to send to the destination contract\n    function receivePayload(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        address _dstAddress,\n        uint64 _nonce,\n        uint _gasLimit,\n        bytes calldata _payload\n    ) external;\n\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\n\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\n    // @param _srcAddress - the source chain contract address\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\n\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\n    // @param _dstChainId - the destination chain identifier\n    // @param _userApplication - the user app address on this EVM chain\n    // @param _payload - the custom message to send over LayerZero\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\n    function estimateFees(\n        uint16 _dstChainId,\n        address _userApplication,\n        bytes calldata _payload,\n        bool _payInZRO,\n        bytes calldata _adapterParam\n    ) external view returns (uint nativeFee, uint zroFee);\n\n    // @notice get this Endpoint's immutable source identifier\n    function getChainId() external view returns (uint16);\n\n    // @notice the interface to retry failed message on this Endpoint destination\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    // @param _payload - the payload to be retried\n    function retryPayload(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        bytes calldata _payload\n    ) external;\n\n    // @notice query if any STORED payload (message blocking) at the endpoint.\n    // @param _srcChainId - the source chain identifier\n    // @param _srcAddress - the source chain contract address\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\n\n    // @notice query if the _libraryAddress is valid for sending msgs.\n    // @param _userApplication - the user app address on this EVM chain\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\n\n    // @notice query if the _libraryAddress is valid for receiving msgs.\n    // @param _userApplication - the user app address on this EVM chain\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\n\n    // @notice query if the non-reentrancy guard for send() is on\n    // @return true if the guard is on. false otherwise\n    function isSendingPayload() external view returns (bool);\n\n    // @notice query if the non-reentrancy guard for receive() is on\n    // @return true if the guard is on. false otherwise\n    function isReceivingPayload() external view returns (bool);\n\n    // @notice get the configuration of the LayerZero messaging library of the specified version\n    // @param _version - messaging library version\n    // @param _chainId - the chainId for the pending config change\n    // @param _userApplication - the contract address of the user application\n    // @param _configType - type of configuration. every messaging library has its own convention.\n    function getConfig(\n        uint16 _version,\n        uint16 _chainId,\n        address _userApplication,\n        uint _configType\n    ) external view returns (bytes memory);\n\n    // @notice get the send() LayerZero messaging library version\n    // @param _userApplication - the contract address of the user application\n    function getSendVersion(address _userApplication) external view returns (uint16);\n\n    // @notice get the lzReceive() LayerZero messaging library version\n    // @param _userApplication - the contract address of the user application\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\n}\n"},"contracts/lzApp/interfaces/ILayerZeroReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\ninterface ILayerZeroReceiver {\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\n    // @param _srcChainId - the source endpoint identifier\n    // @param _srcAddress - the source sending contract address from the source chain\n    // @param _nonce - the ordered message nonce\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\n    function lzReceive(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) external;\n}\n"},"contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0;\n\ninterface ILayerZeroUserApplicationConfig {\n    // @notice set the configuration of the LayerZero messaging library of the specified version\n    // @param _version - messaging library version\n    // @param _chainId - the chainId for the pending config change\n    // @param _configType - type of configuration. every messaging library has its own convention.\n    // @param _config - configuration in the bytes. can encode arbitrary content.\n    function setConfig(\n        uint16 _version,\n        uint16 _chainId,\n        uint _configType,\n        bytes calldata _config\n    ) external;\n\n    // @notice set the send() LayerZero messaging library version to _version\n    // @param _version - new messaging library version\n    function setSendVersion(uint16 _version) external;\n\n    // @notice set the lzReceive() LayerZero messaging library version to _version\n    // @param _version - new messaging library version\n    function setReceiveVersion(uint16 _version) external;\n\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\n    // @param _srcChainId - the chainId of the source chain\n    // @param _srcAddress - the contract address of the source contract at the source chain\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\n}\n"},"contracts/lzApp/libs/LzLib.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity >=0.6.0;\npragma experimental ABIEncoderV2;\n\nlibrary LzLib {\n    // LayerZero communication\n    struct CallParams {\n        address payable refundAddress;\n        address zroPaymentAddress;\n    }\n\n    //---------------------------------------------------------------------------\n    // Address type handling\n\n    struct AirdropParams {\n        uint airdropAmount;\n        bytes32 airdropAddress;\n    }\n\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\n        } else {\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\n        }\n    }\n\n    // Build Adapter Params\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\n        // txType 1\n        // bytes  [2       32      ]\n        // fields [txType  extraGas]\n        return abi.encodePacked(uint16(1), _uaGas);\n    }\n\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\n        require(_params.airdropAmount > 0, \"Airdrop amount must be greater than 0\");\n        require(_params.airdropAddress != bytes32(0x0), \"Airdrop address must be set\");\n\n        // txType 2\n        // bytes  [2       32        32            bytes[]         ]\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\n    }\n\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \"Invalid adapterParams\");\n        assembly {\n            gasLimit := mload(add(_adapterParams, 34))\n        }\n    }\n\n    // Decode Adapter Params\n    function decodeAdapterParams(bytes memory _adapterParams)\n        internal\n        pure\n        returns (\n            uint16 txType,\n            uint uaGas,\n            uint airdropAmount,\n            address payable airdropAddress\n        )\n    {\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \"Invalid adapterParams\");\n        assembly {\n            txType := mload(add(_adapterParams, 2))\n            uaGas := mload(add(_adapterParams, 34))\n        }\n        require(txType == 1 || txType == 2, \"Unsupported txType\");\n        require(uaGas > 0, \"Gas too low\");\n\n        if (txType == 2) {\n            assembly {\n                airdropAmount := mload(add(_adapterParams, 66))\n                airdropAddress := mload(add(_adapterParams, 86))\n            }\n        }\n    }\n\n    //---------------------------------------------------------------------------\n    // Address type handling\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\n        return address(uint160(uint(_bytes32Address)));\n    }\n\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\n        return bytes32(uint(uint160(_address)));\n    }\n}\n"},"contracts/lzApp/LzApp.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/ILayerZeroReceiver.sol\";\nimport \"./interfaces/ILayerZeroUserApplicationConfig.sol\";\nimport \"./interfaces/ILayerZeroEndpoint.sol\";\nimport \"../libraries/BytesLib.sol\";\n\n/*\n * a generic LzReceiver implementation\n */\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\n    using BytesLib for bytes;\n\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\n\n    ILayerZeroEndpoint public immutable lzEndpoint;\n    mapping(uint16 => bytes) public trustedRemoteLookup;\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\n    address public precrime;\n\n    event SetPrecrime(address precrime);\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\n\n    constructor(address _endpoint) {\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\n    }\n\n    function lzReceive(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) public virtual override {\n        // lzReceive must be called by the endpoint for security\n        require(_msgSender() == address(lzEndpoint), \"LzApp: invalid endpoint caller\");\n\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\n        require(\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\n            \"LzApp: invalid source sending contract\"\n        );\n\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n    }\n\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\n    function _blockingLzReceive(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload\n    ) internal virtual;\n\n    function _lzSend(\n        uint16 _dstChainId,\n        bytes memory _payload,\n        address payable _refundAddress,\n        address _zroPaymentAddress,\n        bytes memory _adapterParams,\n        uint _nativeFee\n    ) internal virtual {\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\n        require(trustedRemote.length != 0, \"LzApp: destination chain is not a trusted source\");\n        _checkPayloadSize(_dstChainId, _payload.length);\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\n    }\n\n    function _checkGasLimit(\n        uint16 _dstChainId,\n        uint16 _type,\n        bytes memory _adapterParams,\n        uint _extraGas\n    ) internal view virtual {\n        uint providedGasLimit = _getGasLimit(_adapterParams);\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\n        require(minGasLimit > 0, \"LzApp: minGasLimit not set\");\n        require(providedGasLimit >= minGasLimit + _extraGas, \"LzApp: gas limit is too low\");\n    }\n\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\n        require(_adapterParams.length >= 34, \"LzApp: invalid adapterParams\");\n        assembly {\n            gasLimit := mload(add(_adapterParams, 34))\n        }\n    }\n\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\n        if (payloadSizeLimit == 0) {\n            // use default if not set\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\n        }\n        require(_payloadSize <= payloadSizeLimit, \"LzApp: payload size is too large\");\n    }\n\n    //---------------------------UserApplication config----------------------------------------\n    function getConfig(\n        uint16 _version,\n        uint16 _chainId,\n        address,\n        uint _configType\n    ) external view returns (bytes memory) {\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\n    }\n\n    // generic config for LayerZero user Application\n    function setConfig(\n        uint16 _version,\n        uint16 _chainId,\n        uint _configType,\n        bytes calldata _config\n    ) external override onlyOwner {\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\n    }\n\n    function setSendVersion(uint16 _version) external override onlyOwner {\n        lzEndpoint.setSendVersion(_version);\n    }\n\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\n        lzEndpoint.setReceiveVersion(_version);\n    }\n\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\n    }\n\n    // _path = abi.encodePacked(remoteAddress, localAddress)\n    // this function set the trusted path for the cross-chain communication\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\n        trustedRemoteLookup[_remoteChainId] = _path;\n        emit SetTrustedRemote(_remoteChainId, _path);\n    }\n\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\n    }\n\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\n        require(path.length != 0, \"LzApp: no trusted path record\");\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\n    }\n\n    function setPrecrime(address _precrime) external onlyOwner {\n        precrime = _precrime;\n        emit SetPrecrime(_precrime);\n    }\n\n    function setMinDstGas(\n        uint16 _dstChainId,\n        uint16 _packetType,\n        uint _minGas\n    ) external onlyOwner {\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\n    }\n\n    // if the size is 0, it means default size limit\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\n        payloadSizeLimitLookup[_dstChainId] = _size;\n    }\n\n    //--------------------------- VIEW FUNCTION ----------------------------------------\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\n        return keccak256(trustedSource) == keccak256(_srcAddress);\n    }\n}\n"},"contracts/lzApp/mocks/LZEndpointMock.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity ^0.8.0;\npragma abicoder v2;\n\nimport \"../interfaces/ILayerZeroReceiver.sol\";\nimport \"../interfaces/ILayerZeroEndpoint.sol\";\nimport \"../libs/LzLib.sol\";\n\n/*\nlike a real LayerZero endpoint but can be mocked, which handle message transmission, verification, and receipt.\n- blocking: LayerZero provides ordered delivery of messages from a given sender to a destination chain.\n- non-reentrancy: endpoint has a non-reentrancy guard for both the send() and receive(), respectively.\n- adapter parameters: allows UAs to add arbitrary transaction params in the send() function, like airdrop on destination chain.\nunlike a real LayerZero endpoint, it is\n- no messaging library versioning\n- send() will short circuit to lzReceive()\n- no user application configuration\n*/\ncontract LZEndpointMock is ILayerZeroEndpoint {\n    uint8 internal constant _NOT_ENTERED = 1;\n    uint8 internal constant _ENTERED = 2;\n\n    mapping(address => address) public lzEndpointLookup;\n\n    uint16 public mockChainId;\n    bool public nextMsgBlocked;\n\n    // fee config\n    RelayerFeeConfig public relayerFeeConfig;\n    ProtocolFeeConfig public protocolFeeConfig;\n    uint public oracleFee;\n    bytes public defaultAdapterParams;\n\n    // path = remote addrss + local address\n    // inboundNonce = [srcChainId][path].\n    mapping(uint16 => mapping(bytes => uint64)) public inboundNonce;\n    //todo: this is a hack\n    // outboundNonce = [dstChainId][srcAddress]\n    mapping(uint16 => mapping(address => uint64)) public outboundNonce;\n    //    // outboundNonce = [dstChainId][path].\n    //    mapping(uint16 => mapping(bytes => uint64)) public outboundNonce;\n    // storedPayload = [srcChainId][path]\n    mapping(uint16 => mapping(bytes => StoredPayload)) public storedPayload;\n    // msgToDeliver = [srcChainId][path]\n    mapping(uint16 => mapping(bytes => QueuedPayload[])) public msgsToDeliver;\n\n    // reentrancy guard\n    uint8 internal _send_entered_state = 1;\n    uint8 internal _receive_entered_state = 1;\n\n    struct ProtocolFeeConfig {\n        uint zroFee;\n        uint nativeBP;\n    }\n\n    struct RelayerFeeConfig {\n        uint128 dstPriceRatio; // 10^10\n        uint128 dstGasPriceInWei;\n        uint128 dstNativeAmtCap;\n        uint64 baseGas;\n        uint64 gasPerByte;\n    }\n\n    struct StoredPayload {\n        uint64 payloadLength;\n        address dstAddress;\n        bytes32 payloadHash;\n    }\n\n    struct QueuedPayload {\n        address dstAddress;\n        uint64 nonce;\n        bytes payload;\n    }\n\n    modifier sendNonReentrant() {\n        require(_send_entered_state == _NOT_ENTERED, \"LayerZeroMock: no send reentrancy\");\n        _send_entered_state = _ENTERED;\n        _;\n        _send_entered_state = _NOT_ENTERED;\n    }\n\n    modifier receiveNonReentrant() {\n        require(_receive_entered_state == _NOT_ENTERED, \"LayerZeroMock: no receive reentrancy\");\n        _receive_entered_state = _ENTERED;\n        _;\n        _receive_entered_state = _NOT_ENTERED;\n    }\n\n    event UaForceResumeReceive(uint16 chainId, bytes srcAddress);\n    event PayloadCleared(uint16 srcChainId, bytes srcAddress, uint64 nonce, address dstAddress);\n    event PayloadStored(uint16 srcChainId, bytes srcAddress, address dstAddress, uint64 nonce, bytes payload, bytes reason);\n    event ValueTransferFailed(address indexed to, uint indexed quantity);\n\n    constructor(uint16 _chainId) {\n        mockChainId = _chainId;\n\n        // init config\n        relayerFeeConfig = RelayerFeeConfig({\n            dstPriceRatio: 1e10, // 1:1, same chain, same native coin\n            dstGasPriceInWei: 1e10,\n            dstNativeAmtCap: 1e19,\n            baseGas: 100,\n            gasPerByte: 1\n        });\n        protocolFeeConfig = ProtocolFeeConfig({zroFee: 1e18, nativeBP: 1000}); // BP 0.1\n        oracleFee = 1e16;\n        defaultAdapterParams = LzLib.buildDefaultAdapterParams(200000);\n    }\n\n    // ------------------------------ ILayerZeroEndpoint Functions ------------------------------\n    function send(\n        uint16 _chainId,\n        bytes memory _path,\n        bytes calldata _payload,\n        address payable _refundAddress,\n        address _zroPaymentAddress,\n        bytes memory _adapterParams\n    ) external payable override sendNonReentrant {\n        require(_path.length == 40, \"LayerZeroMock: incorrect remote address size\"); // only support evm chains\n\n        address dstAddr;\n        assembly {\n            dstAddr := mload(add(_path, 20))\n        }\n\n        address lzEndpoint = lzEndpointLookup[dstAddr];\n        require(lzEndpoint != address(0), \"LayerZeroMock: destination LayerZero Endpoint not found\");\n\n        // not handle zro token\n        bytes memory adapterParams = _adapterParams.length > 0 ? _adapterParams : defaultAdapterParams;\n        (uint nativeFee, ) = estimateFees(_chainId, msg.sender, _payload, _zroPaymentAddress != address(0x0), adapterParams);\n        require(msg.value >= nativeFee, \"LayerZeroMock: not enough native for fees\");\n\n        uint64 nonce = ++outboundNonce[_chainId][msg.sender];\n\n        // refund if they send too much\n        uint amount = msg.value - nativeFee;\n        if (amount > 0) {\n            (bool success, ) = _refundAddress.call{value: amount}(\"\");\n            require(success, \"LayerZeroMock: failed to refund\");\n        }\n\n        // Mock the process of receiving msg on dst chain\n        // Mock the relayer paying the dstNativeAddr the amount of extra native token\n        (, uint extraGas, uint dstNativeAmt, address payable dstNativeAddr) = LzLib.decodeAdapterParams(adapterParams);\n        if (dstNativeAmt > 0) {\n            (bool success, ) = dstNativeAddr.call{value: dstNativeAmt}(\"\");\n            if (!success) {\n                emit ValueTransferFailed(dstNativeAddr, dstNativeAmt);\n            }\n        }\n\n        bytes memory srcUaAddress = abi.encodePacked(msg.sender, dstAddr); // cast this address to bytes\n        bytes memory payload = _payload;\n        LZEndpointMock(lzEndpoint).receivePayload(mockChainId, srcUaAddress, dstAddr, nonce, extraGas, payload);\n    }\n\n    function receivePayload(\n        uint16 _srcChainId,\n        bytes calldata _path,\n        address _dstAddress,\n        uint64 _nonce,\n        uint _gasLimit,\n        bytes calldata _payload\n    ) external override receiveNonReentrant {\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\n\n        // assert and increment the nonce. no message shuffling\n        require(_nonce == ++inboundNonce[_srcChainId][_path], \"LayerZeroMock: wrong nonce\");\n\n        // queue the following msgs inside of a stack to simulate a successful send on src, but not fully delivered on dst\n        if (sp.payloadHash != bytes32(0)) {\n            QueuedPayload[] storage msgs = msgsToDeliver[_srcChainId][_path];\n            QueuedPayload memory newMsg = QueuedPayload(_dstAddress, _nonce, _payload);\n\n            // warning, might run into gas issues trying to forward through a bunch of queued msgs\n            // shift all the msgs over so we can treat this like a fifo via array.pop()\n            if (msgs.length > 0) {\n                // extend the array\n                msgs.push(newMsg);\n\n                // shift all the indexes up for pop()\n                for (uint i = 0; i < msgs.length - 1; i++) {\n                    msgs[i + 1] = msgs[i];\n                }\n\n                // put the newMsg at the bottom of the stack\n                msgs[0] = newMsg;\n            } else {\n                msgs.push(newMsg);\n            }\n        } else if (nextMsgBlocked) {\n            storedPayload[_srcChainId][_path] = StoredPayload(uint64(_payload.length), _dstAddress, keccak256(_payload));\n            emit PayloadStored(_srcChainId, _path, _dstAddress, _nonce, _payload, bytes(\"\"));\n            // ensure the next msgs that go through are no longer blocked\n            nextMsgBlocked = false;\n        } else {\n            try ILayerZeroReceiver(_dstAddress).lzReceive{gas: _gasLimit}(_srcChainId, _path, _nonce, _payload) {} catch (bytes memory reason) {\n                storedPayload[_srcChainId][_path] = StoredPayload(uint64(_payload.length), _dstAddress, keccak256(_payload));\n                emit PayloadStored(_srcChainId, _path, _dstAddress, _nonce, _payload, reason);\n                // ensure the next msgs that go through are no longer blocked\n                nextMsgBlocked = false;\n            }\n        }\n    }\n\n    function getInboundNonce(uint16 _chainID, bytes calldata _path) external view override returns (uint64) {\n        return inboundNonce[_chainID][_path];\n    }\n\n    function getOutboundNonce(uint16 _chainID, address _srcAddress) external view override returns (uint64) {\n        return outboundNonce[_chainID][_srcAddress];\n    }\n\n    function estimateFees(\n        uint16 _dstChainId,\n        address _userApplication,\n        bytes memory _payload,\n        bool _payInZRO,\n        bytes memory _adapterParams\n    ) public view override returns (uint nativeFee, uint zroFee) {\n        bytes memory adapterParams = _adapterParams.length > 0 ? _adapterParams : defaultAdapterParams;\n\n        // Relayer Fee\n        uint relayerFee = _getRelayerFee(_dstChainId, 1, _userApplication, _payload.length, adapterParams);\n\n        // LayerZero Fee\n        uint protocolFee = _getProtocolFees(_payInZRO, relayerFee, oracleFee);\n        _payInZRO ? zroFee = protocolFee : nativeFee = protocolFee;\n\n        // return the sum of fees\n        nativeFee = nativeFee + relayerFee + oracleFee;\n    }\n\n    function getChainId() external view override returns (uint16) {\n        return mockChainId;\n    }\n\n    function retryPayload(\n        uint16 _srcChainId,\n        bytes calldata _path,\n        bytes calldata _payload\n    ) external override {\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\n        require(sp.payloadHash != bytes32(0), \"LayerZeroMock: no stored payload\");\n        require(_payload.length == sp.payloadLength && keccak256(_payload) == sp.payloadHash, \"LayerZeroMock: invalid payload\");\n\n        address dstAddress = sp.dstAddress;\n        // empty the storedPayload\n        sp.payloadLength = 0;\n        sp.dstAddress = address(0);\n        sp.payloadHash = bytes32(0);\n\n        uint64 nonce = inboundNonce[_srcChainId][_path];\n\n        ILayerZeroReceiver(dstAddress).lzReceive(_srcChainId, _path, nonce, _payload);\n        emit PayloadCleared(_srcChainId, _path, nonce, dstAddress);\n    }\n\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _path) external view override returns (bool) {\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\n        return sp.payloadHash != bytes32(0);\n    }\n\n    function getSendLibraryAddress(address) external view override returns (address) {\n        return address(this);\n    }\n\n    function getReceiveLibraryAddress(address) external view override returns (address) {\n        return address(this);\n    }\n\n    function isSendingPayload() external view override returns (bool) {\n        return _send_entered_state == _ENTERED;\n    }\n\n    function isReceivingPayload() external view override returns (bool) {\n        return _receive_entered_state == _ENTERED;\n    }\n\n    function getConfig(\n        uint16, /*_version*/\n        uint16, /*_chainId*/\n        address, /*_ua*/\n        uint /*_configType*/\n    ) external pure override returns (bytes memory) {\n        return \"\";\n    }\n\n    function getSendVersion(\n        address /*_userApplication*/\n    ) external pure override returns (uint16) {\n        return 1;\n    }\n\n    function getReceiveVersion(\n        address /*_userApplication*/\n    ) external pure override returns (uint16) {\n        return 1;\n    }\n\n    function setConfig(\n        uint16, /*_version*/\n        uint16, /*_chainId*/\n        uint, /*_configType*/\n        bytes memory /*_config*/\n    ) external override {}\n\n    function setSendVersion(\n        uint16 /*version*/\n    ) external override {}\n\n    function setReceiveVersion(\n        uint16 /*version*/\n    ) external override {}\n\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _path) external override {\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\n        // revert if no messages are cached. safeguard malicious UA behaviour\n        require(sp.payloadHash != bytes32(0), \"LayerZeroMock: no stored payload\");\n        require(sp.dstAddress == msg.sender, \"LayerZeroMock: invalid caller\");\n\n        // empty the storedPayload\n        sp.payloadLength = 0;\n        sp.dstAddress = address(0);\n        sp.payloadHash = bytes32(0);\n\n        emit UaForceResumeReceive(_srcChainId, _path);\n\n        // resume the receiving of msgs after we force clear the \"stuck\" msg\n        _clearMsgQue(_srcChainId, _path);\n    }\n\n    // ------------------------------ Other Public/External Functions --------------------------------------------------\n\n    function getLengthOfQueue(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint) {\n        return msgsToDeliver[_srcChainId][_srcAddress].length;\n    }\n\n    // used to simulate messages received get stored as a payload\n    function blockNextMsg() external {\n        nextMsgBlocked = true;\n    }\n\n    function setDestLzEndpoint(address destAddr, address lzEndpointAddr) external {\n        lzEndpointLookup[destAddr] = lzEndpointAddr;\n    }\n\n    function setRelayerPrice(\n        uint128 _dstPriceRatio,\n        uint128 _dstGasPriceInWei,\n        uint128 _dstNativeAmtCap,\n        uint64 _baseGas,\n        uint64 _gasPerByte\n    ) external {\n        relayerFeeConfig.dstPriceRatio = _dstPriceRatio;\n        relayerFeeConfig.dstGasPriceInWei = _dstGasPriceInWei;\n        relayerFeeConfig.dstNativeAmtCap = _dstNativeAmtCap;\n        relayerFeeConfig.baseGas = _baseGas;\n        relayerFeeConfig.gasPerByte = _gasPerByte;\n    }\n\n    function setProtocolFee(uint _zroFee, uint _nativeBP) external {\n        protocolFeeConfig.zroFee = _zroFee;\n        protocolFeeConfig.nativeBP = _nativeBP;\n    }\n\n    function setOracleFee(uint _oracleFee) external {\n        oracleFee = _oracleFee;\n    }\n\n    function setDefaultAdapterParams(bytes memory _adapterParams) external {\n        defaultAdapterParams = _adapterParams;\n    }\n\n    // --------------------- Internal Functions ---------------------\n    // simulates the relayer pushing through the rest of the msgs that got delayed due to the stored payload\n    function _clearMsgQue(uint16 _srcChainId, bytes calldata _path) internal {\n        QueuedPayload[] storage msgs = msgsToDeliver[_srcChainId][_path];\n\n        // warning, might run into gas issues trying to forward through a bunch of queued msgs\n        while (msgs.length > 0) {\n            QueuedPayload memory payload = msgs[msgs.length - 1];\n            ILayerZeroReceiver(payload.dstAddress).lzReceive(_srcChainId, _path, payload.nonce, payload.payload);\n            msgs.pop();\n        }\n    }\n\n    function _getProtocolFees(\n        bool _payInZro,\n        uint _relayerFee,\n        uint _oracleFee\n    ) internal view returns (uint) {\n        if (_payInZro) {\n            return protocolFeeConfig.zroFee;\n        } else {\n            return ((_relayerFee + _oracleFee) * protocolFeeConfig.nativeBP) / 10000;\n        }\n    }\n\n    function _getRelayerFee(\n        uint16, /* _dstChainId */\n        uint16, /* _outboundProofType */\n        address, /* _userApplication */\n        uint _payloadSize,\n        bytes memory _adapterParams\n    ) internal view returns (uint) {\n        (uint16 txType, uint extraGas, uint dstNativeAmt, ) = LzLib.decodeAdapterParams(_adapterParams);\n        uint totalRemoteToken; // = baseGas + extraGas + requiredNativeAmount\n        if (txType == 2) {\n            require(relayerFeeConfig.dstNativeAmtCap >= dstNativeAmt, \"LayerZeroMock: dstNativeAmt too large \");\n            totalRemoteToken += dstNativeAmt;\n        }\n        // remoteGasTotal = dstGasPriceInWei * (baseGas + extraGas)\n        uint remoteGasTotal = relayerFeeConfig.dstGasPriceInWei * (relayerFeeConfig.baseGas + extraGas);\n        totalRemoteToken += remoteGasTotal;\n\n        // tokenConversionRate = dstPrice / localPrice\n        // basePrice = totalRemoteToken * tokenConversionRate\n        uint basePrice = (totalRemoteToken * relayerFeeConfig.dstPriceRatio) / 10**10;\n\n        // pricePerByte = (dstGasPriceInWei * gasPerBytes) * tokenConversionRate\n        uint pricePerByte = (relayerFeeConfig.dstGasPriceInWei * relayerFeeConfig.gasPerByte * relayerFeeConfig.dstPriceRatio) / 10**10;\n\n        return basePrice + _payloadSize * pricePerByte;\n    }\n}\n"},"contracts/lzApp/NonblockingLzApp.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./LzApp.sol\";\nimport \"../libraries/ExcessivelySafeCall.sol\";\n\n/*\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress).\n */\nabstract contract NonblockingLzApp is LzApp {\n    using ExcessivelySafeCall for address;\n\n    constructor(address _endpoint) LzApp(_endpoint) {}\n\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))\n        public failedMessages;\n\n    event MessageFailed(\n        uint16 _srcChainId,\n        bytes _srcAddress,\n        uint64 _nonce,\n        bytes _payload,\n        bytes _reason\n    );\n    event RetryMessageSuccess(\n        uint16 _srcChainId,\n        bytes _srcAddress,\n        uint64 _nonce,\n        bytes32 _payloadHash\n    );\n\n    // overriding the virtual function in LzReceiver.\n    function _blockingLzReceive(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload\n    ) internal virtual override {\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\n            gasleft(),\n            150,\n            abi.encodeWithSelector(\n                this.nonblockingLzReceive.selector,\n                _srcChainId,\n                _srcAddress,\n                _nonce,\n                _payload\n            )\n        );\n        if (!success) {\n            _storeFailedMessage(\n                _srcChainId,\n                _srcAddress,\n                _nonce,\n                _payload,\n                reason\n            );\n        }\n    }\n\n    function _storeFailedMessage(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload,\n        bytes memory _reason\n    ) internal virtual {\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\n    }\n\n    function nonblockingLzReceive(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) public virtual {\n        // only internal transaction\n        require(\n            _msgSender() == address(this),\n            \"NonblockingLzApp: caller must be LzApp\"\n        );\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n    }\n\n    //@notice override this function\n    function _nonblockingLzReceive(\n        uint16 _srcChainId,\n        bytes memory _srcAddress,\n        uint64 _nonce,\n        bytes memory _payload\n    ) internal virtual;\n\n    function retryMessage(\n        uint16 _srcChainId,\n        bytes calldata _srcAddress,\n        uint64 _nonce,\n        bytes calldata _payload\n    ) public payable virtual {\n        // assert there is message to retry\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\n        require(\n            payloadHash != bytes32(0),\n            \"NonblockingLzApp: no stored message\"\n        );\n        require(\n            keccak256(_payload) == payloadHash,\n            \"NonblockingLzApp: invalid payload\"\n        );\n        // clear the stored message\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\n        // execute the message. revert if it fails again\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[142],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":143,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,142],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[],"usedEvents":[13]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[142]},"id":143,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"126:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":142,"linearizedBaseContracts":[142],"name":"Context","nameLocation":"641:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":123,"nodeType":"Block","src":"717:34:1","statements":[{"expression":{"expression":{"id":120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:1","memberName":"sender","nodeType":"MemberAccess","src":"734:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":119,"id":122,"nodeType":"Return","src":"727:17:1"}]},"id":124,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"674:2:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"708:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:1"},"scope":142,"src":"655:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":132,"nodeType":"Block","src":"824:32:1","statements":[{"expression":{"expression":{"id":129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:1","memberName":"data","nodeType":"MemberAccess","src":"841:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":128,"id":131,"nodeType":"Return","src":"834:15:1"}]},"id":133,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:1","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"774:2:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":133,"src":"808:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:1"},"scope":142,"src":"757:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":140,"nodeType":"Block","src":"934:25:1","statements":[{"expression":{"hexValue":"30","id":138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":137,"id":139,"nodeType":"Return","src":"944:8:1"}]},"id":141,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:1","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[],"src":"891:2:1"},"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"925:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:1"},"scope":142,"src":"862:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":143,"src":"623:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:861:1"},"id":1},"contracts/libraries/BytesLib.sol":{"ast":{"absolutePath":"contracts/libraries/BytesLib.sol","exportedSymbols":{"BytesLib":[475]},"id":476,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":144,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"336:31:2"},{"abstract":false,"baseContracts":[],"canonicalName":"BytesLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":475,"linearizedBaseContracts":[475],"name":"BytesLib","nameLocation":"377:8:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":159,"nodeType":"Block","src":"494:2865:2","statements":[{"assignments":[154],"declarations":[{"constant":false,"id":154,"mutability":"mutable","name":"tempBytes","nameLocation":"517:9:2","nodeType":"VariableDeclaration","scope":159,"src":"504:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":153,"name":"bytes","nodeType":"ElementaryTypeName","src":"504:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":155,"nodeType":"VariableDeclarationStatement","src":"504:22:2"},{"AST":{"nodeType":"YulBlock","src":"546:2780:2","statements":[{"nodeType":"YulAssignment","src":"690:24:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"709:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"703:5:2"},"nodeType":"YulFunctionCall","src":"703:11:2"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"690:9:2"}]},{"nodeType":"YulVariableDeclaration","src":"846:30:2","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"866:9:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"860:5:2"},"nodeType":"YulFunctionCall","src":"860:16:2"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"850:6:2","type":""}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"896:9:2"},{"name":"length","nodeType":"YulIdentifier","src":"907:6:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"889:6:2"},"nodeType":"YulFunctionCall","src":"889:25:2"},"nodeType":"YulExpressionStatement","src":"889:25:2"},{"nodeType":"YulVariableDeclaration","src":"1124:30:2","value":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1138:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1149:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1134:3:2"},"nodeType":"YulFunctionCall","src":"1134:20:2"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1128:2:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1279:26:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1294:2:2"},{"name":"length","nodeType":"YulIdentifier","src":"1298:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1290:3:2"},"nodeType":"YulFunctionCall","src":"1290:15:2"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1283:3:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"1682:162:2","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1816:2:2"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1826:2:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1820:5:2"},"nodeType":"YulFunctionCall","src":"1820:9:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1809:6:2"},"nodeType":"YulFunctionCall","src":"1809:21:2"},"nodeType":"YulExpressionStatement","src":"1809:21:2"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1515:2:2"},{"name":"end","nodeType":"YulIdentifier","src":"1519:3:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1512:2:2"},"nodeType":"YulFunctionCall","src":"1512:11:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1524:157:2","statements":[{"nodeType":"YulAssignment","src":"1612:19:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1622:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"1626:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1618:3:2"},"nodeType":"YulFunctionCall","src":"1618:13:2"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"1612:2:2"}]},{"nodeType":"YulAssignment","src":"1648:19:2","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1658:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"1662:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1654:3:2"},"nodeType":"YulFunctionCall","src":"1654:13:2"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"1648:2:2"}]}]},"pre":{"nodeType":"YulBlock","src":"1323:188:2","statements":[{"nodeType":"YulVariableDeclaration","src":"1467:30:2","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"1481:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"1492:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1477:3:2"},"nodeType":"YulFunctionCall","src":"1477:20:2"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"1471:2:2","type":""}]}]},"src":"1319:525:2"},{"nodeType":"YulAssignment","src":"2045:27:2","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2061:10:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2055:5:2"},"nodeType":"YulFunctionCall","src":"2055:17:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2045:6:2"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2092:9:2"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2107:6:2"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2121:9:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2115:5:2"},"nodeType":"YulFunctionCall","src":"2115:16:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2103:3:2"},"nodeType":"YulFunctionCall","src":"2103:29:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2085:6:2"},"nodeType":"YulFunctionCall","src":"2085:48:2"},"nodeType":"YulExpressionStatement","src":"2085:48:2"},{"nodeType":"YulAssignment","src":"2271:9:2","value":{"name":"end","nodeType":"YulIdentifier","src":"2277:3:2"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2271:2:2"}]},{"nodeType":"YulAssignment","src":"2407:22:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2418:2:2"},{"name":"length","nodeType":"YulIdentifier","src":"2422:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2414:3:2"},"nodeType":"YulFunctionCall","src":"2414:15:2"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2407:3:2"}]},{"body":{"nodeType":"YulBlock","src":"2611:53:2","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2636:2:2"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2646:2:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2640:5:2"},"nodeType":"YulFunctionCall","src":"2640:9:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2629:6:2"},"nodeType":"YulFunctionCall","src":"2629:21:2"},"nodeType":"YulExpressionStatement","src":"2629:21:2"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2514:2:2"},{"name":"end","nodeType":"YulIdentifier","src":"2518:3:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2511:2:2"},"nodeType":"YulFunctionCall","src":"2511:11:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2523:87:2","statements":[{"nodeType":"YulAssignment","src":"2541:19:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2551:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"2555:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2547:3:2"},"nodeType":"YulFunctionCall","src":"2547:13:2"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2541:2:2"}]},{"nodeType":"YulAssignment","src":"2577:19:2","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2587:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"2591:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2583:3:2"},"nodeType":"YulFunctionCall","src":"2583:13:2"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2577:2:2"}]}]},"pre":{"nodeType":"YulBlock","src":"2447:63:2","statements":[{"nodeType":"YulVariableDeclaration","src":"2465:31:2","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2479:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"2491:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:2"},"nodeType":"YulFunctionCall","src":"2475:21:2"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2469:2:2","type":""}]}]},"src":"2443:221:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3113:4:2","type":"","value":"0x40"},{"arguments":[{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3168:3:2"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3184:6:2"},{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"3198:9:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3192:5:2"},"nodeType":"YulFunctionCall","src":"3192:16:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3180:3:2"},"nodeType":"YulFunctionCall","src":"3180:29:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3173:6:2"},"nodeType":"YulFunctionCall","src":"3173:37:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3164:3:2"},"nodeType":"YulFunctionCall","src":"3164:47:2"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:2","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3160:3:2"},"nodeType":"YulFunctionCall","src":"3160:56:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3242:2:2","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3238:3:2"},"nodeType":"YulFunctionCall","src":"3238:7:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3135:3:2"},"nodeType":"YulFunctionCall","src":"3135:167:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3089:6:2"},"nodeType":"YulFunctionCall","src":"3089:227:2"},"nodeType":"YulExpressionStatement","src":"3089:227:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":148,"isOffset":false,"isSlot":false,"src":"2061:10:2","valueSize":1},{"declaration":148,"isOffset":false,"isSlot":false,"src":"2479:10:2","valueSize":1},{"declaration":146,"isOffset":false,"isSlot":false,"src":"1481:9:2","valueSize":1},{"declaration":146,"isOffset":false,"isSlot":false,"src":"3198:9:2","valueSize":1},{"declaration":146,"isOffset":false,"isSlot":false,"src":"866:9:2","valueSize":1},{"declaration":154,"isOffset":false,"isSlot":false,"src":"1138:9:2","valueSize":1},{"declaration":154,"isOffset":false,"isSlot":false,"src":"2092:9:2","valueSize":1},{"declaration":154,"isOffset":false,"isSlot":false,"src":"2121:9:2","valueSize":1},{"declaration":154,"isOffset":false,"isSlot":false,"src":"690:9:2","valueSize":1},{"declaration":154,"isOffset":false,"isSlot":false,"src":"896:9:2","valueSize":1}],"id":156,"nodeType":"InlineAssembly","src":"537:2789:2"},{"expression":{"id":157,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"3343:9:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":152,"id":158,"nodeType":"Return","src":"3336:16:2"}]},"id":160,"implemented":true,"kind":"function","modifiers":[],"name":"concat","nameLocation":"401:6:2","nodeType":"FunctionDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"_preBytes","nameLocation":"421:9:2","nodeType":"VariableDeclaration","scope":160,"src":"408:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":145,"name":"bytes","nodeType":"ElementaryTypeName","src":"408:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"_postBytes","nameLocation":"445:10:2","nodeType":"VariableDeclaration","scope":160,"src":"432:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":147,"name":"bytes","nodeType":"ElementaryTypeName","src":"432:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"407:49:2"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":160,"src":"480:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":150,"name":"bytes","nodeType":"ElementaryTypeName","src":"480:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"479:14:2"},"scope":475,"src":"392:2967:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":168,"nodeType":"Block","src":"3447:5805:2","statements":[{"AST":{"nodeType":"YulBlock","src":"3466:5780:2","statements":[{"nodeType":"YulVariableDeclaration","src":"3689:34:2","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"3708:14:2"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3702:5:2"},"nodeType":"YulFunctionCall","src":"3702:21:2"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"3693:5:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4216:76:2","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4239:5:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4254:5:2","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4272:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"4279:1:2","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4268:3:2"},"nodeType":"YulFunctionCall","src":"4268:13:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4261:6:2"},"nodeType":"YulFunctionCall","src":"4261:21:2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4250:3:2"},"nodeType":"YulFunctionCall","src":"4250:33:2"},{"kind":"number","nodeType":"YulLiteral","src":"4285:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4246:3:2"},"nodeType":"YulFunctionCall","src":"4246:41:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4235:3:2"},"nodeType":"YulFunctionCall","src":"4235:53:2"},{"kind":"number","nodeType":"YulLiteral","src":"4290:1:2","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4231:3:2"},"nodeType":"YulFunctionCall","src":"4231:61:2"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"4220:7:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4305:32:2","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"4326:10:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4320:5:2"},"nodeType":"YulFunctionCall","src":"4320:17:2"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"4309:7:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4350:38:2","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4371:7:2"},{"name":"mlength","nodeType":"YulIdentifier","src":"4380:7:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4367:3:2"},"nodeType":"YulFunctionCall","src":"4367:21:2"},"variables":[{"name":"newlength","nodeType":"YulTypedName","src":"4354:9:2","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4721:1485:2","statements":[{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"5002:14:2"},{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"5314:5:2"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"5532:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"5544:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5528:3:2"},"nodeType":"YulFunctionCall","src":"5528:21:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5522:5:2"},"nodeType":"YulFunctionCall","src":"5522:28:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5659:5:2","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5670:2:2","type":"","value":"32"},{"name":"mlength","nodeType":"YulIdentifier","src":"5674:7:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5666:3:2"},"nodeType":"YulFunctionCall","src":"5666:16:2"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5655:3:2"},"nodeType":"YulFunctionCall","src":"5655:28:2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5415:3:2"},"nodeType":"YulFunctionCall","src":"5415:302:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5906:5:2","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5917:2:2","type":"","value":"32"},{"name":"newlength","nodeType":"YulIdentifier","src":"5921:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5913:3:2"},"nodeType":"YulFunctionCall","src":"5913:18:2"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5902:3:2"},"nodeType":"YulFunctionCall","src":"5902:30:2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5378:3:2"},"nodeType":"YulFunctionCall","src":"5378:584:2"},{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"6115:7:2"},{"kind":"number","nodeType":"YulLiteral","src":"6124:1:2","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6111:3:2"},"nodeType":"YulFunctionCall","src":"6111:15:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5345:3:2"},"nodeType":"YulFunctionCall","src":"5345:807:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5145:3:2"},"nodeType":"YulFunctionCall","src":"5145:1029:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4974:6:2"},"nodeType":"YulFunctionCall","src":"4974:1218:2"},"nodeType":"YulExpressionStatement","src":"4974:1218:2"}]},"nodeType":"YulCase","src":"4714:1492:2","value":{"kind":"number","nodeType":"YulLiteral","src":"4719:1:2","type":"","value":"2"}},{"body":{"nodeType":"YulBlock","src":"6226:1725:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6435:3:2","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6440:14:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6428:6:2"},"nodeType":"YulFunctionCall","src":"6428:27:2"},"nodeType":"YulExpressionStatement","src":"6428:27:2"},{"nodeType":"YulVariableDeclaration","src":"6472:53:2","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6496:3:2","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"6501:4:2","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6486:9:2"},"nodeType":"YulFunctionCall","src":"6486:20:2"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"6512:7:2"},{"kind":"number","nodeType":"YulLiteral","src":"6521:2:2","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6508:3:2"},"nodeType":"YulFunctionCall","src":"6508:16:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6482:3:2"},"nodeType":"YulFunctionCall","src":"6482:43:2"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"6476:2:2","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6585:14:2"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"6609:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"6620:1:2","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6605:3:2"},"nodeType":"YulFunctionCall","src":"6605:17:2"},{"kind":"number","nodeType":"YulLiteral","src":"6624:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6601:3:2"},"nodeType":"YulFunctionCall","src":"6601:25:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6578:6:2"},"nodeType":"YulFunctionCall","src":"6578:49:2"},"nodeType":"YulExpressionStatement","src":"6578:49:2"},{"nodeType":"YulVariableDeclaration","src":"7215:30:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7233:2:2","type":"","value":"32"},{"name":"slength","nodeType":"YulIdentifier","src":"7237:7:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7229:3:2"},"nodeType":"YulFunctionCall","src":"7229:16:2"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"7219:6:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7262:33:2","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7276:10:2"},{"name":"submod","nodeType":"YulIdentifier","src":"7288:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7272:3:2"},"nodeType":"YulFunctionCall","src":"7272:23:2"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"7266:2:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7312:35:2","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7327:10:2"},{"name":"mlength","nodeType":"YulIdentifier","src":"7339:7:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7323:3:2"},"nodeType":"YulFunctionCall","src":"7323:24:2"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"7316:3:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7364:38:2","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7384:5:2","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"7391:6:2"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7380:3:2"},"nodeType":"YulFunctionCall","src":"7380:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"7400:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7376:3:2"},"nodeType":"YulFunctionCall","src":"7376:26:2"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7368:4:2","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7427:2:2"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"7439:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"7446:66:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7435:3:2"},"nodeType":"YulFunctionCall","src":"7435:78:2"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7525:2:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7519:5:2"},"nodeType":"YulFunctionCall","src":"7519:9:2"},{"name":"mask","nodeType":"YulIdentifier","src":"7530:4:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7515:3:2"},"nodeType":"YulFunctionCall","src":"7515:20:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7431:3:2"},"nodeType":"YulFunctionCall","src":"7431:105:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7420:6:2"},"nodeType":"YulFunctionCall","src":"7420:117:2"},"nodeType":"YulExpressionStatement","src":"7420:117:2"},{"body":{"nodeType":"YulBlock","src":"7765:61:2","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7794:2:2"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7804:2:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7798:5:2"},"nodeType":"YulFunctionCall","src":"7798:9:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7787:6:2"},"nodeType":"YulFunctionCall","src":"7787:21:2"},"nodeType":"YulExpressionStatement","src":"7787:21:2"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7659:2:2"},{"name":"end","nodeType":"YulIdentifier","src":"7663:3:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7656:2:2"},"nodeType":"YulFunctionCall","src":"7656:11:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7668:96:2","statements":[{"nodeType":"YulAssignment","src":"7690:16:2","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7700:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"7704:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7696:3:2"},"nodeType":"YulFunctionCall","src":"7696:10:2"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7690:2:2"}]},{"nodeType":"YulAssignment","src":"7727:19:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7737:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"7741:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7733:3:2"},"nodeType":"YulFunctionCall","src":"7733:13:2"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7727:2:2"}]}]},"pre":{"nodeType":"YulBlock","src":"7559:96:2","statements":[{"nodeType":"YulAssignment","src":"7581:19:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7591:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"7595:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7587:3:2"},"nodeType":"YulFunctionCall","src":"7587:13:2"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7581:2:2"}]},{"nodeType":"YulAssignment","src":"7621:16:2","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7631:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"7635:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7627:3:2"},"nodeType":"YulFunctionCall","src":"7627:10:2"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7621:2:2"}]}]},"src":"7555:271:2"},{"nodeType":"YulAssignment","src":"7844:32:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7856:5:2","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7867:2:2"},{"name":"end","nodeType":"YulIdentifier","src":"7871:3:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7863:3:2"},"nodeType":"YulFunctionCall","src":"7863:12:2"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7852:3:2"},"nodeType":"YulFunctionCall","src":"7852:24:2"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"7844:4:2"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7901:2:2"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7919:2:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7913:5:2"},"nodeType":"YulFunctionCall","src":"7913:9:2"},{"name":"mask","nodeType":"YulIdentifier","src":"7924:4:2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7909:3:2"},"nodeType":"YulFunctionCall","src":"7909:20:2"},{"name":"mask","nodeType":"YulIdentifier","src":"7931:4:2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7905:3:2"},"nodeType":"YulFunctionCall","src":"7905:31:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7894:6:2"},"nodeType":"YulFunctionCall","src":"7894:43:2"},"nodeType":"YulExpressionStatement","src":"7894:43:2"}]},"nodeType":"YulCase","src":"6219:1732:2","value":{"kind":"number","nodeType":"YulLiteral","src":"6224:1:2","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"7972:1264:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8069:3:2","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8074:14:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8062:6:2"},"nodeType":"YulFunctionCall","src":"8062:27:2"},"nodeType":"YulExpressionStatement","src":"8062:27:2"},{"nodeType":"YulVariableDeclaration","src":"8182:53:2","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8206:3:2","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"8211:4:2","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8196:9:2"},"nodeType":"YulFunctionCall","src":"8196:20:2"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8222:7:2"},{"kind":"number","nodeType":"YulLiteral","src":"8231:2:2","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8218:3:2"},"nodeType":"YulFunctionCall","src":"8218:16:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8192:3:2"},"nodeType":"YulFunctionCall","src":"8192:43:2"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"8186:2:2","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8295:14:2"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"8319:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"8330:1:2","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8315:3:2"},"nodeType":"YulFunctionCall","src":"8315:17:2"},{"kind":"number","nodeType":"YulLiteral","src":"8334:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8311:3:2"},"nodeType":"YulFunctionCall","src":"8311:25:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8288:6:2"},"nodeType":"YulFunctionCall","src":"8288:49:2"},"nodeType":"YulExpressionStatement","src":"8288:49:2"},{"nodeType":"YulVariableDeclaration","src":"8464:34:2","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8486:7:2"},{"kind":"number","nodeType":"YulLiteral","src":"8495:2:2","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8482:3:2"},"nodeType":"YulFunctionCall","src":"8482:16:2"},"variables":[{"name":"slengthmod","nodeType":"YulTypedName","src":"8468:10:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8515:34:2","value":{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"8537:7:2"},{"kind":"number","nodeType":"YulLiteral","src":"8546:2:2","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8533:3:2"},"nodeType":"YulFunctionCall","src":"8533:16:2"},"variables":[{"name":"mlengthmod","nodeType":"YulTypedName","src":"8519:10:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8566:33:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8584:2:2","type":"","value":"32"},{"name":"slengthmod","nodeType":"YulIdentifier","src":"8588:10:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8580:3:2"},"nodeType":"YulFunctionCall","src":"8580:19:2"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"8570:6:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8616:33:2","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8630:10:2"},{"name":"submod","nodeType":"YulIdentifier","src":"8642:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8626:3:2"},"nodeType":"YulFunctionCall","src":"8626:23:2"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"8620:2:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8666:35:2","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8681:10:2"},{"name":"mlength","nodeType":"YulIdentifier","src":"8693:7:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8677:3:2"},"nodeType":"YulFunctionCall","src":"8677:24:2"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"8670:3:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8718:38:2","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8738:5:2","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"8745:6:2"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8734:3:2"},"nodeType":"YulFunctionCall","src":"8734:18:2"},{"kind":"number","nodeType":"YulLiteral","src":"8754:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8730:3:2"},"nodeType":"YulFunctionCall","src":"8730:26:2"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8722:4:2","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8781:2:2"},{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8795:2:2"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8789:5:2"},"nodeType":"YulFunctionCall","src":"8789:9:2"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8810:2:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8804:5:2"},"nodeType":"YulFunctionCall","src":"8804:9:2"},{"name":"mask","nodeType":"YulIdentifier","src":"8815:4:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8800:3:2"},"nodeType":"YulFunctionCall","src":"8800:20:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8785:3:2"},"nodeType":"YulFunctionCall","src":"8785:36:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8774:6:2"},"nodeType":"YulFunctionCall","src":"8774:48:2"},"nodeType":"YulExpressionStatement","src":"8774:48:2"},{"body":{"nodeType":"YulBlock","src":"9050:61:2","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9079:2:2"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9089:2:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9083:5:2"},"nodeType":"YulFunctionCall","src":"9083:9:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9072:6:2"},"nodeType":"YulFunctionCall","src":"9072:21:2"},"nodeType":"YulExpressionStatement","src":"9072:21:2"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8944:2:2"},{"name":"end","nodeType":"YulIdentifier","src":"8948:3:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8941:2:2"},"nodeType":"YulFunctionCall","src":"8941:11:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8953:96:2","statements":[{"nodeType":"YulAssignment","src":"8975:16:2","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8985:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"8989:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8981:3:2"},"nodeType":"YulFunctionCall","src":"8981:10:2"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"8975:2:2"}]},{"nodeType":"YulAssignment","src":"9012:19:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9022:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"9026:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9018:3:2"},"nodeType":"YulFunctionCall","src":"9018:13:2"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9012:2:2"}]}]},"pre":{"nodeType":"YulBlock","src":"8844:96:2","statements":[{"nodeType":"YulAssignment","src":"8866:16:2","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8876:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"8880:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8872:3:2"},"nodeType":"YulFunctionCall","src":"8872:10:2"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"8866:2:2"}]},{"nodeType":"YulAssignment","src":"8903:19:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8913:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"8917:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8909:3:2"},"nodeType":"YulFunctionCall","src":"8909:13:2"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"8903:2:2"}]}]},"src":"8840:271:2"},{"nodeType":"YulAssignment","src":"9129:32:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9141:5:2","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9152:2:2"},{"name":"end","nodeType":"YulIdentifier","src":"9156:3:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9148:3:2"},"nodeType":"YulFunctionCall","src":"9148:12:2"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9137:3:2"},"nodeType":"YulFunctionCall","src":"9137:24:2"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"9129:4:2"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9186:2:2"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9204:2:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9198:5:2"},"nodeType":"YulFunctionCall","src":"9198:9:2"},{"name":"mask","nodeType":"YulIdentifier","src":"9209:4:2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9194:3:2"},"nodeType":"YulFunctionCall","src":"9194:20:2"},{"name":"mask","nodeType":"YulIdentifier","src":"9216:4:2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9190:3:2"},"nodeType":"YulFunctionCall","src":"9190:31:2"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9179:6:2"},"nodeType":"YulFunctionCall","src":"9179:43:2"},"nodeType":"YulExpressionStatement","src":"9179:43:2"}]},"nodeType":"YulCase","src":"7964:1272:2","value":"default"}],"expression":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4669:7:2"},{"kind":"number","nodeType":"YulLiteral","src":"4678:2:2","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4666:2:2"},"nodeType":"YulFunctionCall","src":"4666:15:2"},{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"4686:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4697:2:2","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4683:2:2"},"nodeType":"YulFunctionCall","src":"4683:17:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4662:3:2"},"nodeType":"YulFunctionCall","src":"4662:39:2"},"nodeType":"YulSwitch","src":"4655:4581:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":164,"isOffset":false,"isSlot":false,"src":"4326:10:2","valueSize":1},{"declaration":164,"isOffset":false,"isSlot":false,"src":"5532:10:2","valueSize":1},{"declaration":164,"isOffset":false,"isSlot":false,"src":"7276:10:2","valueSize":1},{"declaration":164,"isOffset":false,"isSlot":false,"src":"7327:10:2","valueSize":1},{"declaration":164,"isOffset":false,"isSlot":false,"src":"8630:10:2","valueSize":1},{"declaration":164,"isOffset":false,"isSlot":false,"src":"8681:10:2","valueSize":1},{"declaration":162,"isOffset":false,"isSlot":true,"src":"3708:14:2","suffix":"slot","valueSize":1},{"declaration":162,"isOffset":false,"isSlot":true,"src":"5002:14:2","suffix":"slot","valueSize":1},{"declaration":162,"isOffset":false,"isSlot":true,"src":"6440:14:2","suffix":"slot","valueSize":1},{"declaration":162,"isOffset":false,"isSlot":true,"src":"6585:14:2","suffix":"slot","valueSize":1},{"declaration":162,"isOffset":false,"isSlot":true,"src":"8074:14:2","suffix":"slot","valueSize":1},{"declaration":162,"isOffset":false,"isSlot":true,"src":"8295:14:2","suffix":"slot","valueSize":1}],"id":167,"nodeType":"InlineAssembly","src":"3457:5789:2"}]},"id":169,"implemented":true,"kind":"function","modifiers":[],"name":"concatStorage","nameLocation":"3374:13:2","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"_preBytes","nameLocation":"3402:9:2","nodeType":"VariableDeclaration","scope":169,"src":"3388:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"_postBytes","nameLocation":"3426:10:2","nodeType":"VariableDeclaration","scope":169,"src":"3413:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":163,"name":"bytes","nodeType":"ElementaryTypeName","src":"3413:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3387:50:2"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"3447:0:2"},"scope":475,"src":"3365:5887:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":205,"nodeType":"Block","src":"9388:2640:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":181,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"9406:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9416:2:2","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"9406:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":184,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"9422:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9406:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9431:16:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9398:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9398:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"ExpressionStatement","src":"9398:50:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":190,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"9466:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9473:6:2","memberName":"length","nodeType":"MemberAccess","src":"9466:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":192,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"9483:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":193,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"9492:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9483:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9466:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9501:19:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9458:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9458:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":198,"nodeType":"ExpressionStatement","src":"9458:63:2"},{"assignments":[200],"declarations":[{"constant":false,"id":200,"mutability":"mutable","name":"tempBytes","nameLocation":"9545:9:2","nodeType":"VariableDeclaration","scope":205,"src":"9532:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":199,"name":"bytes","nodeType":"ElementaryTypeName","src":"9532:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":201,"nodeType":"VariableDeclarationStatement","src":"9532:22:2"},{"AST":{"nodeType":"YulBlock","src":"9574:2421:2","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"9630:1960:2","statements":[{"nodeType":"YulAssignment","src":"9786:24:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9805:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9799:5:2"},"nodeType":"YulFunctionCall","src":"9799:11:2"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"9786:9:2"}]},{"nodeType":"YulVariableDeclaration","src":"10434:33:2","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"10455:7:2"},{"kind":"number","nodeType":"YulLiteral","src":"10464:2:2","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10451:3:2"},"nodeType":"YulFunctionCall","src":"10451:16:2"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"10438:9:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10788:70:2","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"10806:9:2"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"10817:9:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10802:3:2"},"nodeType":"YulFunctionCall","src":"10802:25:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10833:4:2","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"10846:9:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10839:6:2"},"nodeType":"YulFunctionCall","src":"10839:17:2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10829:3:2"},"nodeType":"YulFunctionCall","src":"10829:28:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10798:3:2"},"nodeType":"YulFunctionCall","src":"10798:60:2"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"10792:2:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10875:27:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"10890:2:2"},{"name":"_length","nodeType":"YulIdentifier","src":"10894:7:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10886:3:2"},"nodeType":"YulFunctionCall","src":"10886:16:2"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"10879:3:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"11284:61:2","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11313:2:2"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11323:2:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11317:5:2"},"nodeType":"YulFunctionCall","src":"11317:9:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11306:6:2"},"nodeType":"YulFunctionCall","src":"11306:21:2"},"nodeType":"YulExpressionStatement","src":"11306:21:2"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11175:2:2"},{"name":"end","nodeType":"YulIdentifier","src":"11179:3:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11172:2:2"},"nodeType":"YulFunctionCall","src":"11172:11:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11184:99:2","statements":[{"nodeType":"YulAssignment","src":"11206:19:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11216:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"11220:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11212:3:2"},"nodeType":"YulFunctionCall","src":"11212:13:2"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"11206:2:2"}]},{"nodeType":"YulAssignment","src":"11246:19:2","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11256:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"11260:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11252:3:2"},"nodeType":"YulFunctionCall","src":"11252:13:2"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"11246:2:2"}]}]},"pre":{"nodeType":"YulBlock","src":"10924:247:2","statements":[{"nodeType":"YulVariableDeclaration","src":"11073:80:2","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"11095:6:2"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11103:9:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11091:3:2"},"nodeType":"YulFunctionCall","src":"11091:22:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11119:4:2","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11132:9:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11125:6:2"},"nodeType":"YulFunctionCall","src":"11125:17:2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11115:3:2"},"nodeType":"YulFunctionCall","src":"11115:28:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11087:3:2"},"nodeType":"YulFunctionCall","src":"11087:57:2"},{"name":"_start","nodeType":"YulIdentifier","src":"11146:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11083:3:2"},"nodeType":"YulFunctionCall","src":"11083:70:2"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"11077:2:2","type":""}]}]},"src":"10920:425:2"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11370:9:2"},{"name":"_length","nodeType":"YulIdentifier","src":"11381:7:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11363:6:2"},"nodeType":"YulFunctionCall","src":"11363:26:2"},"nodeType":"YulExpressionStatement","src":"11363:26:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11544:4:2","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11558:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"11562:2:2","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11554:3:2"},"nodeType":"YulFunctionCall","src":"11554:11:2"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11571:2:2","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11567:3:2"},"nodeType":"YulFunctionCall","src":"11567:7:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11550:3:2"},"nodeType":"YulFunctionCall","src":"11550:25:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11537:6:2"},"nodeType":"YulFunctionCall","src":"11537:39:2"},"nodeType":"YulExpressionStatement","src":"11537:39:2"}]},"nodeType":"YulCase","src":"9623:1967:2","value":{"kind":"number","nodeType":"YulLiteral","src":"9628:1:2","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"11694:291:2","statements":[{"nodeType":"YulAssignment","src":"11712:24:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11731:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11725:5:2"},"nodeType":"YulFunctionCall","src":"11725:11:2"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11712:9:2"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11906:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"11917:1:2","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11899:6:2"},"nodeType":"YulFunctionCall","src":"11899:20:2"},"nodeType":"YulExpressionStatement","src":"11899:20:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11944:4:2","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11954:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"11965:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11950:3:2"},"nodeType":"YulFunctionCall","src":"11950:20:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11937:6:2"},"nodeType":"YulFunctionCall","src":"11937:34:2"},"nodeType":"YulExpressionStatement","src":"11937:34:2"}]},"nodeType":"YulCase","src":"11686:299:2","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"9602:7:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9595:6:2"},"nodeType":"YulFunctionCall","src":"9595:15:2"},"nodeType":"YulSwitch","src":"9588:2397:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":171,"isOffset":false,"isSlot":false,"src":"11095:6:2","valueSize":1},{"declaration":175,"isOffset":false,"isSlot":false,"src":"10455:7:2","valueSize":1},{"declaration":175,"isOffset":false,"isSlot":false,"src":"10894:7:2","valueSize":1},{"declaration":175,"isOffset":false,"isSlot":false,"src":"11381:7:2","valueSize":1},{"declaration":175,"isOffset":false,"isSlot":false,"src":"9602:7:2","valueSize":1},{"declaration":173,"isOffset":false,"isSlot":false,"src":"11146:6:2","valueSize":1},{"declaration":200,"isOffset":false,"isSlot":false,"src":"10806:9:2","valueSize":1},{"declaration":200,"isOffset":false,"isSlot":false,"src":"11370:9:2","valueSize":1},{"declaration":200,"isOffset":false,"isSlot":false,"src":"11712:9:2","valueSize":1},{"declaration":200,"isOffset":false,"isSlot":false,"src":"11906:9:2","valueSize":1},{"declaration":200,"isOffset":false,"isSlot":false,"src":"11954:9:2","valueSize":1},{"declaration":200,"isOffset":false,"isSlot":false,"src":"9786:9:2","valueSize":1}],"id":202,"nodeType":"InlineAssembly","src":"9565:2430:2"},{"expression":{"id":203,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12012:9:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":179,"id":204,"nodeType":"Return","src":"12005:16:2"}]},"id":206,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"9267:5:2","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"_bytes","nameLocation":"9295:6:2","nodeType":"VariableDeclaration","scope":206,"src":"9282:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":170,"name":"bytes","nodeType":"ElementaryTypeName","src":"9282:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"_start","nameLocation":"9316:6:2","nodeType":"VariableDeclaration","scope":206,"src":"9311:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint","nodeType":"ElementaryTypeName","src":"9311:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"_length","nameLocation":"9337:7:2","nodeType":"VariableDeclaration","scope":206,"src":"9332:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint","nodeType":"ElementaryTypeName","src":"9332:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9272:78:2"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"9374:12:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":177,"name":"bytes","nodeType":"ElementaryTypeName","src":"9374:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9373:14:2"},"scope":475,"src":"9258:2770:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":231,"nodeType":"Block","src":"12119:266:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":216,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"12137:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12144:6:2","memberName":"length","nodeType":"MemberAccess","src":"12137:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":218,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"12154:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3230","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12163:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"12154:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12137:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f416464726573735f6f75744f66426f756e6473","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12167:23:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""},"value":"toAddress_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""}],"id":215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12129:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12129:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"ExpressionStatement","src":"12129:62:2"},{"assignments":[226],"declarations":[{"constant":false,"id":226,"mutability":"mutable","name":"tempAddress","nameLocation":"12209:11:2","nodeType":"VariableDeclaration","scope":231,"src":"12201:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"12201:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":227,"nodeType":"VariableDeclarationStatement","src":"12201:19:2"},{"AST":{"nodeType":"YulBlock","src":"12240:110:2","statements":[{"nodeType":"YulAssignment","src":"12254:86:2","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12287:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"12295:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12283:3:2"},"nodeType":"YulFunctionCall","src":"12283:17:2"},{"name":"_start","nodeType":"YulIdentifier","src":"12302:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12279:3:2"},"nodeType":"YulFunctionCall","src":"12279:30:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12273:5:2"},"nodeType":"YulFunctionCall","src":"12273:37:2"},{"kind":"number","nodeType":"YulLiteral","src":"12312:27:2","type":"","value":"0x1000000000000000000000000"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12269:3:2"},"nodeType":"YulFunctionCall","src":"12269:71:2"},"variableNames":[{"name":"tempAddress","nodeType":"YulIdentifier","src":"12254:11:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":208,"isOffset":false,"isSlot":false,"src":"12287:6:2","valueSize":1},{"declaration":210,"isOffset":false,"isSlot":false,"src":"12302:6:2","valueSize":1},{"declaration":226,"isOffset":false,"isSlot":false,"src":"12254:11:2","valueSize":1}],"id":228,"nodeType":"InlineAssembly","src":"12231:119:2"},{"expression":{"id":229,"name":"tempAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"12367:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":214,"id":230,"nodeType":"Return","src":"12360:18:2"}]},"id":232,"implemented":true,"kind":"function","modifiers":[],"name":"toAddress","nameLocation":"12043:9:2","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"_bytes","nameLocation":"12066:6:2","nodeType":"VariableDeclaration","scope":232,"src":"12053:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":207,"name":"bytes","nodeType":"ElementaryTypeName","src":"12053:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"_start","nameLocation":"12079:6:2","nodeType":"VariableDeclaration","scope":232,"src":"12074:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint","nodeType":"ElementaryTypeName","src":"12074:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12052:34:2"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"12110:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"12110:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12109:9:2"},"scope":475,"src":"12034:351:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":257,"nodeType":"Block","src":"12472:217:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":242,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"12490:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12497:6:2","memberName":"length","nodeType":"MemberAccess","src":"12490:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":244,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"12507:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12516:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12507:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12490:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e74385f6f75744f66426f756e6473","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12519:21:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""},"value":"toUint8_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""}],"id":241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12482:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12482:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"12482:59:2"},{"assignments":[252],"declarations":[{"constant":false,"id":252,"mutability":"mutable","name":"tempUint","nameLocation":"12557:8:2","nodeType":"VariableDeclaration","scope":257,"src":"12551:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":251,"name":"uint8","nodeType":"ElementaryTypeName","src":"12551:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":253,"nodeType":"VariableDeclarationStatement","src":"12551:14:2"},{"AST":{"nodeType":"YulBlock","src":"12585:72:2","statements":[{"nodeType":"YulAssignment","src":"12599:48:2","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12625:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"12633:3:2","type":"","value":"0x1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12621:3:2"},"nodeType":"YulFunctionCall","src":"12621:16:2"},{"name":"_start","nodeType":"YulIdentifier","src":"12639:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12617:3:2"},"nodeType":"YulFunctionCall","src":"12617:29:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12611:5:2"},"nodeType":"YulFunctionCall","src":"12611:36:2"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12599:8:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":234,"isOffset":false,"isSlot":false,"src":"12625:6:2","valueSize":1},{"declaration":236,"isOffset":false,"isSlot":false,"src":"12639:6:2","valueSize":1},{"declaration":252,"isOffset":false,"isSlot":false,"src":"12599:8:2","valueSize":1}],"id":254,"nodeType":"InlineAssembly","src":"12576:81:2"},{"expression":{"id":255,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"12674:8:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":240,"id":256,"nodeType":"Return","src":"12667:15:2"}]},"id":258,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"12400:7:2","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"_bytes","nameLocation":"12421:6:2","nodeType":"VariableDeclaration","scope":258,"src":"12408:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":233,"name":"bytes","nodeType":"ElementaryTypeName","src":"12408:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"_start","nameLocation":"12434:6:2","nodeType":"VariableDeclaration","scope":258,"src":"12429:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":235,"name":"uint","nodeType":"ElementaryTypeName","src":"12429:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12407:34:2"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":258,"src":"12465:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":238,"name":"uint8","nodeType":"ElementaryTypeName","src":"12465:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12464:7:2"},"scope":475,"src":"12391:298:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":283,"nodeType":"Block","src":"12778:219:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":268,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"12796:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12803:6:2","memberName":"length","nodeType":"MemberAccess","src":"12796:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":270,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"12813:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12822:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12813:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12796:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7431365f6f75744f66426f756e6473","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12825:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""},"value":"toUint16_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""}],"id":267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12788:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12788:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":276,"nodeType":"ExpressionStatement","src":"12788:60:2"},{"assignments":[278],"declarations":[{"constant":false,"id":278,"mutability":"mutable","name":"tempUint","nameLocation":"12865:8:2","nodeType":"VariableDeclaration","scope":283,"src":"12858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":277,"name":"uint16","nodeType":"ElementaryTypeName","src":"12858:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":279,"nodeType":"VariableDeclarationStatement","src":"12858:15:2"},{"AST":{"nodeType":"YulBlock","src":"12893:72:2","statements":[{"nodeType":"YulAssignment","src":"12907:48:2","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12933:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"12941:3:2","type":"","value":"0x2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12929:3:2"},"nodeType":"YulFunctionCall","src":"12929:16:2"},{"name":"_start","nodeType":"YulIdentifier","src":"12947:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12925:3:2"},"nodeType":"YulFunctionCall","src":"12925:29:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12919:5:2"},"nodeType":"YulFunctionCall","src":"12919:36:2"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12907:8:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":260,"isOffset":false,"isSlot":false,"src":"12933:6:2","valueSize":1},{"declaration":262,"isOffset":false,"isSlot":false,"src":"12947:6:2","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"12907:8:2","valueSize":1}],"id":280,"nodeType":"InlineAssembly","src":"12884:81:2"},{"expression":{"id":281,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"12982:8:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":266,"id":282,"nodeType":"Return","src":"12975:15:2"}]},"id":284,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"12704:8:2","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"_bytes","nameLocation":"12726:6:2","nodeType":"VariableDeclaration","scope":284,"src":"12713:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":259,"name":"bytes","nodeType":"ElementaryTypeName","src":"12713:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"_start","nameLocation":"12739:6:2","nodeType":"VariableDeclaration","scope":284,"src":"12734:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint","nodeType":"ElementaryTypeName","src":"12734:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12712:34:2"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":284,"src":"12770:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":264,"name":"uint16","nodeType":"ElementaryTypeName","src":"12770:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"12769:8:2"},"scope":475,"src":"12695:302:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":309,"nodeType":"Block","src":"13086:219:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":294,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"13104:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13111:6:2","memberName":"length","nodeType":"MemberAccess","src":"13104:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":296,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"13121:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13130:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"13121:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13104:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7433325f6f75744f66426f756e6473","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13133:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""},"value":"toUint32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""}],"id":293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13096:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13096:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":302,"nodeType":"ExpressionStatement","src":"13096:60:2"},{"assignments":[304],"declarations":[{"constant":false,"id":304,"mutability":"mutable","name":"tempUint","nameLocation":"13173:8:2","nodeType":"VariableDeclaration","scope":309,"src":"13166:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":303,"name":"uint32","nodeType":"ElementaryTypeName","src":"13166:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":305,"nodeType":"VariableDeclarationStatement","src":"13166:15:2"},{"AST":{"nodeType":"YulBlock","src":"13201:72:2","statements":[{"nodeType":"YulAssignment","src":"13215:48:2","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13241:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"13249:3:2","type":"","value":"0x4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13237:3:2"},"nodeType":"YulFunctionCall","src":"13237:16:2"},{"name":"_start","nodeType":"YulIdentifier","src":"13255:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13233:3:2"},"nodeType":"YulFunctionCall","src":"13233:29:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13227:5:2"},"nodeType":"YulFunctionCall","src":"13227:36:2"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13215:8:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":286,"isOffset":false,"isSlot":false,"src":"13241:6:2","valueSize":1},{"declaration":288,"isOffset":false,"isSlot":false,"src":"13255:6:2","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"13215:8:2","valueSize":1}],"id":306,"nodeType":"InlineAssembly","src":"13192:81:2"},{"expression":{"id":307,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"13290:8:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":292,"id":308,"nodeType":"Return","src":"13283:15:2"}]},"id":310,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"13012:8:2","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"_bytes","nameLocation":"13034:6:2","nodeType":"VariableDeclaration","scope":310,"src":"13021:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":285,"name":"bytes","nodeType":"ElementaryTypeName","src":"13021:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"_start","nameLocation":"13047:6:2","nodeType":"VariableDeclaration","scope":310,"src":"13042:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint","nodeType":"ElementaryTypeName","src":"13042:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13020:34:2"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":310,"src":"13078:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":290,"name":"uint32","nodeType":"ElementaryTypeName","src":"13078:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13077:8:2"},"scope":475,"src":"13003:302:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":335,"nodeType":"Block","src":"13394:219:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":320,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"13412:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13419:6:2","memberName":"length","nodeType":"MemberAccess","src":"13412:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":322,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"13429:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"38","id":323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13438:1:2","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"13429:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13412:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7436345f6f75744f66426f756e6473","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13441:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""},"value":"toUint64_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""}],"id":319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13404:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13404:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"13404:60:2"},{"assignments":[330],"declarations":[{"constant":false,"id":330,"mutability":"mutable","name":"tempUint","nameLocation":"13481:8:2","nodeType":"VariableDeclaration","scope":335,"src":"13474:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":329,"name":"uint64","nodeType":"ElementaryTypeName","src":"13474:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":331,"nodeType":"VariableDeclarationStatement","src":"13474:15:2"},{"AST":{"nodeType":"YulBlock","src":"13509:72:2","statements":[{"nodeType":"YulAssignment","src":"13523:48:2","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13549:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"13557:3:2","type":"","value":"0x8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13545:3:2"},"nodeType":"YulFunctionCall","src":"13545:16:2"},{"name":"_start","nodeType":"YulIdentifier","src":"13563:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13541:3:2"},"nodeType":"YulFunctionCall","src":"13541:29:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13535:5:2"},"nodeType":"YulFunctionCall","src":"13535:36:2"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13523:8:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":312,"isOffset":false,"isSlot":false,"src":"13549:6:2","valueSize":1},{"declaration":314,"isOffset":false,"isSlot":false,"src":"13563:6:2","valueSize":1},{"declaration":330,"isOffset":false,"isSlot":false,"src":"13523:8:2","valueSize":1}],"id":332,"nodeType":"InlineAssembly","src":"13500:81:2"},{"expression":{"id":333,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"13598:8:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":318,"id":334,"nodeType":"Return","src":"13591:15:2"}]},"id":336,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13320:8:2","nodeType":"FunctionDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"_bytes","nameLocation":"13342:6:2","nodeType":"VariableDeclaration","scope":336,"src":"13329:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":311,"name":"bytes","nodeType":"ElementaryTypeName","src":"13329:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"_start","nameLocation":"13355:6:2","nodeType":"VariableDeclaration","scope":336,"src":"13350:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint","nodeType":"ElementaryTypeName","src":"13350:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13328:34:2"},"returnParameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":336,"src":"13386:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":316,"name":"uint64","nodeType":"ElementaryTypeName","src":"13386:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13385:8:2"},"scope":475,"src":"13311:302:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":361,"nodeType":"Block","src":"13702:220:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":346,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"13720:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13727:6:2","memberName":"length","nodeType":"MemberAccess","src":"13720:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":348,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"13737:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13746:2:2","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"13737:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13720:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7439365f6f75744f66426f756e6473","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13750:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""},"value":"toUint96_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""}],"id":345,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13712:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13712:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"13712:61:2"},{"assignments":[356],"declarations":[{"constant":false,"id":356,"mutability":"mutable","name":"tempUint","nameLocation":"13790:8:2","nodeType":"VariableDeclaration","scope":361,"src":"13783:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":355,"name":"uint96","nodeType":"ElementaryTypeName","src":"13783:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":357,"nodeType":"VariableDeclarationStatement","src":"13783:15:2"},{"AST":{"nodeType":"YulBlock","src":"13818:72:2","statements":[{"nodeType":"YulAssignment","src":"13832:48:2","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13858:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"13866:3:2","type":"","value":"0xc"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13854:3:2"},"nodeType":"YulFunctionCall","src":"13854:16:2"},{"name":"_start","nodeType":"YulIdentifier","src":"13872:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13850:3:2"},"nodeType":"YulFunctionCall","src":"13850:29:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13844:5:2"},"nodeType":"YulFunctionCall","src":"13844:36:2"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13832:8:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":338,"isOffset":false,"isSlot":false,"src":"13858:6:2","valueSize":1},{"declaration":340,"isOffset":false,"isSlot":false,"src":"13872:6:2","valueSize":1},{"declaration":356,"isOffset":false,"isSlot":false,"src":"13832:8:2","valueSize":1}],"id":358,"nodeType":"InlineAssembly","src":"13809:81:2"},{"expression":{"id":359,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"13907:8:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":344,"id":360,"nodeType":"Return","src":"13900:15:2"}]},"id":362,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"13628:8:2","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"_bytes","nameLocation":"13650:6:2","nodeType":"VariableDeclaration","scope":362,"src":"13637:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":337,"name":"bytes","nodeType":"ElementaryTypeName","src":"13637:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"_start","nameLocation":"13663:6:2","nodeType":"VariableDeclaration","scope":362,"src":"13658:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint","nodeType":"ElementaryTypeName","src":"13658:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13636:34:2"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":362,"src":"13694:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":342,"name":"uint96","nodeType":"ElementaryTypeName","src":"13694:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"13693:8:2"},"scope":475,"src":"13619:303:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":387,"nodeType":"Block","src":"14013:223:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":372,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"14031:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14038:6:2","memberName":"length","nodeType":"MemberAccess","src":"14031:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":374,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"14048:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3136","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14057:2:2","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14048:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14031:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743132385f6f75744f66426f756e6473","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14061:23:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""},"value":"toUint128_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""}],"id":371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14023:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14023:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":380,"nodeType":"ExpressionStatement","src":"14023:62:2"},{"assignments":[382],"declarations":[{"constant":false,"id":382,"mutability":"mutable","name":"tempUint","nameLocation":"14103:8:2","nodeType":"VariableDeclaration","scope":387,"src":"14095:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":381,"name":"uint128","nodeType":"ElementaryTypeName","src":"14095:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":383,"nodeType":"VariableDeclarationStatement","src":"14095:16:2"},{"AST":{"nodeType":"YulBlock","src":"14131:73:2","statements":[{"nodeType":"YulAssignment","src":"14145:49:2","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14171:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14179:4:2","type":"","value":"0x10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14167:3:2"},"nodeType":"YulFunctionCall","src":"14167:17:2"},{"name":"_start","nodeType":"YulIdentifier","src":"14186:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:2"},"nodeType":"YulFunctionCall","src":"14163:30:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14157:5:2"},"nodeType":"YulFunctionCall","src":"14157:37:2"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14145:8:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":364,"isOffset":false,"isSlot":false,"src":"14171:6:2","valueSize":1},{"declaration":366,"isOffset":false,"isSlot":false,"src":"14186:6:2","valueSize":1},{"declaration":382,"isOffset":false,"isSlot":false,"src":"14145:8:2","valueSize":1}],"id":384,"nodeType":"InlineAssembly","src":"14122:82:2"},{"expression":{"id":385,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"14221:8:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":370,"id":386,"nodeType":"Return","src":"14214:15:2"}]},"id":388,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"13937:9:2","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"_bytes","nameLocation":"13960:6:2","nodeType":"VariableDeclaration","scope":388,"src":"13947:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":363,"name":"bytes","nodeType":"ElementaryTypeName","src":"13947:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"_start","nameLocation":"13973:6:2","nodeType":"VariableDeclaration","scope":388,"src":"13968:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint","nodeType":"ElementaryTypeName","src":"13968:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13946:34:2"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"14004:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":368,"name":"uint128","nodeType":"ElementaryTypeName","src":"14004:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"14003:9:2"},"scope":475,"src":"13928:308:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":413,"nodeType":"Block","src":"14324:220:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":398,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"14342:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14349:6:2","memberName":"length","nodeType":"MemberAccess","src":"14342:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":400,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"14359:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14368:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14359:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14342:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743235365f6f75744f66426f756e6473","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14372:23:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""},"value":"toUint256_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""}],"id":397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14334:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"ExpressionStatement","src":"14334:62:2"},{"assignments":[408],"declarations":[{"constant":false,"id":408,"mutability":"mutable","name":"tempUint","nameLocation":"14411:8:2","nodeType":"VariableDeclaration","scope":413,"src":"14406:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint","nodeType":"ElementaryTypeName","src":"14406:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":409,"nodeType":"VariableDeclarationStatement","src":"14406:13:2"},{"AST":{"nodeType":"YulBlock","src":"14439:73:2","statements":[{"nodeType":"YulAssignment","src":"14453:49:2","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14479:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14487:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14475:3:2"},"nodeType":"YulFunctionCall","src":"14475:17:2"},{"name":"_start","nodeType":"YulIdentifier","src":"14494:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14471:3:2"},"nodeType":"YulFunctionCall","src":"14471:30:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14465:5:2"},"nodeType":"YulFunctionCall","src":"14465:37:2"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14453:8:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":390,"isOffset":false,"isSlot":false,"src":"14479:6:2","valueSize":1},{"declaration":392,"isOffset":false,"isSlot":false,"src":"14494:6:2","valueSize":1},{"declaration":408,"isOffset":false,"isSlot":false,"src":"14453:8:2","valueSize":1}],"id":410,"nodeType":"InlineAssembly","src":"14430:82:2"},{"expression":{"id":411,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"14529:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":396,"id":412,"nodeType":"Return","src":"14522:15:2"}]},"id":414,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"14251:9:2","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"_bytes","nameLocation":"14274:6:2","nodeType":"VariableDeclaration","scope":414,"src":"14261:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":389,"name":"bytes","nodeType":"ElementaryTypeName","src":"14261:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"_start","nameLocation":"14287:6:2","nodeType":"VariableDeclaration","scope":414,"src":"14282:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint","nodeType":"ElementaryTypeName","src":"14282:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14260:34:2"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":414,"src":"14318:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint","nodeType":"ElementaryTypeName","src":"14318:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14317:6:2"},"scope":475,"src":"14242:302:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":439,"nodeType":"Block","src":"14635:232:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":424,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"14653:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14660:6:2","memberName":"length","nodeType":"MemberAccess","src":"14653:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":426,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"14670:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14679:2:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14670:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14653:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f427974657333325f6f75744f66426f756e6473","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14683:23:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""},"value":"toBytes32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""}],"id":423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14645:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14645:62:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":432,"nodeType":"ExpressionStatement","src":"14645:62:2"},{"assignments":[434],"declarations":[{"constant":false,"id":434,"mutability":"mutable","name":"tempBytes32","nameLocation":"14725:11:2","nodeType":"VariableDeclaration","scope":439,"src":"14717:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14717:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":435,"nodeType":"VariableDeclarationStatement","src":"14717:19:2"},{"AST":{"nodeType":"YulBlock","src":"14756:76:2","statements":[{"nodeType":"YulAssignment","src":"14770:52:2","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14799:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14807:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14795:3:2"},"nodeType":"YulFunctionCall","src":"14795:17:2"},{"name":"_start","nodeType":"YulIdentifier","src":"14814:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14791:3:2"},"nodeType":"YulFunctionCall","src":"14791:30:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14785:5:2"},"nodeType":"YulFunctionCall","src":"14785:37:2"},"variableNames":[{"name":"tempBytes32","nodeType":"YulIdentifier","src":"14770:11:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":416,"isOffset":false,"isSlot":false,"src":"14799:6:2","valueSize":1},{"declaration":418,"isOffset":false,"isSlot":false,"src":"14814:6:2","valueSize":1},{"declaration":434,"isOffset":false,"isSlot":false,"src":"14770:11:2","valueSize":1}],"id":436,"nodeType":"InlineAssembly","src":"14747:85:2"},{"expression":{"id":437,"name":"tempBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"14849:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":422,"id":438,"nodeType":"Return","src":"14842:18:2"}]},"id":440,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nameLocation":"14559:9:2","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"_bytes","nameLocation":"14582:6:2","nodeType":"VariableDeclaration","scope":440,"src":"14569:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":415,"name":"bytes","nodeType":"ElementaryTypeName","src":"14569:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"_start","nameLocation":"14595:6:2","nodeType":"VariableDeclaration","scope":440,"src":"14590:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint","nodeType":"ElementaryTypeName","src":"14590:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14568:34:2"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":440,"src":"14626:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14626:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14625:9:2"},"scope":475,"src":"14550:317:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":456,"nodeType":"Block","src":"14966:1331:2","statements":[{"assignments":[450],"declarations":[{"constant":false,"id":450,"mutability":"mutable","name":"success","nameLocation":"14981:7:2","nodeType":"VariableDeclaration","scope":456,"src":"14976:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":449,"name":"bool","nodeType":"ElementaryTypeName","src":"14976:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":452,"initialValue":{"hexValue":"74727565","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14991:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"14976:19:2"},{"AST":{"nodeType":"YulBlock","src":"15015:1251:2","statements":[{"nodeType":"YulVariableDeclaration","src":"15029:30:2","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15049:9:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15043:5:2"},"nodeType":"YulFunctionCall","src":"15043:16:2"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15033:6:2","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15192:969:2","statements":[{"nodeType":"YulVariableDeclaration","src":"15421:11:2","value":{"kind":"number","nodeType":"YulLiteral","src":"15431:1:2","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"15425:2:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15450:30:2","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15464:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"15475:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15460:3:2"},"nodeType":"YulFunctionCall","src":"15460:20:2"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"15454:2:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15497:26:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15512:2:2"},{"name":"length","nodeType":"YulIdentifier","src":"15516:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15508:3:2"},"nodeType":"YulFunctionCall","src":"15508:15:2"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"15501:3:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"15863:284:2","statements":[{"body":{"nodeType":"YulBlock","src":"15999:130:2","statements":[{"nodeType":"YulAssignment","src":"16063:12:2","value":{"kind":"number","nodeType":"YulLiteral","src":"16074:1:2","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16063:7:2"}]},{"nodeType":"YulAssignment","src":"16100:7:2","value":{"kind":"number","nodeType":"YulLiteral","src":"16106:1:2","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"16100:2:2"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15982:2:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15976:5:2"},"nodeType":"YulFunctionCall","src":"15976:9:2"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"15993:2:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15987:5:2"},"nodeType":"YulFunctionCall","src":"15987:9:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15973:2:2"},"nodeType":"YulFunctionCall","src":"15973:24:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15966:6:2"},"nodeType":"YulFunctionCall","src":"15966:32:2"},"nodeType":"YulIf","src":"15963:166:2"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15745:2:2"},{"name":"end","nodeType":"YulIdentifier","src":"15749:3:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15742:2:2"},"nodeType":"YulFunctionCall","src":"15742:11:2"},{"name":"cb","nodeType":"YulIdentifier","src":"15755:2:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15738:3:2"},"nodeType":"YulFunctionCall","src":"15738:20:2"},{"kind":"number","nodeType":"YulLiteral","src":"15760:1:2","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15735:2:2"},"nodeType":"YulFunctionCall","src":"15735:27:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15763:99:2","statements":[{"nodeType":"YulAssignment","src":"15785:19:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15795:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"15799:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15791:3:2"},"nodeType":"YulFunctionCall","src":"15791:13:2"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"15785:2:2"}]},{"nodeType":"YulAssignment","src":"15825:19:2","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"15835:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"15839:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15831:3:2"},"nodeType":"YulFunctionCall","src":"15831:13:2"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"15825:2:2"}]}]},"pre":{"nodeType":"YulBlock","src":"15545:189:2","statements":[{"nodeType":"YulVariableDeclaration","src":"15567:31:2","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15581:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"15593:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15577:3:2"},"nodeType":"YulFunctionCall","src":"15577:21:2"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"15571:2:2","type":""}]}]},"src":"15541:606:2"}]},"nodeType":"YulCase","src":"15185:976:2","value":{"kind":"number","nodeType":"YulLiteral","src":"15190:1:2","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16182:74:2","statements":[{"nodeType":"YulAssignment","src":"16230:12:2","value":{"kind":"number","nodeType":"YulLiteral","src":"16241:1:2","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16230:7:2"}]}]},"nodeType":"YulCase","src":"16174:82:2","value":"default"}],"expression":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15146:6:2"},{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15160:10:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15154:5:2"},"nodeType":"YulFunctionCall","src":"15154:17:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15143:2:2"},"nodeType":"YulFunctionCall","src":"15143:29:2"},"nodeType":"YulSwitch","src":"15136:1120:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":444,"isOffset":false,"isSlot":false,"src":"15160:10:2","valueSize":1},{"declaration":444,"isOffset":false,"isSlot":false,"src":"15581:10:2","valueSize":1},{"declaration":442,"isOffset":false,"isSlot":false,"src":"15049:9:2","valueSize":1},{"declaration":442,"isOffset":false,"isSlot":false,"src":"15464:9:2","valueSize":1},{"declaration":450,"isOffset":false,"isSlot":false,"src":"16063:7:2","valueSize":1},{"declaration":450,"isOffset":false,"isSlot":false,"src":"16230:7:2","valueSize":1}],"id":453,"nodeType":"InlineAssembly","src":"15006:1260:2"},{"expression":{"id":454,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"16283:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":448,"id":455,"nodeType":"Return","src":"16276:14:2"}]},"id":457,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"14882:5:2","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"_preBytes","nameLocation":"14901:9:2","nodeType":"VariableDeclaration","scope":457,"src":"14888:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":441,"name":"bytes","nodeType":"ElementaryTypeName","src":"14888:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"_postBytes","nameLocation":"14925:10:2","nodeType":"VariableDeclaration","scope":457,"src":"14912:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":443,"name":"bytes","nodeType":"ElementaryTypeName","src":"14912:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14887:49:2"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":457,"src":"14960:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":446,"name":"bool","nodeType":"ElementaryTypeName","src":"14960:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14959:6:2"},"scope":475,"src":"14873:1424:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":473,"nodeType":"Block","src":"16404:2585:2","statements":[{"assignments":[467],"declarations":[{"constant":false,"id":467,"mutability":"mutable","name":"success","nameLocation":"16419:7:2","nodeType":"VariableDeclaration","scope":473,"src":"16414:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":466,"name":"bool","nodeType":"ElementaryTypeName","src":"16414:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":469,"initialValue":{"hexValue":"74727565","id":468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16429:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"16414:19:2"},{"AST":{"nodeType":"YulBlock","src":"16453:2505:2","statements":[{"nodeType":"YulVariableDeclaration","src":"16512:34:2","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"16531:14:2"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16525:5:2"},"nodeType":"YulFunctionCall","src":"16525:21:2"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"16516:5:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16637:76:2","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16660:5:2"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16675:5:2","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16693:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"16700:1:2","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16689:3:2"},"nodeType":"YulFunctionCall","src":"16689:13:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16682:6:2"},"nodeType":"YulFunctionCall","src":"16682:21:2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16671:3:2"},"nodeType":"YulFunctionCall","src":"16671:33:2"},{"kind":"number","nodeType":"YulLiteral","src":"16706:1:2","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16667:3:2"},"nodeType":"YulFunctionCall","src":"16667:41:2"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16656:3:2"},"nodeType":"YulFunctionCall","src":"16656:53:2"},{"kind":"number","nodeType":"YulLiteral","src":"16711:1:2","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16652:3:2"},"nodeType":"YulFunctionCall","src":"16652:61:2"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"16641:7:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16726:32:2","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"16747:10:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16741:5:2"},"nodeType":"YulFunctionCall","src":"16741:17:2"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"16730:7:2","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"16882:1971:2","statements":[{"body":{"nodeType":"YulBlock","src":"17193:1646:2","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"17265:340:2","statements":[{"nodeType":"YulAssignment","src":"17358:38:2","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17375:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"17382:5:2","type":"","value":"0x100"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17371:3:2"},"nodeType":"YulFunctionCall","src":"17371:17:2"},{"kind":"number","nodeType":"YulLiteral","src":"17390:5:2","type":"","value":"0x100"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17367:3:2"},"nodeType":"YulFunctionCall","src":"17367:29:2"},"variableNames":[{"name":"fslot","nodeType":"YulIdentifier","src":"17358:5:2"}]},{"body":{"nodeType":"YulBlock","src":"17473:110:2","statements":[{"nodeType":"YulAssignment","src":"17545:12:2","value":{"kind":"number","nodeType":"YulLiteral","src":"17556:1:2","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17545:7:2"}]}]},"condition":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17435:5:2"},{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17452:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"17464:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17448:3:2"},"nodeType":"YulFunctionCall","src":"17448:21:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17442:5:2"},"nodeType":"YulFunctionCall","src":"17442:28:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17432:2:2"},"nodeType":"YulFunctionCall","src":"17432:39:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17425:6:2"},"nodeType":"YulFunctionCall","src":"17425:47:2"},"nodeType":"YulIf","src":"17422:161:2"}]},"nodeType":"YulCase","src":"17258:347:2","value":{"kind":"number","nodeType":"YulLiteral","src":"17263:1:2","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17634:1187:2","statements":[{"nodeType":"YulVariableDeclaration","src":"17903:11:2","value":{"kind":"number","nodeType":"YulLiteral","src":"17913:1:2","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"17907:2:2","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18027:3:2","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"18032:14:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18020:6:2"},"nodeType":"YulFunctionCall","src":"18020:27:2"},"nodeType":"YulExpressionStatement","src":"18020:27:2"},{"nodeType":"YulVariableDeclaration","src":"18072:30:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18092:3:2","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"18097:4:2","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18082:9:2"},"nodeType":"YulFunctionCall","src":"18082:20:2"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"18076:2:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18128:31:2","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"18142:10:2"},{"kind":"number","nodeType":"YulLiteral","src":"18154:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18138:3:2"},"nodeType":"YulFunctionCall","src":"18138:21:2"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"18132:2:2","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18184:27:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18199:2:2"},{"name":"mlength","nodeType":"YulIdentifier","src":"18203:7:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18195:3:2"},"nodeType":"YulFunctionCall","src":"18195:16:2"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"18188:3:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"18545:254:2","statements":[{"body":{"nodeType":"YulBlock","src":"18611:162:2","statements":[{"nodeType":"YulAssignment","src":"18691:12:2","value":{"kind":"number","nodeType":"YulLiteral","src":"18702:1:2","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18691:7:2"}]},{"nodeType":"YulAssignment","src":"18736:7:2","value":{"kind":"number","nodeType":"YulLiteral","src":"18742:1:2","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"18736:2:2"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18594:2:2"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18588:5:2"},"nodeType":"YulFunctionCall","src":"18588:9:2"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18605:2:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18599:5:2"},"nodeType":"YulFunctionCall","src":"18599:9:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18585:2:2"},"nodeType":"YulFunctionCall","src":"18585:24:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18578:6:2"},"nodeType":"YulFunctionCall","src":"18578:32:2"},"nodeType":"YulIf","src":"18575:198:2"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18406:2:2"},{"name":"end","nodeType":"YulIdentifier","src":"18410:3:2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18403:2:2"},"nodeType":"YulFunctionCall","src":"18403:11:2"},{"name":"cb","nodeType":"YulIdentifier","src":"18416:2:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18399:3:2"},"nodeType":"YulFunctionCall","src":"18399:20:2"},{"kind":"number","nodeType":"YulLiteral","src":"18421:1:2","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18396:2:2"},"nodeType":"YulFunctionCall","src":"18396:27:2"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18424:120:2","statements":[{"nodeType":"YulAssignment","src":"18454:16:2","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18464:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"18468:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18460:3:2"},"nodeType":"YulFunctionCall","src":"18460:10:2"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"18454:2:2"}]},{"nodeType":"YulAssignment","src":"18499:19:2","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18509:2:2"},{"kind":"number","nodeType":"YulLiteral","src":"18513:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18505:3:2"},"nodeType":"YulFunctionCall","src":"18505:13:2"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"18499:2:2"}]}]},"pre":{"nodeType":"YulBlock","src":"18367:28:2","statements":[]},"src":"18363:436:2"}]},"nodeType":"YulCase","src":"17626:1195:2","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17225:7:2"},{"kind":"number","nodeType":"YulLiteral","src":"17234:2:2","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17222:2:2"},"nodeType":"YulFunctionCall","src":"17222:15:2"},"nodeType":"YulSwitch","src":"17215:1606:2"}]},"condition":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17183:7:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17176:6:2"},"nodeType":"YulFunctionCall","src":"17176:15:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17169:6:2"},"nodeType":"YulFunctionCall","src":"17169:23:2"},"nodeType":"YulIf","src":"17166:1673:2"}]},"nodeType":"YulCase","src":"16875:1978:2","value":{"kind":"number","nodeType":"YulLiteral","src":"16880:1:2","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"18874:74:2","statements":[{"nodeType":"YulAssignment","src":"18922:12:2","value":{"kind":"number","nodeType":"YulLiteral","src":"18933:1:2","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18922:7:2"}]}]},"nodeType":"YulCase","src":"18866:82:2","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"16845:7:2"},{"name":"mlength","nodeType":"YulIdentifier","src":"16854:7:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16842:2:2"},"nodeType":"YulFunctionCall","src":"16842:20:2"},"nodeType":"YulSwitch","src":"16835:2113:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":461,"isOffset":false,"isSlot":false,"src":"16747:10:2","valueSize":1},{"declaration":461,"isOffset":false,"isSlot":false,"src":"17452:10:2","valueSize":1},{"declaration":461,"isOffset":false,"isSlot":false,"src":"18142:10:2","valueSize":1},{"declaration":459,"isOffset":false,"isSlot":true,"src":"16531:14:2","suffix":"slot","valueSize":1},{"declaration":459,"isOffset":false,"isSlot":true,"src":"18032:14:2","suffix":"slot","valueSize":1},{"declaration":467,"isOffset":false,"isSlot":false,"src":"17545:7:2","valueSize":1},{"declaration":467,"isOffset":false,"isSlot":false,"src":"18691:7:2","valueSize":1},{"declaration":467,"isOffset":false,"isSlot":false,"src":"18922:7:2","valueSize":1}],"id":470,"nodeType":"InlineAssembly","src":"16444:2514:2"},{"expression":{"id":471,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"18975:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":465,"id":472,"nodeType":"Return","src":"18968:14:2"}]},"id":474,"implemented":true,"kind":"function","modifiers":[],"name":"equalStorage","nameLocation":"16312:12:2","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"_preBytes","nameLocation":"16339:9:2","nodeType":"VariableDeclaration","scope":474,"src":"16325:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":458,"name":"bytes","nodeType":"ElementaryTypeName","src":"16325:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"_postBytes","nameLocation":"16363:10:2","nodeType":"VariableDeclaration","scope":474,"src":"16350:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":460,"name":"bytes","nodeType":"ElementaryTypeName","src":"16350:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16324:50:2"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"16398:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":463,"name":"bool","nodeType":"ElementaryTypeName","src":"16398:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16397:6:2"},"scope":475,"src":"16303:2686:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":476,"src":"369:18622:2","usedErrors":[],"usedEvents":[]}],"src":"336:18656:2"},"id":2},"contracts/libraries/ExcessivelySafeCall.sol":{"ast":{"absolutePath":"contracts/libraries/ExcessivelySafeCall.sol","exportedSymbols":{"ExcessivelySafeCall":[572]},"id":573,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":477,"literals":["solidity",">=","0.7",".6"],"nodeType":"PragmaDirective","src":"46:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"ExcessivelySafeCall","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":572,"linearizedBaseContracts":[572],"name":"ExcessivelySafeCall","nameLocation":"80:19:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":480,"mutability":"constant","name":"LOW_28_MASK","nameLocation":"120:11:3","nodeType":"VariableDeclaration","scope":572,"src":"106:94:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint","nodeType":"ElementaryTypeName","src":"106:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307830303030303030306666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"134:66:3","typeDescriptions":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249215_by_1","typeString":"int_const 2695...(60 digits omitted)...9215"},"value":"0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},"visibility":"internal"},{"body":{"id":514,"nodeType":"Block","src":"1285:1100:3","statements":[{"assignments":[497],"declarations":[{"constant":false,"id":497,"mutability":"mutable","name":"_toCopy","nameLocation":"1336:7:3","nodeType":"VariableDeclaration","scope":514,"src":"1331:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint","nodeType":"ElementaryTypeName","src":"1331:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":498,"nodeType":"VariableDeclarationStatement","src":"1331:12:3"},{"assignments":[500],"declarations":[{"constant":false,"id":500,"mutability":"mutable","name":"_success","nameLocation":"1358:8:3","nodeType":"VariableDeclaration","scope":514,"src":"1353:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":499,"name":"bool","nodeType":"ElementaryTypeName","src":"1353:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":501,"nodeType":"VariableDeclarationStatement","src":"1353:13:3"},{"assignments":[503],"declarations":[{"constant":false,"id":503,"mutability":"mutable","name":"_returnData","nameLocation":"1389:11:3","nodeType":"VariableDeclaration","scope":514,"src":"1376:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":502,"name":"bytes","nodeType":"ElementaryTypeName","src":"1376:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":508,"initialValue":{"arguments":[{"id":506,"name":"_maxCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"1413:8:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1403:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":504,"name":"bytes","nodeType":"ElementaryTypeName","src":"1407:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1403:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1376:46:3"},{"AST":{"nodeType":"YulBlock","src":"1651:688:3","statements":[{"nodeType":"YulAssignment","src":"1665:279:3","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"1699:4:3"},{"name":"_target","nodeType":"YulIdentifier","src":"1728:7:3"},{"kind":"number","nodeType":"YulLiteral","src":"1766:1:3","type":"","value":"0"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"1804:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1815:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1800:3:3"},"nodeType":"YulFunctionCall","src":"1800:20:3"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"1853:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1847:5:3"},"nodeType":"YulFunctionCall","src":"1847:16:3"},{"kind":"number","nodeType":"YulLiteral","src":"1890:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1919:1:3","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"1677:4:3"},"nodeType":"YulFunctionCall","src":"1677:267:3"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"1665:8:3"}]},{"nodeType":"YulAssignment","src":"2000:27:3","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"2011:14:3"},"nodeType":"YulFunctionCall","src":"2011:16:3"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2000:7:3"}]},{"body":{"nodeType":"YulBlock","src":"2065:51:3","statements":[{"nodeType":"YulAssignment","src":"2083:19:3","value":{"name":"_maxCopy","nodeType":"YulIdentifier","src":"2094:8:3"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2083:7:3"}]}]},"condition":{"arguments":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"2046:7:3"},{"name":"_maxCopy","nodeType":"YulIdentifier","src":"2055:8:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2043:2:3"},"nodeType":"YulFunctionCall","src":"2043:21:3"},"nodeType":"YulIf","src":"2040:76:3"},{"expression":{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"2188:11:3"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"2201:7:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2181:6:3"},"nodeType":"YulFunctionCall","src":"2181:28:3"},"nodeType":"YulExpressionStatement","src":"2181:28:3"},{"expression":{"arguments":[{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"2298:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"2311:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2294:3:3"},"nodeType":"YulFunctionCall","src":"2294:22:3"},{"kind":"number","nodeType":"YulLiteral","src":"2318:1:3","type":"","value":"0"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"2321:7:3"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"2279:14:3"},"nodeType":"YulFunctionCall","src":"2279:50:3"},"nodeType":"YulExpressionStatement","src":"2279:50:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":489,"isOffset":false,"isSlot":false,"src":"1804:9:3","valueSize":1},{"declaration":489,"isOffset":false,"isSlot":false,"src":"1853:9:3","valueSize":1},{"declaration":485,"isOffset":false,"isSlot":false,"src":"1699:4:3","valueSize":1},{"declaration":487,"isOffset":false,"isSlot":false,"src":"2055:8:3","valueSize":1},{"declaration":487,"isOffset":false,"isSlot":false,"src":"2094:8:3","valueSize":1},{"declaration":503,"isOffset":false,"isSlot":false,"src":"2188:11:3","valueSize":1},{"declaration":503,"isOffset":false,"isSlot":false,"src":"2298:11:3","valueSize":1},{"declaration":500,"isOffset":false,"isSlot":false,"src":"1665:8:3","valueSize":1},{"declaration":483,"isOffset":false,"isSlot":false,"src":"1728:7:3","valueSize":1},{"declaration":497,"isOffset":false,"isSlot":false,"src":"2000:7:3","valueSize":1},{"declaration":497,"isOffset":false,"isSlot":false,"src":"2046:7:3","valueSize":1},{"declaration":497,"isOffset":false,"isSlot":false,"src":"2083:7:3","valueSize":1},{"declaration":497,"isOffset":false,"isSlot":false,"src":"2201:7:3","valueSize":1},{"declaration":497,"isOffset":false,"isSlot":false,"src":"2321:7:3","valueSize":1}],"id":509,"nodeType":"InlineAssembly","src":"1642:697:3"},{"expression":{"components":[{"id":510,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"2356:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":511,"name":"_returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"2366:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2355:23:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":495,"id":513,"nodeType":"Return","src":"2348:30:3"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"207:899:3","text":"@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."},"id":515,"implemented":true,"kind":"function","modifiers":[],"name":"excessivelySafeCall","nameLocation":"1120:19:3","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"_target","nameLocation":"1157:7:3","nodeType":"VariableDeclaration","scope":515,"src":"1149:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"1149:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"_gas","nameLocation":"1179:4:3","nodeType":"VariableDeclaration","scope":515,"src":"1174:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint","nodeType":"ElementaryTypeName","src":"1174:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"_maxCopy","nameLocation":"1200:8:3","nodeType":"VariableDeclaration","scope":515,"src":"1193:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":486,"name":"uint16","nodeType":"ElementaryTypeName","src":"1193:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"_calldata","nameLocation":"1231:9:3","nodeType":"VariableDeclaration","scope":515,"src":"1218:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":488,"name":"bytes","nodeType":"ElementaryTypeName","src":"1218:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1139:107:3"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":515,"src":"1265:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":491,"name":"bool","nodeType":"ElementaryTypeName","src":"1265:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":515,"src":"1271:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":493,"name":"bytes","nodeType":"ElementaryTypeName","src":"1271:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1264:20:3"},"scope":572,"src":"1111:1274:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":549,"nodeType":"Block","src":"3480:1072:3","statements":[{"assignments":[532],"declarations":[{"constant":false,"id":532,"mutability":"mutable","name":"_toCopy","nameLocation":"3531:7:3","nodeType":"VariableDeclaration","scope":549,"src":"3526:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint","nodeType":"ElementaryTypeName","src":"3526:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":533,"nodeType":"VariableDeclarationStatement","src":"3526:12:3"},{"assignments":[535],"declarations":[{"constant":false,"id":535,"mutability":"mutable","name":"_success","nameLocation":"3553:8:3","nodeType":"VariableDeclaration","scope":549,"src":"3548:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":534,"name":"bool","nodeType":"ElementaryTypeName","src":"3548:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":536,"nodeType":"VariableDeclarationStatement","src":"3548:13:3"},{"assignments":[538],"declarations":[{"constant":false,"id":538,"mutability":"mutable","name":"_returnData","nameLocation":"3584:11:3","nodeType":"VariableDeclaration","scope":549,"src":"3571:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":537,"name":"bytes","nodeType":"ElementaryTypeName","src":"3571:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":543,"initialValue":{"arguments":[{"id":541,"name":"_maxCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3608:8:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3598:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":539,"name":"bytes","nodeType":"ElementaryTypeName","src":"3602:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3598:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3571:46:3"},{"AST":{"nodeType":"YulBlock","src":"3846:660:3","statements":[{"nodeType":"YulAssignment","src":"3860:251:3","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"3900:4:3"},{"name":"_target","nodeType":"YulIdentifier","src":"3929:7:3"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"3971:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3982:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3967:3:3"},"nodeType":"YulFunctionCall","src":"3967:20:3"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"4020:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4014:5:3"},"nodeType":"YulFunctionCall","src":"4014:16:3"},{"kind":"number","nodeType":"YulLiteral","src":"4057:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4086:1:3","type":"","value":"0"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"3872:10:3"},"nodeType":"YulFunctionCall","src":"3872:239:3"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"3860:8:3"}]},{"nodeType":"YulAssignment","src":"4167:27:3","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4178:14:3"},"nodeType":"YulFunctionCall","src":"4178:16:3"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4167:7:3"}]},{"body":{"nodeType":"YulBlock","src":"4232:51:3","statements":[{"nodeType":"YulAssignment","src":"4250:19:3","value":{"name":"_maxCopy","nodeType":"YulIdentifier","src":"4261:8:3"},"variableNames":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4250:7:3"}]}]},"condition":{"arguments":[{"name":"_toCopy","nodeType":"YulIdentifier","src":"4213:7:3"},{"name":"_maxCopy","nodeType":"YulIdentifier","src":"4222:8:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4210:2:3"},"nodeType":"YulFunctionCall","src":"4210:21:3"},"nodeType":"YulIf","src":"4207:76:3"},{"expression":{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"4355:11:3"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"4368:7:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4348:6:3"},"nodeType":"YulFunctionCall","src":"4348:28:3"},"nodeType":"YulExpressionStatement","src":"4348:28:3"},{"expression":{"arguments":[{"arguments":[{"name":"_returnData","nodeType":"YulIdentifier","src":"4465:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"4478:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4461:3:3"},"nodeType":"YulFunctionCall","src":"4461:22:3"},{"kind":"number","nodeType":"YulLiteral","src":"4485:1:3","type":"","value":"0"},{"name":"_toCopy","nodeType":"YulIdentifier","src":"4488:7:3"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"4446:14:3"},"nodeType":"YulFunctionCall","src":"4446:50:3"},"nodeType":"YulExpressionStatement","src":"4446:50:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":524,"isOffset":false,"isSlot":false,"src":"3971:9:3","valueSize":1},{"declaration":524,"isOffset":false,"isSlot":false,"src":"4020:9:3","valueSize":1},{"declaration":520,"isOffset":false,"isSlot":false,"src":"3900:4:3","valueSize":1},{"declaration":522,"isOffset":false,"isSlot":false,"src":"4222:8:3","valueSize":1},{"declaration":522,"isOffset":false,"isSlot":false,"src":"4261:8:3","valueSize":1},{"declaration":538,"isOffset":false,"isSlot":false,"src":"4355:11:3","valueSize":1},{"declaration":538,"isOffset":false,"isSlot":false,"src":"4465:11:3","valueSize":1},{"declaration":535,"isOffset":false,"isSlot":false,"src":"3860:8:3","valueSize":1},{"declaration":518,"isOffset":false,"isSlot":false,"src":"3929:7:3","valueSize":1},{"declaration":532,"isOffset":false,"isSlot":false,"src":"4167:7:3","valueSize":1},{"declaration":532,"isOffset":false,"isSlot":false,"src":"4213:7:3","valueSize":1},{"declaration":532,"isOffset":false,"isSlot":false,"src":"4250:7:3","valueSize":1},{"declaration":532,"isOffset":false,"isSlot":false,"src":"4368:7:3","valueSize":1},{"declaration":532,"isOffset":false,"isSlot":false,"src":"4488:7:3","valueSize":1}],"id":544,"nodeType":"InlineAssembly","src":"3837:669:3"},{"expression":{"components":[{"id":545,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"4523:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":546,"name":"_returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"4533:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4522:23:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":530,"id":548,"nodeType":"Return","src":"4515:30:3"}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"2391:899:3","text":"@notice Use when you _really_ really _really_ don't trust the called\n contract. This prevents the called contract from causing reversion of\n the caller in as many ways as we can.\n @dev The main difference between this and a solidity low-level call is\n that we limit the number of bytes that the callee can cause to be\n copied to caller memory. This prevents stupid things like malicious\n contracts returning 10,000,000 bytes causing a local OOG when copying\n to memory.\n @param _target The address to call\n @param _gas The amount of gas to forward to the remote contract\n @param _maxCopy The maximum number of bytes of returndata to copy\n to memory.\n @param _calldata The data to send to the remote contract\n @return success and returndata, as `.call()`. Returndata is capped to\n `_maxCopy` bytes."},"id":550,"implemented":true,"kind":"function","modifiers":[],"name":"excessivelySafeStaticCall","nameLocation":"3304:25:3","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"_target","nameLocation":"3347:7:3","nodeType":"VariableDeclaration","scope":550,"src":"3339:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"_gas","nameLocation":"3369:4:3","nodeType":"VariableDeclaration","scope":550,"src":"3364:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint","nodeType":"ElementaryTypeName","src":"3364:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"_maxCopy","nameLocation":"3390:8:3","nodeType":"VariableDeclaration","scope":550,"src":"3383:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":521,"name":"uint16","nodeType":"ElementaryTypeName","src":"3383:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"_calldata","nameLocation":"3421:9:3","nodeType":"VariableDeclaration","scope":550,"src":"3408:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":523,"name":"bytes","nodeType":"ElementaryTypeName","src":"3408:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3329:107:3"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":550,"src":"3460:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":526,"name":"bool","nodeType":"ElementaryTypeName","src":"3460:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":550,"src":"3466:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":528,"name":"bytes","nodeType":"ElementaryTypeName","src":"3466:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:20:3"},"scope":572,"src":"3295:1257:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":570,"nodeType":"Block","src":"5081:376:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":559,"name":"_buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"5099:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5104:6:3","memberName":"length","nodeType":"MemberAccess","src":"5099:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"34","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5114:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5099:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":558,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5091:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"ExpressionStatement","src":"5091:25:3"},{"assignments":[566],"declarations":[{"constant":false,"id":566,"mutability":"mutable","name":"_mask","nameLocation":"5131:5:3","nodeType":"VariableDeclaration","scope":570,"src":"5126:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint","nodeType":"ElementaryTypeName","src":"5126:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":568,"initialValue":{"id":567,"name":"LOW_28_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5139:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5126:24:3"},{"AST":{"nodeType":"YulBlock","src":"5169:282:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5221:35:3","value":{"arguments":[{"arguments":[{"name":"_buf","nodeType":"YulIdentifier","src":"5244:4:3"},{"kind":"number","nodeType":"YulLiteral","src":"5250:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5240:3:3"},"nodeType":"YulFunctionCall","src":"5240:15:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5234:5:3"},"nodeType":"YulFunctionCall","src":"5234:22:3"},"variables":[{"name":"_word","nodeType":"YulTypedName","src":"5225:5:3","type":""}]},{"nodeType":"YulAssignment","src":"5327:26:3","value":{"arguments":[{"name":"_word","nodeType":"YulIdentifier","src":"5340:5:3"},{"name":"_mask","nodeType":"YulIdentifier","src":"5347:5:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5336:3:3"},"nodeType":"YulFunctionCall","src":"5336:17:3"},"variableNames":[{"name":"_word","nodeType":"YulIdentifier","src":"5327:5:3"}]},{"nodeType":"YulAssignment","src":"5366:32:3","value":{"arguments":[{"name":"_newSelector","nodeType":"YulIdentifier","src":"5378:12:3"},{"name":"_word","nodeType":"YulIdentifier","src":"5392:5:3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5375:2:3"},"nodeType":"YulFunctionCall","src":"5375:23:3"},"variableNames":[{"name":"_word","nodeType":"YulIdentifier","src":"5366:5:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"_buf","nodeType":"YulIdentifier","src":"5422:4:3"},{"kind":"number","nodeType":"YulLiteral","src":"5428:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5418:3:3"},"nodeType":"YulFunctionCall","src":"5418:15:3"},{"name":"_word","nodeType":"YulIdentifier","src":"5435:5:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5411:6:3"},"nodeType":"YulFunctionCall","src":"5411:30:3"},"nodeType":"YulExpressionStatement","src":"5411:30:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":555,"isOffset":false,"isSlot":false,"src":"5244:4:3","valueSize":1},{"declaration":555,"isOffset":false,"isSlot":false,"src":"5422:4:3","valueSize":1},{"declaration":566,"isOffset":false,"isSlot":false,"src":"5347:5:3","valueSize":1},{"declaration":553,"isOffset":false,"isSlot":false,"src":"5378:12:3","valueSize":1}],"id":569,"nodeType":"InlineAssembly","src":"5160:291:3"}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"4558:442:3","text":" @notice Swaps function selectors in encoded contract calls\n @dev Allows reuse of encoded calldata for functions with identical\n argument types but different names. It simply swaps out the first 4 bytes\n for the new selector. This function modifies memory in place, and should\n only be used with caution.\n @param _newSelector The new 4-byte selector\n @param _buf The encoded contract args"},"id":571,"implemented":true,"kind":"function","modifiers":[],"name":"swapSelector","nameLocation":"5014:12:3","nodeType":"FunctionDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"_newSelector","nameLocation":"5034:12:3","nodeType":"VariableDeclaration","scope":571,"src":"5027:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":552,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5027:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"_buf","nameLocation":"5061:4:3","nodeType":"VariableDeclaration","scope":571,"src":"5048:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":554,"name":"bytes","nodeType":"ElementaryTypeName","src":"5048:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5026:40:3"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[],"src":"5081:0:3"},"scope":572,"src":"5005:452:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":573,"src":"72:5387:3","usedErrors":[],"usedEvents":[]}],"src":"46:5414:3"},"id":3},"contracts/lzApp/LzApp.sol":{"ast":{"absolutePath":"contracts/lzApp/LzApp.sol","exportedSymbols":{"BytesLib":[475],"Context":[142],"ILayerZeroEndpoint":[1500],"ILayerZeroReceiver":[1514],"ILayerZeroUserApplicationConfig":[1545],"LzApp":[1114],"Ownable":[112]},"id":1115,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":574,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:4"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1115,"sourceUnit":113,"src":"58:52:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lzApp/interfaces/ILayerZeroReceiver.sol","file":"./interfaces/ILayerZeroReceiver.sol","id":576,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1115,"sourceUnit":1515,"src":"111:45:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","file":"./interfaces/ILayerZeroUserApplicationConfig.sol","id":577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1115,"sourceUnit":1546,"src":"157:58:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lzApp/interfaces/ILayerZeroEndpoint.sol","file":"./interfaces/ILayerZeroEndpoint.sol","id":578,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1115,"sourceUnit":1501,"src":"216:45:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/BytesLib.sol","file":"../libraries/BytesLib.sol","id":579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1115,"sourceUnit":476,"src":"262:35:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":580,"name":"Ownable","nameLocations":["372:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"372:7:4"},"id":581,"nodeType":"InheritanceSpecifier","src":"372:7:4"},{"baseName":{"id":582,"name":"ILayerZeroReceiver","nameLocations":["381:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":1514,"src":"381:18:4"},"id":583,"nodeType":"InheritanceSpecifier","src":"381:18:4"},{"baseName":{"id":584,"name":"ILayerZeroUserApplicationConfig","nameLocations":["401:31:4"],"nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"401:31:4"},"id":585,"nodeType":"InheritanceSpecifier","src":"401:31:4"}],"canonicalName":"LzApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":1114,"linearizedBaseContracts":[1114,1545,1514,112,142],"name":"LzApp","nameLocation":"363:5:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":588,"libraryName":{"id":586,"name":"BytesLib","nameLocations":["445:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":475,"src":"445:8:4"},"nodeType":"UsingForDirective","src":"439:25:4","typeName":{"id":587,"name":"bytes","nodeType":"ElementaryTypeName","src":"458:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"constant":true,"functionSelector":"c4461834","id":591,"mutability":"constant","name":"DEFAULT_PAYLOAD_SIZE_LIMIT","nameLocation":"589:26:4","nodeType":"VariableDeclaration","scope":1114,"src":"568:55:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":589,"name":"uint","nodeType":"ElementaryTypeName","src":"568:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"618:5:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"b353aaa7","id":594,"mutability":"immutable","name":"lzEndpoint","nameLocation":"666:10:4","nodeType":"VariableDeclaration","scope":1114,"src":"630:46:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"},"typeName":{"id":593,"nodeType":"UserDefinedTypeName","pathNode":{"id":592,"name":"ILayerZeroEndpoint","nameLocations":["630:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":1500,"src":"630:18:4"},"referencedDeclaration":1500,"src":"630:18:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"}},"visibility":"public"},{"constant":false,"functionSelector":"7533d788","id":598,"mutability":"mutable","name":"trustedRemoteLookup","nameLocation":"714:19:4","nodeType":"VariableDeclaration","scope":1114,"src":"682:51:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"typeName":{"id":597,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":595,"name":"uint16","nodeType":"ElementaryTypeName","src":"690:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"682:24:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":596,"name":"bytes","nodeType":"ElementaryTypeName","src":"700:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"public"},{"constant":false,"functionSelector":"8cfd8f5c","id":604,"mutability":"mutable","name":"minDstGasLookup","nameLocation":"789:15:4","nodeType":"VariableDeclaration","scope":1114,"src":"739:65:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"},"typeName":{"id":603,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":599,"name":"uint16","nodeType":"ElementaryTypeName","src":"747:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"739:42:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":602,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":600,"name":"uint16","nodeType":"ElementaryTypeName","src":"765:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"757:23:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":601,"name":"uint","nodeType":"ElementaryTypeName","src":"775:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"3f1f4fa4","id":608,"mutability":"mutable","name":"payloadSizeLimitLookup","nameLocation":"841:22:4","nodeType":"VariableDeclaration","scope":1114,"src":"810:53:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"typeName":{"id":607,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":605,"name":"uint16","nodeType":"ElementaryTypeName","src":"818:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"810:23:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":606,"name":"uint","nodeType":"ElementaryTypeName","src":"828:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"950c8a74","id":610,"mutability":"mutable","name":"precrime","nameLocation":"884:8:4","nodeType":"VariableDeclaration","scope":1114,"src":"869:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"5db758e995a17ec1ad84bdef7e8c3293a0bd6179bcce400dff5d4c3d87db726b","id":614,"name":"SetPrecrime","nameLocation":"905:11:4","nodeType":"EventDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"indexed":false,"mutability":"mutable","name":"precrime","nameLocation":"925:8:4","nodeType":"VariableDeclaration","scope":614,"src":"917:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"916:18:4"},"src":"899:36:4"},{"anonymous":false,"eventSelector":"fa41487ad5d6728f0b19276fa1eddc16558578f5109fc39d2dc33c3230470dab","id":620,"name":"SetTrustedRemote","nameLocation":"946:16:4","nodeType":"EventDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"indexed":false,"mutability":"mutable","name":"_remoteChainId","nameLocation":"970:14:4","nodeType":"VariableDeclaration","scope":620,"src":"963:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":615,"name":"uint16","nodeType":"ElementaryTypeName","src":"963:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":618,"indexed":false,"mutability":"mutable","name":"_path","nameLocation":"992:5:4","nodeType":"VariableDeclaration","scope":620,"src":"986:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":617,"name":"bytes","nodeType":"ElementaryTypeName","src":"986:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"962:36:4"},"src":"940:59:4"},{"anonymous":false,"eventSelector":"8c0400cfe2d1199b1a725c78960bcc2a344d869b80590d0f2bd005db15a572ce","id":626,"name":"SetTrustedRemoteAddress","nameLocation":"1010:23:4","nodeType":"EventDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"indexed":false,"mutability":"mutable","name":"_remoteChainId","nameLocation":"1041:14:4","nodeType":"VariableDeclaration","scope":626,"src":"1034:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":621,"name":"uint16","nodeType":"ElementaryTypeName","src":"1034:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":624,"indexed":false,"mutability":"mutable","name":"_remoteAddress","nameLocation":"1063:14:4","nodeType":"VariableDeclaration","scope":626,"src":"1057:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":623,"name":"bytes","nodeType":"ElementaryTypeName","src":"1057:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1033:45:4"},"src":"1004:75:4"},{"anonymous":false,"eventSelector":"9d5c7c0b934da8fefa9c7760c98383778a12dfbfc0c3b3106518f43fb9508ac0","id":634,"name":"SetMinDstGas","nameLocation":"1090:12:4","nodeType":"EventDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"indexed":false,"mutability":"mutable","name":"_dstChainId","nameLocation":"1110:11:4","nodeType":"VariableDeclaration","scope":634,"src":"1103:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":627,"name":"uint16","nodeType":"ElementaryTypeName","src":"1103:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":630,"indexed":false,"mutability":"mutable","name":"_type","nameLocation":"1130:5:4","nodeType":"VariableDeclaration","scope":634,"src":"1123:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":629,"name":"uint16","nodeType":"ElementaryTypeName","src":"1123:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":632,"indexed":false,"mutability":"mutable","name":"_minDstGas","nameLocation":"1142:10:4","nodeType":"VariableDeclaration","scope":634,"src":"1137:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint","nodeType":"ElementaryTypeName","src":"1137:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1102:51:4"},"src":"1084:70:4"},{"body":{"id":645,"nodeType":"Block","src":"1191:59:4","statements":[{"expression":{"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":639,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"1201:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":641,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"1233:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":640,"name":"ILayerZeroEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"1214:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroEndpoint_$1500_$","typeString":"type(contract ILayerZeroEndpoint)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1214:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"}},"src":"1201:42:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"}},"id":644,"nodeType":"ExpressionStatement","src":"1201:42:4"}]},"id":646,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"_endpoint","nameLocation":"1180:9:4","nodeType":"VariableDeclaration","scope":646,"src":"1172:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"1172:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1171:19:4"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"1191:0:4"},"scope":1114,"src":"1160:90:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1513],"body":{"id":704,"nodeType":"Block","src":"1425:656:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":659,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1508:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1508:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":663,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"1532:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"}],"id":662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1524:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:4","typeDescriptions":{}}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1524:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1508:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c696420656e64706f696e742063616c6c6572","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1545:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9","typeString":"literal_string \"LzApp: invalid endpoint caller\""},"value":"LzApp: invalid endpoint caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c76d352ff891dcabaed1e1ebf3c88e97f49052956ad0c09feadb4b7d40c688f9","typeString":"literal_string \"LzApp: invalid endpoint caller\""}],"id":658,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1500:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1500:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"ExpressionStatement","src":"1500:78:4"},{"assignments":[670],"declarations":[{"constant":false,"id":670,"mutability":"mutable","name":"trustedRemote","nameLocation":"1602:13:4","nodeType":"VariableDeclaration","scope":704,"src":"1589:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":669,"name":"bytes","nodeType":"ElementaryTypeName","src":"1589:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":674,"initialValue":{"baseExpression":{"id":671,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"1618:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":673,"indexExpression":{"id":672,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"1638:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1618:32:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1589:61:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":676,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"1813:11:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1825:6:4","memberName":"length","nodeType":"MemberAccess","src":"1813:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":678,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"1835:13:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1849:6:4","memberName":"length","nodeType":"MemberAccess","src":"1835:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1813:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":681,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"1859:13:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1873:6:4","memberName":"length","nodeType":"MemberAccess","src":"1859:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1882:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1859:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1813:70:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":687,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"1897:11:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":686,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1887:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":690,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"1923:13:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":689,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1913:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1887:50:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1813:124:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c696420736f757263652073656e64696e6720636f6e7472616374","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1951:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815","typeString":"literal_string \"LzApp: invalid source sending contract\""},"value":"LzApp: invalid source sending contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2c5f1a596d749e8a7585a60b880c2626f8dc4e8dd0b6f11ae55e0b2b1061815","typeString":"literal_string \"LzApp: invalid source sending contract\""}],"id":675,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1792:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1792:209:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"1792:209:4"},{"expression":{"arguments":[{"id":698,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"2031:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":699,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"2044:11:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":700,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"2057:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":701,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"2065:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":697,"name":"_blockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"2012:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2012:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"2012:62:4"}]},"functionSelector":"001d3567","id":705,"implemented":true,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"1265:9:4","nodeType":"FunctionDefinition","overrides":{"id":656,"nodeType":"OverrideSpecifier","overrides":[],"src":"1416:8:4"},"parameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"_srcChainId","nameLocation":"1291:11:4","nodeType":"VariableDeclaration","scope":705,"src":"1284:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":647,"name":"uint16","nodeType":"ElementaryTypeName","src":"1284:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"_srcAddress","nameLocation":"1327:11:4","nodeType":"VariableDeclaration","scope":705,"src":"1312:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":649,"name":"bytes","nodeType":"ElementaryTypeName","src":"1312:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"_nonce","nameLocation":"1355:6:4","nodeType":"VariableDeclaration","scope":705,"src":"1348:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":651,"name":"uint64","nodeType":"ElementaryTypeName","src":"1348:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"_payload","nameLocation":"1386:8:4","nodeType":"VariableDeclaration","scope":705,"src":"1371:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":653,"name":"bytes","nodeType":"ElementaryTypeName","src":"1371:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1274:126:4"},"returnParameters":{"id":657,"nodeType":"ParameterList","parameters":[],"src":"1425:0:4"},"scope":1114,"src":"1256:825:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":716,"implemented":false,"kind":"function","modifiers":[],"name":"_blockingLzReceive","nameLocation":"2239:18:4","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"_srcChainId","nameLocation":"2274:11:4","nodeType":"VariableDeclaration","scope":716,"src":"2267:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":706,"name":"uint16","nodeType":"ElementaryTypeName","src":"2267:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"_srcAddress","nameLocation":"2308:11:4","nodeType":"VariableDeclaration","scope":716,"src":"2295:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":708,"name":"bytes","nodeType":"ElementaryTypeName","src":"2295:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"_nonce","nameLocation":"2336:6:4","nodeType":"VariableDeclaration","scope":716,"src":"2329:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":710,"name":"uint64","nodeType":"ElementaryTypeName","src":"2329:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"_payload","nameLocation":"2365:8:4","nodeType":"VariableDeclaration","scope":716,"src":"2352:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":712,"name":"bytes","nodeType":"ElementaryTypeName","src":"2352:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2257:122:4"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[],"src":"2396:0:4"},"scope":1114,"src":"2230:167:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":764,"nodeType":"Block","src":"2640:365:4","statements":[{"assignments":[732],"declarations":[{"constant":false,"id":732,"mutability":"mutable","name":"trustedRemote","nameLocation":"2663:13:4","nodeType":"VariableDeclaration","scope":764,"src":"2650:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":731,"name":"bytes","nodeType":"ElementaryTypeName","src":"2650:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":736,"initialValue":{"baseExpression":{"id":733,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"2679:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":735,"indexExpression":{"id":734,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"2699:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2679:32:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2650:61:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":738,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"2729:13:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2743:6:4","memberName":"length","nodeType":"MemberAccess","src":"2729:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2753:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a2064657374696e6174696f6e20636861696e206973206e6f742061207472757374656420736f75726365","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2756:50:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7","typeString":"literal_string \"LzApp: destination chain is not a trusted source\""},"value":"LzApp: destination chain is not a trusted source"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65511ce9fb02a17101879c9b581e54d0cddc37b781936a67d4a6ef307ad5afd7","typeString":"literal_string \"LzApp: destination chain is not a trusted source\""}],"id":737,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2721:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:86:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"ExpressionStatement","src":"2721:86:4"},{"expression":{"arguments":[{"id":746,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"2835:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":747,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"2848:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2857:6:4","memberName":"length","nodeType":"MemberAccess","src":"2848:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":745,"name":"_checkPayloadSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2817:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint16_$_t_uint256_$returns$__$","typeString":"function (uint16,uint256) view"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"ExpressionStatement","src":"2817:47:4"},{"expression":{"arguments":[{"id":756,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"2909:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":757,"name":"trustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"2922:13:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":758,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"2937:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":759,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"2947:14:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":760,"name":"_zroPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"2963:18:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":761,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2983:14:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":751,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"2874:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2885:4:4","memberName":"send","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"2874:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":754,"name":"_nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"2897:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2874:34:4","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint16_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (uint16,bytes memory,bytes memory,address payable,address,bytes memory) payable external"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:124:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":763,"nodeType":"ExpressionStatement","src":"2874:124:4"}]},"id":765,"implemented":true,"kind":"function","modifiers":[],"name":"_lzSend","nameLocation":"2412:7:4","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"_dstChainId","nameLocation":"2436:11:4","nodeType":"VariableDeclaration","scope":765,"src":"2429:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":717,"name":"uint16","nodeType":"ElementaryTypeName","src":"2429:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"_payload","nameLocation":"2470:8:4","nodeType":"VariableDeclaration","scope":765,"src":"2457:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":719,"name":"bytes","nodeType":"ElementaryTypeName","src":"2457:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":722,"mutability":"mutable","name":"_refundAddress","nameLocation":"2504:14:4","nodeType":"VariableDeclaration","scope":765,"src":"2488:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"2488:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"2536:18:4","nodeType":"VariableDeclaration","scope":765,"src":"2528:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"2528:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"_adapterParams","nameLocation":"2577:14:4","nodeType":"VariableDeclaration","scope":765,"src":"2564:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":725,"name":"bytes","nodeType":"ElementaryTypeName","src":"2564:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"_nativeFee","nameLocation":"2606:10:4","nodeType":"VariableDeclaration","scope":765,"src":"2601:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint","nodeType":"ElementaryTypeName","src":"2601:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2419:203:4"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"2640:0:4"},"scope":1114,"src":"2403:602:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":806,"nodeType":"Block","src":"3174:290:4","statements":[{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"providedGasLimit","nameLocation":"3189:16:4","nodeType":"VariableDeclaration","scope":806,"src":"3184:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint","nodeType":"ElementaryTypeName","src":"3184:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":781,"initialValue":{"arguments":[{"id":779,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"3221:14:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":778,"name":"_getGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"3208:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3208:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3184:52:4"},{"assignments":[783],"declarations":[{"constant":false,"id":783,"mutability":"mutable","name":"minGasLimit","nameLocation":"3251:11:4","nodeType":"VariableDeclaration","scope":806,"src":"3246:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint","nodeType":"ElementaryTypeName","src":"3246:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":789,"initialValue":{"baseExpression":{"baseExpression":{"id":784,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"3265:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"}},"id":786,"indexExpression":{"id":785,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3281:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3265:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":788,"indexExpression":{"id":787,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"3294:5:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3265:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3246:54:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":791,"name":"minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"3318:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3332:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3318:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a206d696e4761734c696d6974206e6f7420736574","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3335:28:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01","typeString":"literal_string \"LzApp: minGasLimit not set\""},"value":"LzApp: minGasLimit not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1c12f4398e5982835c19ea43197ffa859493a10bdc288c7cacc6a2d6df414b01","typeString":"literal_string \"LzApp: minGasLimit not set\""}],"id":790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3310:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3310:54:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"ExpressionStatement","src":"3310:54:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":798,"name":"providedGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3382:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"3402:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":800,"name":"_extraGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"3416:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3402:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3382:43:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20676173206c696d697420697320746f6f206c6f77","id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3427:29:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1","typeString":"literal_string \"LzApp: gas limit is too low\""},"value":"LzApp: gas limit is too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0cfbfb89d1bd60ee521649a7dce886710cc0992622f97b32d8e555a9c7073be1","typeString":"literal_string \"LzApp: gas limit is too low\""}],"id":797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3374:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3374:83:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":805,"nodeType":"ExpressionStatement","src":"3374:83:4"}]},"id":807,"implemented":true,"kind":"function","modifiers":[],"name":"_checkGasLimit","nameLocation":"3020:14:4","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"_dstChainId","nameLocation":"3051:11:4","nodeType":"VariableDeclaration","scope":807,"src":"3044:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":766,"name":"uint16","nodeType":"ElementaryTypeName","src":"3044:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"_type","nameLocation":"3079:5:4","nodeType":"VariableDeclaration","scope":807,"src":"3072:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":768,"name":"uint16","nodeType":"ElementaryTypeName","src":"3072:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"_adapterParams","nameLocation":"3107:14:4","nodeType":"VariableDeclaration","scope":807,"src":"3094:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":770,"name":"bytes","nodeType":"ElementaryTypeName","src":"3094:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"_extraGas","nameLocation":"3136:9:4","nodeType":"VariableDeclaration","scope":807,"src":"3131:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint","nodeType":"ElementaryTypeName","src":"3131:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3034:117:4"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"3174:0:4"},"scope":1114,"src":"3011:453:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":823,"nodeType":"Block","src":"3567:169:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":815,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"3585:14:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3600:6:4","memberName":"length","nodeType":"MemberAccess","src":"3585:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3334","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3610:2:4","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"3585:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a20696e76616c69642061646170746572506172616d73","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3614:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d","typeString":"literal_string \"LzApp: invalid adapterParams\""},"value":"LzApp: invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e109d210c1f1e494c2d731512d3fcc1ea597f69de36a4fccbe193d9ece27e6d","typeString":"literal_string \"LzApp: invalid adapterParams\""}],"id":814,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3577:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":821,"nodeType":"ExpressionStatement","src":"3577:68:4"},{"AST":{"nodeType":"YulBlock","src":"3664:66:4","statements":[{"nodeType":"YulAssignment","src":"3678:42:4","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"3700:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"3716:2:4","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3696:3:4"},"nodeType":"YulFunctionCall","src":"3696:23:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3690:5:4"},"nodeType":"YulFunctionCall","src":"3690:30:4"},"variableNames":[{"name":"gasLimit","nodeType":"YulIdentifier","src":"3678:8:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":809,"isOffset":false,"isSlot":false,"src":"3700:14:4","valueSize":1},{"declaration":812,"isOffset":false,"isSlot":false,"src":"3678:8:4","valueSize":1}],"id":822,"nodeType":"InlineAssembly","src":"3655:75:4"}]},"id":824,"implemented":true,"kind":"function","modifiers":[],"name":"_getGasLimit","nameLocation":"3479:12:4","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"_adapterParams","nameLocation":"3505:14:4","nodeType":"VariableDeclaration","scope":824,"src":"3492:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":808,"name":"bytes","nodeType":"ElementaryTypeName","src":"3492:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3491:29:4"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"gasLimit","nameLocation":"3557:8:4","nodeType":"VariableDeclaration","scope":824,"src":"3552:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint","nodeType":"ElementaryTypeName","src":"3552:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3551:15:4"},"scope":1114,"src":"3470:266:4","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"3830:307:4","statements":[{"assignments":[832],"declarations":[{"constant":false,"id":832,"mutability":"mutable","name":"payloadSizeLimit","nameLocation":"3845:16:4","nodeType":"VariableDeclaration","scope":853,"src":"3840:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint","nodeType":"ElementaryTypeName","src":"3840:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":836,"initialValue":{"baseExpression":{"id":833,"name":"payloadSizeLimitLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"3864:22:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":835,"indexExpression":{"id":834,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"3887:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3864:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3840:59:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":837,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"3913:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3933:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3913:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":845,"nodeType":"IfStatement","src":"3909:135:4","trueBody":{"id":844,"nodeType":"Block","src":"3936:108:4","statements":[{"expression":{"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":840,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"3988:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":841,"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"4007:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3988:45:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":843,"nodeType":"ExpressionStatement","src":"3988:45:4"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":847,"name":"_payloadSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"4061:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":848,"name":"payloadSizeLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"4077:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4061:32:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a207061796c6f61642073697a6520697320746f6f206c61726765","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4095:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd","typeString":"literal_string \"LzApp: payload size is too large\""},"value":"LzApp: payload size is too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fdfeef12c0e20d028b50cab1ee288ba9867f56b726ecc8cd0c9ed3048ec177dd","typeString":"literal_string \"LzApp: payload size is too large\""}],"id":846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4053:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4053:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"4053:77:4"}]},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"_checkPayloadSize","nameLocation":"3751:17:4","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"_dstChainId","nameLocation":"3776:11:4","nodeType":"VariableDeclaration","scope":854,"src":"3769:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":825,"name":"uint16","nodeType":"ElementaryTypeName","src":"3769:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"_payloadSize","nameLocation":"3794:12:4","nodeType":"VariableDeclaration","scope":854,"src":"3789:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint","nodeType":"ElementaryTypeName","src":"3789:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3768:39:4"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[],"src":"3830:0:4"},"scope":1114,"src":"3742:395:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":878,"nodeType":"Block","src":"4394:92:4","statements":[{"expression":{"arguments":[{"id":869,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"4432:8:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":870,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"4442:8:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[{"id":873,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4460:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_LzApp_$1114","typeString":"contract LzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LzApp_$1114","typeString":"contract LzApp"}],"id":872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4452:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"4452:7:4","typeDescriptions":{}}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4452:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"_configType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4467:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":867,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4411:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4422:9:4","memberName":"getConfig","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"4411:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint16_$_t_uint16_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint16,uint16,address,uint256) view external returns (bytes memory)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4411:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":866,"id":877,"nodeType":"Return","src":"4404:75:4"}]},"functionSelector":"f5ecbdbc","id":879,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"4248:9:4","nodeType":"FunctionDefinition","parameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"_version","nameLocation":"4274:8:4","nodeType":"VariableDeclaration","scope":879,"src":"4267:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":855,"name":"uint16","nodeType":"ElementaryTypeName","src":"4267:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"_chainId","nameLocation":"4299:8:4","nodeType":"VariableDeclaration","scope":879,"src":"4292:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":857,"name":"uint16","nodeType":"ElementaryTypeName","src":"4292:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"4317:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"4317:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"_configType","nameLocation":"4339:11:4","nodeType":"VariableDeclaration","scope":879,"src":"4334:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint","nodeType":"ElementaryTypeName","src":"4334:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4257:99:4"},"returnParameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"4380:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":864,"name":"bytes","nodeType":"ElementaryTypeName","src":"4380:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4379:14:4"},"scope":1114,"src":"4239:247:4","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1527],"body":{"id":902,"nodeType":"Block","src":"4706:79:4","statements":[{"expression":{"arguments":[{"id":896,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"4737:8:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":897,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"4747:8:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":898,"name":"_configType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"4757:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":899,"name":"_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"4770:7:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":893,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4716:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4727:9:4","memberName":"setConfig","nodeType":"MemberAccess","referencedDeclaration":1527,"src":"4716:20:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,uint16,uint256,bytes memory) external"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4716:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":901,"nodeType":"ExpressionStatement","src":"4716:62:4"}]},"functionSelector":"cbed8b9c","id":903,"implemented":true,"kind":"function","modifiers":[{"id":891,"kind":"modifierInvocation","modifierName":{"id":890,"name":"onlyOwner","nameLocations":["4696:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4696:9:4"},"nodeType":"ModifierInvocation","src":"4696:9:4"}],"name":"setConfig","nameLocation":"4554:9:4","nodeType":"FunctionDefinition","overrides":{"id":889,"nodeType":"OverrideSpecifier","overrides":[],"src":"4687:8:4"},"parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"_version","nameLocation":"4580:8:4","nodeType":"VariableDeclaration","scope":903,"src":"4573:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":880,"name":"uint16","nodeType":"ElementaryTypeName","src":"4573:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":883,"mutability":"mutable","name":"_chainId","nameLocation":"4605:8:4","nodeType":"VariableDeclaration","scope":903,"src":"4598:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":882,"name":"uint16","nodeType":"ElementaryTypeName","src":"4598:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"_configType","nameLocation":"4628:11:4","nodeType":"VariableDeclaration","scope":903,"src":"4623:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint","nodeType":"ElementaryTypeName","src":"4623:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"_config","nameLocation":"4664:7:4","nodeType":"VariableDeclaration","scope":903,"src":"4649:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":886,"name":"bytes","nodeType":"ElementaryTypeName","src":"4649:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4563:114:4"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"4706:0:4"},"scope":1114,"src":"4545:240:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1532],"body":{"id":917,"nodeType":"Block","src":"4860:52:4","statements":[{"expression":{"arguments":[{"id":914,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"4896:8:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":911,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4870:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4881:14:4","memberName":"setSendVersion","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"4870:25:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16) external"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"ExpressionStatement","src":"4870:35:4"}]},"functionSelector":"07e0db17","id":918,"implemented":true,"kind":"function","modifiers":[{"id":909,"kind":"modifierInvocation","modifierName":{"id":908,"name":"onlyOwner","nameLocations":["4850:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4850:9:4"},"nodeType":"ModifierInvocation","src":"4850:9:4"}],"name":"setSendVersion","nameLocation":"4800:14:4","nodeType":"FunctionDefinition","overrides":{"id":907,"nodeType":"OverrideSpecifier","overrides":[],"src":"4841:8:4"},"parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"_version","nameLocation":"4822:8:4","nodeType":"VariableDeclaration","scope":918,"src":"4815:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":904,"name":"uint16","nodeType":"ElementaryTypeName","src":"4815:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4814:17:4"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[],"src":"4860:0:4"},"scope":1114,"src":"4791:121:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1537],"body":{"id":932,"nodeType":"Block","src":"4990:55:4","statements":[{"expression":{"arguments":[{"id":929,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5029:8:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":926,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"5000:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5011:17:4","memberName":"setReceiveVersion","nodeType":"MemberAccess","referencedDeclaration":1537,"src":"5000:28:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$returns$__$","typeString":"function (uint16) external"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5000:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"ExpressionStatement","src":"5000:38:4"}]},"functionSelector":"10ddb137","id":933,"implemented":true,"kind":"function","modifiers":[{"id":924,"kind":"modifierInvocation","modifierName":{"id":923,"name":"onlyOwner","nameLocations":["4980:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4980:9:4"},"nodeType":"ModifierInvocation","src":"4980:9:4"}],"name":"setReceiveVersion","nameLocation":"4927:17:4","nodeType":"FunctionDefinition","overrides":{"id":922,"nodeType":"OverrideSpecifier","overrides":[],"src":"4971:8:4"},"parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"_version","nameLocation":"4952:8:4","nodeType":"VariableDeclaration","scope":933,"src":"4945:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":919,"name":"uint16","nodeType":"ElementaryTypeName","src":"4945:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4944:17:4"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"4990:0:4"},"scope":1114,"src":"4918:127:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1544],"body":{"id":950,"nodeType":"Block","src":"5155:72:4","statements":[{"expression":{"arguments":[{"id":946,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"5195:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":947,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"5208:11:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":943,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"5165:10:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpoint_$1500","typeString":"contract ILayerZeroEndpoint"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5176:18:4","memberName":"forceResumeReceive","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"5165:29:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory) external"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5165:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"5165:55:4"}]},"functionSelector":"42d65a8d","id":951,"implemented":true,"kind":"function","modifiers":[{"id":941,"kind":"modifierInvocation","modifierName":{"id":940,"name":"onlyOwner","nameLocations":["5145:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5145:9:4"},"nodeType":"ModifierInvocation","src":"5145:9:4"}],"name":"forceResumeReceive","nameLocation":"5060:18:4","nodeType":"FunctionDefinition","overrides":{"id":939,"nodeType":"OverrideSpecifier","overrides":[],"src":"5136:8:4"},"parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"_srcChainId","nameLocation":"5086:11:4","nodeType":"VariableDeclaration","scope":951,"src":"5079:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":934,"name":"uint16","nodeType":"ElementaryTypeName","src":"5079:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"_srcAddress","nameLocation":"5114:11:4","nodeType":"VariableDeclaration","scope":951,"src":"5099:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":936,"name":"bytes","nodeType":"ElementaryTypeName","src":"5099:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5078:48:4"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"5155:0:4"},"scope":1114,"src":"5051:176:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":971,"nodeType":"Block","src":"5460:114:4","statements":[{"expression":{"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":960,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"5470:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":962,"indexExpression":{"id":961,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"5490:14:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5470:35:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":963,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"5508:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"5470:43:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":965,"nodeType":"ExpressionStatement","src":"5470:43:4"},{"eventCall":{"arguments":[{"id":967,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"5545:14:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":968,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"5561:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":966,"name":"SetTrustedRemote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5528:16:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5528:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"EmitStatement","src":"5523:44:4"}]},"functionSelector":"eb8d72b7","id":972,"implemented":true,"kind":"function","modifiers":[{"id":958,"kind":"modifierInvocation","modifierName":{"id":957,"name":"onlyOwner","nameLocations":["5450:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5450:9:4"},"nodeType":"ModifierInvocation","src":"5450:9:4"}],"name":"setTrustedRemote","nameLocation":"5379:16:4","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5403:14:4","nodeType":"VariableDeclaration","scope":972,"src":"5396:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":952,"name":"uint16","nodeType":"ElementaryTypeName","src":"5396:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"_path","nameLocation":"5434:5:4","nodeType":"VariableDeclaration","scope":972,"src":"5419:20:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":954,"name":"bytes","nodeType":"ElementaryTypeName","src":"5419:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5395:45:4"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[],"src":"5460:0:4"},"scope":1114,"src":"5370:204:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":999,"nodeType":"Block","src":"5686:172:4","statements":[{"expression":{"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":981,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"5696:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":983,"indexExpression":{"id":982,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5716:14:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5696:35:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":986,"name":"_remoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"5751:14:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[{"id":989,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5775:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_LzApp_$1114","typeString":"contract LzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LzApp_$1114","typeString":"contract LzApp"}],"id":988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5767:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"5767:7:4","typeDescriptions":{}}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":984,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5734:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5738:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"5734:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5734:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5696:85:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":993,"nodeType":"ExpressionStatement","src":"5696:85:4"},{"eventCall":{"arguments":[{"id":995,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5820:14:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":996,"name":"_remoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"5836:14:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":994,"name":"SetTrustedRemoteAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5796:23:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5796:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":998,"nodeType":"EmitStatement","src":"5791:60:4"}]},"functionSelector":"a6c3d165","id":1000,"implemented":true,"kind":"function","modifiers":[{"id":979,"kind":"modifierInvocation","modifierName":{"id":978,"name":"onlyOwner","nameLocations":["5676:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5676:9:4"},"nodeType":"ModifierInvocation","src":"5676:9:4"}],"name":"setTrustedRemoteAddress","nameLocation":"5589:23:4","nodeType":"FunctionDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5620:14:4","nodeType":"VariableDeclaration","scope":1000,"src":"5613:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":973,"name":"uint16","nodeType":"ElementaryTypeName","src":"5613:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"_remoteAddress","nameLocation":"5651:14:4","nodeType":"VariableDeclaration","scope":1000,"src":"5636:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":975,"name":"bytes","nodeType":"ElementaryTypeName","src":"5636:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5612:54:4"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"5686:0:4"},"scope":1114,"src":"5580:278:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1030,"nodeType":"Block","src":"5957:233:4","statements":[{"assignments":[1008],"declarations":[{"constant":false,"id":1008,"mutability":"mutable","name":"path","nameLocation":"5980:4:4","nodeType":"VariableDeclaration","scope":1030,"src":"5967:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1007,"name":"bytes","nodeType":"ElementaryTypeName","src":"5967:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1012,"initialValue":{"baseExpression":{"id":1009,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"5987:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":1011,"indexExpression":{"id":1010,"name":"_remoteChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"6007:14:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5987:35:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5967:55:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1014,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"6040:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6045:6:4","memberName":"length","nodeType":"MemberAccess","src":"6040:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6055:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6040:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c7a4170703a206e6f20747275737465642070617468207265636f7264","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6058:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552","typeString":"literal_string \"LzApp: no trusted path record\""},"value":"LzApp: no trusted path record"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_090ffd986411f3003f8dc74b3284ca36e66b7183a1b08562ef7e5313ae219552","typeString":"literal_string \"LzApp: no trusted path record\""}],"id":1013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6032:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6032:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1020,"nodeType":"ExpressionStatement","src":"6032:58:4"},{"expression":{"arguments":[{"hexValue":"30","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6118:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1024,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"6121:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6126:6:4","memberName":"length","nodeType":"MemberAccess","src":"6121:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3230","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6135:2:4","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"6121:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1021,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"6107:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6112:5:4","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6107:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$attached_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6107:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1006,"id":1029,"nodeType":"Return","src":"6100:38:4"}]},"functionSelector":"9f38369a","id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"getTrustedRemoteAddress","nameLocation":"5873:23:4","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"_remoteChainId","nameLocation":"5904:14:4","nodeType":"VariableDeclaration","scope":1031,"src":"5897:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1001,"name":"uint16","nodeType":"ElementaryTypeName","src":"5897:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5896:23:4"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"5943:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1004,"name":"bytes","nodeType":"ElementaryTypeName","src":"5943:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5942:14:4"},"scope":1114,"src":"5864:326:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1046,"nodeType":"Block","src":"6255:74:4","statements":[{"expression":{"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1038,"name":"precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6265:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1039,"name":"_precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"6276:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6265:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1041,"nodeType":"ExpressionStatement","src":"6265:20:4"},{"eventCall":{"arguments":[{"id":1043,"name":"_precrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"6312:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1042,"name":"SetPrecrime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6300:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6300:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1045,"nodeType":"EmitStatement","src":"6295:27:4"}]},"functionSelector":"baf3292d","id":1047,"implemented":true,"kind":"function","modifiers":[{"id":1036,"kind":"modifierInvocation","modifierName":{"id":1035,"name":"onlyOwner","nameLocations":["6245:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"6245:9:4"},"nodeType":"ModifierInvocation","src":"6245:9:4"}],"name":"setPrecrime","nameLocation":"6205:11:4","nodeType":"FunctionDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"_precrime","nameLocation":"6225:9:4","nodeType":"VariableDeclaration","scope":1047,"src":"6217:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6216:19:4"},"returnParameters":{"id":1037,"nodeType":"ParameterList","parameters":[],"src":"6255:0:4"},"scope":1114,"src":"6196:133:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1072,"nodeType":"Block","src":"6460:130:4","statements":[{"expression":{"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1058,"name":"minDstGasLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"6470:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_uint16_$_t_uint256_$_$","typeString":"mapping(uint16 => mapping(uint16 => uint256))"}},"id":1061,"indexExpression":{"id":1059,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"6486:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6470:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":1062,"indexExpression":{"id":1060,"name":"_packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"6499:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6470:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1063,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"6514:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6470:51:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1065,"nodeType":"ExpressionStatement","src":"6470:51:4"},{"eventCall":{"arguments":[{"id":1067,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"6549:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1068,"name":"_packetType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"6562:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1069,"name":"_minGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"6575:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1066,"name":"SetMinDstGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"6536:12:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_uint16_$_t_uint256_$returns$__$","typeString":"function (uint16,uint16,uint256)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6536:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1071,"nodeType":"EmitStatement","src":"6531:52:4"}]},"functionSelector":"df2a5b3b","id":1073,"implemented":true,"kind":"function","modifiers":[{"id":1056,"kind":"modifierInvocation","modifierName":{"id":1055,"name":"onlyOwner","nameLocations":["6450:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"6450:9:4"},"nodeType":"ModifierInvocation","src":"6450:9:4"}],"name":"setMinDstGas","nameLocation":"6344:12:4","nodeType":"FunctionDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"_dstChainId","nameLocation":"6373:11:4","nodeType":"VariableDeclaration","scope":1073,"src":"6366:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1048,"name":"uint16","nodeType":"ElementaryTypeName","src":"6366:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"_packetType","nameLocation":"6401:11:4","nodeType":"VariableDeclaration","scope":1073,"src":"6394:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1050,"name":"uint16","nodeType":"ElementaryTypeName","src":"6394:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"_minGas","nameLocation":"6427:7:4","nodeType":"VariableDeclaration","scope":1073,"src":"6422:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint","nodeType":"ElementaryTypeName","src":"6422:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6356:84:4"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[],"src":"6460:0:4"},"scope":1114,"src":"6335:255:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1088,"nodeType":"Block","src":"6729:60:4","statements":[{"expression":{"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1082,"name":"payloadSizeLimitLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6739:22:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_uint256_$","typeString":"mapping(uint16 => uint256)"}},"id":1084,"indexExpression":{"id":1083,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"6762:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6739:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1085,"name":"_size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"6777:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6739:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1087,"nodeType":"ExpressionStatement","src":"6739:43:4"}]},"functionSelector":"0df37483","id":1089,"implemented":true,"kind":"function","modifiers":[{"id":1080,"kind":"modifierInvocation","modifierName":{"id":1079,"name":"onlyOwner","nameLocations":["6719:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"6719:9:4"},"nodeType":"ModifierInvocation","src":"6719:9:4"}],"name":"setPayloadSizeLimit","nameLocation":"6658:19:4","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"_dstChainId","nameLocation":"6685:11:4","nodeType":"VariableDeclaration","scope":1089,"src":"6678:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1074,"name":"uint16","nodeType":"ElementaryTypeName","src":"6678:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"_size","nameLocation":"6703:5:4","nodeType":"VariableDeclaration","scope":1089,"src":"6698:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint","nodeType":"ElementaryTypeName","src":"6698:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6677:32:4"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"6729:0:4"},"scope":1114,"src":"6649:140:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1112,"nodeType":"Block","src":"6986:145:4","statements":[{"assignments":[1099],"declarations":[{"constant":false,"id":1099,"mutability":"mutable","name":"trustedSource","nameLocation":"7009:13:4","nodeType":"VariableDeclaration","scope":1112,"src":"6996:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1098,"name":"bytes","nodeType":"ElementaryTypeName","src":"6996:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1103,"initialValue":{"baseExpression":{"id":1100,"name":"trustedRemoteLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7025:19:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_bytes_storage_$","typeString":"mapping(uint16 => bytes storage ref)"}},"id":1102,"indexExpression":{"id":1101,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"7045:11:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7025:32:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6996:61:4"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1105,"name":"trustedSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"7084:13:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1104,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7074:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7074:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1108,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"7112:11:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1107,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7102:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7074:50:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1097,"id":1111,"nodeType":"Return","src":"7067:57:4"}]},"functionSelector":"3d8b38f6","id":1113,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedRemote","nameLocation":"6893:15:4","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"_srcChainId","nameLocation":"6916:11:4","nodeType":"VariableDeclaration","scope":1113,"src":"6909:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1090,"name":"uint16","nodeType":"ElementaryTypeName","src":"6909:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"_srcAddress","nameLocation":"6944:11:4","nodeType":"VariableDeclaration","scope":1113,"src":"6929:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1092,"name":"bytes","nodeType":"ElementaryTypeName","src":"6929:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6908:48:4"},"returnParameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1113,"src":"6980:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1095,"name":"bool","nodeType":"ElementaryTypeName","src":"6980:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6979:6:4"},"scope":1114,"src":"6884:247:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1115,"src":"345:6788:4","usedErrors":[],"usedEvents":[13,614,620,626,634]}],"src":"33:7101:4"},"id":4},"contracts/lzApp/NonblockingLzApp.sol":{"ast":{"absolutePath":"contracts/lzApp/NonblockingLzApp.sol","exportedSymbols":{"BytesLib":[475],"Context":[142],"ExcessivelySafeCall":[572],"ILayerZeroEndpoint":[1500],"ILayerZeroReceiver":[1514],"ILayerZeroUserApplicationConfig":[1545],"LzApp":[1114],"NonblockingLzApp":[1355],"Ownable":[112]},"id":1356,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1116,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:5"},{"absolutePath":"contracts/lzApp/LzApp.sol","file":"./LzApp.sol","id":1117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1356,"sourceUnit":1115,"src":"58:21:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/ExcessivelySafeCall.sol","file":"../libraries/ExcessivelySafeCall.sol","id":1118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1356,"sourceUnit":573,"src":"80:46:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1119,"name":"LzApp","nameLocations":["511:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":1114,"src":"511:5:5"},"id":1120,"nodeType":"InheritanceSpecifier","src":"511:5:5"}],"canonicalName":"NonblockingLzApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":1355,"linearizedBaseContracts":[1355,1114,1545,1514,112,142],"name":"NonblockingLzApp","nameLocation":"491:16:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1123,"libraryName":{"id":1121,"name":"ExcessivelySafeCall","nameLocations":["529:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":572,"src":"529:19:5"},"nodeType":"UsingForDirective","src":"523:38:5","typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"553:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1131,"nodeType":"Block","src":"615:2:5","statements":[]},"id":1132,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1128,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"604:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1129,"kind":"baseConstructorSpecifier","modifierName":{"id":1127,"name":"LzApp","nameLocations":["598:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":1114,"src":"598:5:5"},"nodeType":"ModifierInvocation","src":"598:16:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"_endpoint","nameLocation":"587:9:5","nodeType":"VariableDeclaration","scope":1132,"src":"579:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"578:19:5"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"615:0:5"},"scope":1355,"src":"567:50:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"functionSelector":"5b8c41e6","id":1140,"mutability":"mutable","name":"failedMessages","nameLocation":"702:14:5","nodeType":"VariableDeclaration","scope":1355,"src":"623:93:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"},"typeName":{"id":1139,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1133,"name":"uint16","nodeType":"ElementaryTypeName","src":"631:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"623:63:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1138,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1134,"name":"bytes","nodeType":"ElementaryTypeName","src":"649:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"641:44:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes => mapping(uint64 => bytes32))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1137,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1135,"name":"uint64","nodeType":"ElementaryTypeName","src":"666:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"658:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"676:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"e183f33de2837795525b4792ca4cd60535bd77c53b7e7030060bfcf5734d6b0c","id":1152,"name":"MessageFailed","nameLocation":"729:13:5","nodeType":"EventDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"indexed":false,"mutability":"mutable","name":"_srcChainId","nameLocation":"759:11:5","nodeType":"VariableDeclaration","scope":1152,"src":"752:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1141,"name":"uint16","nodeType":"ElementaryTypeName","src":"752:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1144,"indexed":false,"mutability":"mutable","name":"_srcAddress","nameLocation":"786:11:5","nodeType":"VariableDeclaration","scope":1152,"src":"780:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1143,"name":"bytes","nodeType":"ElementaryTypeName","src":"780:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1146,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"814:6:5","nodeType":"VariableDeclaration","scope":1152,"src":"807:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1145,"name":"uint64","nodeType":"ElementaryTypeName","src":"807:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1148,"indexed":false,"mutability":"mutable","name":"_payload","nameLocation":"836:8:5","nodeType":"VariableDeclaration","scope":1152,"src":"830:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1147,"name":"bytes","nodeType":"ElementaryTypeName","src":"830:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1150,"indexed":false,"mutability":"mutable","name":"_reason","nameLocation":"860:7:5","nodeType":"VariableDeclaration","scope":1152,"src":"854:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1149,"name":"bytes","nodeType":"ElementaryTypeName","src":"854:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"742:131:5"},"src":"723:151:5"},{"anonymous":false,"eventSelector":"c264d91f3adc5588250e1551f547752ca0cfa8f6b530d243b9f9f4cab10ea8e5","id":1162,"name":"RetryMessageSuccess","nameLocation":"885:19:5","nodeType":"EventDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"indexed":false,"mutability":"mutable","name":"_srcChainId","nameLocation":"921:11:5","nodeType":"VariableDeclaration","scope":1162,"src":"914:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1153,"name":"uint16","nodeType":"ElementaryTypeName","src":"914:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1156,"indexed":false,"mutability":"mutable","name":"_srcAddress","nameLocation":"948:11:5","nodeType":"VariableDeclaration","scope":1162,"src":"942:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1155,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1158,"indexed":false,"mutability":"mutable","name":"_nonce","nameLocation":"976:6:5","nodeType":"VariableDeclaration","scope":1162,"src":"969:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1157,"name":"uint64","nodeType":"ElementaryTypeName","src":"969:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1160,"indexed":false,"mutability":"mutable","name":"_payloadHash","nameLocation":"1000:12:5","nodeType":"VariableDeclaration","scope":1162,"src":"992:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"992:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"904:114:5"},"src":"879:140:5"},{"baseFunctions":[716],"body":{"id":1210,"nodeType":"Block","src":"1255:561:5","statements":[{"assignments":[1175,1177],"declarations":[{"constant":false,"id":1175,"mutability":"mutable","name":"success","nameLocation":"1271:7:5","nodeType":"VariableDeclaration","scope":1210,"src":"1266:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1174,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"reason","nameLocation":"1293:6:5","nodeType":"VariableDeclaration","scope":1210,"src":"1280:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1176,"name":"bytes","nodeType":"ElementaryTypeName","src":"1280:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1197,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1183,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"1350:7:5","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313530","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1373:3:5","typeDescriptions":{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},"value":"150"},{"arguments":[{"expression":{"expression":{"id":1188,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1430:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$1355","typeString":"contract NonblockingLzApp"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:20:5","memberName":"nonblockingLzReceive","nodeType":"MemberAccess","referencedDeclaration":1275,"src":"1430:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1456:8:5","memberName":"selector","nodeType":"MemberAccess","src":"1430:34:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1191,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"1482:11:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1192,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"1511:11:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1193,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"1540:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1194,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"1564:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1186,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1390:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1394:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1390:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1390:196:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_150_by_1","typeString":"int_const 150"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1180,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1311:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$1355","typeString":"contract NonblockingLzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NonblockingLzApp_$1355","typeString":"contract NonblockingLzApp"}],"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1303:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"1303:7:5","typeDescriptions":{}}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1303:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1317:19:5","memberName":"excessivelySafeCall","nodeType":"MemberAccess","referencedDeclaration":515,"src":"1303:33:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,uint256,uint16,bytes memory) returns (bool,bytes memory)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1303:293:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1265:331:5"},{"condition":{"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1610:8:5","subExpression":{"id":1198,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"1611:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1209,"nodeType":"IfStatement","src":"1606:204:5","trueBody":{"id":1208,"nodeType":"Block","src":"1620:190:5","statements":[{"expression":{"arguments":[{"id":1201,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"1671:11:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1202,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"1700:11:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1203,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"1729:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1204,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"1753:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1205,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"1779:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1200,"name":"_storeFailedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"1634:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory,bytes memory)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1634:165:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1207,"nodeType":"ExpressionStatement","src":"1634:165:5"}]}}]},"id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"_blockingLzReceive","nameLocation":"1088:18:5","nodeType":"FunctionDefinition","overrides":{"id":1172,"nodeType":"OverrideSpecifier","overrides":[],"src":"1246:8:5"},"parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"_srcChainId","nameLocation":"1123:11:5","nodeType":"VariableDeclaration","scope":1211,"src":"1116:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1163,"name":"uint16","nodeType":"ElementaryTypeName","src":"1116:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"_srcAddress","nameLocation":"1157:11:5","nodeType":"VariableDeclaration","scope":1211,"src":"1144:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1165,"name":"bytes","nodeType":"ElementaryTypeName","src":"1144:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"_nonce","nameLocation":"1185:6:5","nodeType":"VariableDeclaration","scope":1211,"src":"1178:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1167,"name":"uint64","nodeType":"ElementaryTypeName","src":"1178:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"_payload","nameLocation":"1214:8:5","nodeType":"VariableDeclaration","scope":1211,"src":"1201:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1169,"name":"bytes","nodeType":"ElementaryTypeName","src":"1201:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1106:122:5"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[],"src":"1255:0:5"},"scope":1355,"src":"1079:737:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1244,"nodeType":"Block","src":"2020:168:5","statements":[{"expression":{"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1224,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"2030:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":1228,"indexExpression":{"id":1225,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"2045:11:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2030:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":1229,"indexExpression":{"id":1226,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"2058:11:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2030:40:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":1230,"indexExpression":{"id":1227,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2071:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2030:48:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1232,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"2091:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1231,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2081:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2030:70:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1235,"nodeType":"ExpressionStatement","src":"2030:70:5"},{"eventCall":{"arguments":[{"id":1237,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"2129:11:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1238,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"2142:11:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1239,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2155:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1240,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"2163:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1241,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"2173:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1236,"name":"MessageFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"2115:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory,bytes memory)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2115:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1243,"nodeType":"EmitStatement","src":"2110:71:5"}]},"id":1245,"implemented":true,"kind":"function","modifiers":[],"name":"_storeFailedMessage","nameLocation":"1831:19:5","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"_srcChainId","nameLocation":"1867:11:5","nodeType":"VariableDeclaration","scope":1245,"src":"1860:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1212,"name":"uint16","nodeType":"ElementaryTypeName","src":"1860:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"_srcAddress","nameLocation":"1901:11:5","nodeType":"VariableDeclaration","scope":1245,"src":"1888:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1214,"name":"bytes","nodeType":"ElementaryTypeName","src":"1888:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"_nonce","nameLocation":"1929:6:5","nodeType":"VariableDeclaration","scope":1245,"src":"1922:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1216,"name":"uint64","nodeType":"ElementaryTypeName","src":"1922:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"_payload","nameLocation":"1958:8:5","nodeType":"VariableDeclaration","scope":1245,"src":"1945:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1218,"name":"bytes","nodeType":"ElementaryTypeName","src":"1945:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"_reason","nameLocation":"1989:7:5","nodeType":"VariableDeclaration","scope":1245,"src":"1976:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1220,"name":"bytes","nodeType":"ElementaryTypeName","src":"1976:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1850:152:5"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[],"src":"2020:0:5"},"scope":1355,"src":"1822:366:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1274,"nodeType":"Block","src":"2365:243:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1257,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"2433:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2433:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1261,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2457:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_NonblockingLzApp_$1355","typeString":"contract NonblockingLzApp"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NonblockingLzApp_$1355","typeString":"contract NonblockingLzApp"}],"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2449:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"2449:7:5","typeDescriptions":{}}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2433:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a2063616c6c6572206d757374206265204c7a417070","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2476:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa","typeString":"literal_string \"NonblockingLzApp: caller must be LzApp\""},"value":"NonblockingLzApp: caller must be LzApp"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_040dbcd22d0c850129389688c2109073ca44dde7f3a3f87432ca92b23d42a4fa","typeString":"literal_string \"NonblockingLzApp: caller must be LzApp\""}],"id":1256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2412:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2412:114:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1266,"nodeType":"ExpressionStatement","src":"2412:114:5"},{"expression":{"arguments":[{"id":1268,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"2558:11:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1269,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"2571:11:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1270,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"2584:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1271,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"2592:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1267,"name":"_nonblockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"2536:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2536:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1273,"nodeType":"ExpressionStatement","src":"2536:65:5"}]},"functionSelector":"66ad5c8a","id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"nonblockingLzReceive","nameLocation":"2203:20:5","nodeType":"FunctionDefinition","parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"_srcChainId","nameLocation":"2240:11:5","nodeType":"VariableDeclaration","scope":1275,"src":"2233:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1246,"name":"uint16","nodeType":"ElementaryTypeName","src":"2233:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"_srcAddress","nameLocation":"2276:11:5","nodeType":"VariableDeclaration","scope":1275,"src":"2261:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1248,"name":"bytes","nodeType":"ElementaryTypeName","src":"2261:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"_nonce","nameLocation":"2304:6:5","nodeType":"VariableDeclaration","scope":1275,"src":"2297:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1250,"name":"uint64","nodeType":"ElementaryTypeName","src":"2297:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"_payload","nameLocation":"2335:8:5","nodeType":"VariableDeclaration","scope":1275,"src":"2320:23:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1252,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2223:126:5"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"2365:0:5"},"scope":1355,"src":"2194:414:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"id":1286,"implemented":false,"kind":"function","modifiers":[],"name":"_nonblockingLzReceive","nameLocation":"2660:21:5","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"_srcChainId","nameLocation":"2698:11:5","nodeType":"VariableDeclaration","scope":1286,"src":"2691:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1276,"name":"uint16","nodeType":"ElementaryTypeName","src":"2691:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"_srcAddress","nameLocation":"2732:11:5","nodeType":"VariableDeclaration","scope":1286,"src":"2719:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1278,"name":"bytes","nodeType":"ElementaryTypeName","src":"2719:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"_nonce","nameLocation":"2760:6:5","nodeType":"VariableDeclaration","scope":1286,"src":"2753:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1280,"name":"uint64","nodeType":"ElementaryTypeName","src":"2753:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"_payload","nameLocation":"2789:8:5","nodeType":"VariableDeclaration","scope":1286,"src":"2776:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1282,"name":"bytes","nodeType":"ElementaryTypeName","src":"2776:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2681:122:5"},"returnParameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"2820:0:5"},"scope":1355,"src":"2651:170:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"2998:692:5","statements":[{"assignments":[1298],"declarations":[{"constant":false,"id":1298,"mutability":"mutable","name":"payloadHash","nameLocation":"3060:11:5","nodeType":"VariableDeclaration","scope":1353,"src":"3052:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3052:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1306,"initialValue":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1299,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"3074:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":1301,"indexExpression":{"id":1300,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"3089:11:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3074:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":1303,"indexExpression":{"id":1302,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"3102:11:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3074:40:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":1305,"indexExpression":{"id":1304,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"3115:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3074:48:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3052:70:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1308,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3153:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3176:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3168:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3168:7:5","typeDescriptions":{}}},"id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3153:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a206e6f2073746f726564206d657373616765","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3192:37:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894","typeString":"literal_string \"NonblockingLzApp: no stored message\""},"value":"NonblockingLzApp: no stored message"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f696afe693778252c14fa484dbc5c908ccf2058495ef32014aba88a3b963894","typeString":"literal_string \"NonblockingLzApp: no stored message\""}],"id":1307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3132:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3132:107:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1316,"nodeType":"ExpressionStatement","src":"3132:107:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1319,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"3280:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1318,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3270:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3270:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1321,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3293:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3270:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e626c6f636b696e674c7a4170703a20696e76616c6964207061796c6f6164","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3318:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3","typeString":"literal_string \"NonblockingLzApp: invalid payload\""},"value":"NonblockingLzApp: invalid payload"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e38e13663a917dea0c771faed9aebf77b2adba5435a5cc4f7207d4f2c63ce6a3","typeString":"literal_string \"NonblockingLzApp: invalid payload\""}],"id":1317,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3249:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:114:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1325,"nodeType":"ExpressionStatement","src":"3249:114:5"},{"expression":{"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1326,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"3409:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$_$","typeString":"mapping(uint16 => mapping(bytes memory => mapping(uint64 => bytes32)))"}},"id":1330,"indexExpression":{"id":1327,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"3424:11:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3409:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_mapping$_t_uint64_$_t_bytes32_$_$","typeString":"mapping(bytes memory => mapping(uint64 => bytes32))"}},"id":1331,"indexExpression":{"id":1328,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"3437:11:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3409:40:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_bytes32_$","typeString":"mapping(uint64 => bytes32)"}},"id":1332,"indexExpression":{"id":1329,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"3450:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3409:48:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3468:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3460:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3460:7:5","typeDescriptions":{}}},"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3460:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3409:61:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1338,"nodeType":"ExpressionStatement","src":"3409:61:5"},{"expression":{"arguments":[{"id":1340,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"3559:11:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1341,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"3572:11:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1342,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"3585:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1343,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"3593:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1339,"name":"_nonblockingLzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"3537:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3537:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1345,"nodeType":"ExpressionStatement","src":"3537:65:5"},{"eventCall":{"arguments":[{"id":1347,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"3637:11:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1348,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"3650:11:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1349,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"3663:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1350,"name":"payloadHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"3671:11:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1346,"name":"RetryMessageSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"3617:19:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes32_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes32)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3617:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1352,"nodeType":"EmitStatement","src":"3612:71:5"}]},"functionSelector":"d1deba1f","id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"retryMessage","nameLocation":"2836:12:5","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"_srcChainId","nameLocation":"2865:11:5","nodeType":"VariableDeclaration","scope":1354,"src":"2858:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1287,"name":"uint16","nodeType":"ElementaryTypeName","src":"2858:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"_srcAddress","nameLocation":"2901:11:5","nodeType":"VariableDeclaration","scope":1354,"src":"2886:26:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1289,"name":"bytes","nodeType":"ElementaryTypeName","src":"2886:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"_nonce","nameLocation":"2929:6:5","nodeType":"VariableDeclaration","scope":1354,"src":"2922:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1291,"name":"uint64","nodeType":"ElementaryTypeName","src":"2922:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"_payload","nameLocation":"2960:8:5","nodeType":"VariableDeclaration","scope":1354,"src":"2945:23:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1293,"name":"bytes","nodeType":"ElementaryTypeName","src":"2945:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2848:126:5"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[],"src":"2998:0:5"},"scope":1355,"src":"2827:863:5","stateMutability":"payable","virtual":true,"visibility":"public"}],"scope":1356,"src":"473:3219:5","usedErrors":[],"usedEvents":[13,614,620,626,634,1152,1162]}],"src":"33:3660:5"},"id":5},"contracts/lzApp/interfaces/ILayerZeroEndpoint.sol":{"ast":{"absolutePath":"contracts/lzApp/interfaces/ILayerZeroEndpoint.sol","exportedSymbols":{"ILayerZeroEndpoint":[1500],"ILayerZeroUserApplicationConfig":[1545]},"id":1501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1357,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:6"},{"absolutePath":"contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","file":"./ILayerZeroUserApplicationConfig.sol","id":1358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1501,"sourceUnit":1546,"src":"59:47:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1359,"name":"ILayerZeroUserApplicationConfig","nameLocations":["140:31:6"],"nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"140:31:6"},"id":1360,"nodeType":"InheritanceSpecifier","src":"140:31:6"}],"canonicalName":"ILayerZeroEndpoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1500,"linearizedBaseContracts":[1500,1545],"name":"ILayerZeroEndpoint","nameLocation":"118:18:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"c5803100","id":1375,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"923:4:6","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"_dstChainId","nameLocation":"944:11:6","nodeType":"VariableDeclaration","scope":1375,"src":"937:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1361,"name":"uint16","nodeType":"ElementaryTypeName","src":"937:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"_destination","nameLocation":"980:12:6","nodeType":"VariableDeclaration","scope":1375,"src":"965:27:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1363,"name":"bytes","nodeType":"ElementaryTypeName","src":"965:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"_payload","nameLocation":"1017:8:6","nodeType":"VariableDeclaration","scope":1375,"src":"1002:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1365,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"_refundAddress","nameLocation":"1051:14:6","nodeType":"VariableDeclaration","scope":1375,"src":"1035:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"1035:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"1083:18:6","nodeType":"VariableDeclaration","scope":1375,"src":"1075:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"_adapterParams","nameLocation":"1126:14:6","nodeType":"VariableDeclaration","scope":1375,"src":"1111:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1371,"name":"bytes","nodeType":"ElementaryTypeName","src":"1111:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"927:219:6"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[],"src":"1163:0:6"},"scope":1500,"src":"914:250:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"c2fa4813","id":1390,"implemented":false,"kind":"function","modifiers":[],"name":"receivePayload","nameLocation":"1656:14:6","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"_srcChainId","nameLocation":"1687:11:6","nodeType":"VariableDeclaration","scope":1390,"src":"1680:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1376,"name":"uint16","nodeType":"ElementaryTypeName","src":"1680:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"_srcAddress","nameLocation":"1723:11:6","nodeType":"VariableDeclaration","scope":1390,"src":"1708:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1378,"name":"bytes","nodeType":"ElementaryTypeName","src":"1708:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"_dstAddress","nameLocation":"1752:11:6","nodeType":"VariableDeclaration","scope":1390,"src":"1744:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"_nonce","nameLocation":"1780:6:6","nodeType":"VariableDeclaration","scope":1390,"src":"1773:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1382,"name":"uint64","nodeType":"ElementaryTypeName","src":"1773:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"_gasLimit","nameLocation":"1801:9:6","nodeType":"VariableDeclaration","scope":1390,"src":"1796:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint","nodeType":"ElementaryTypeName","src":"1796:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"_payload","nameLocation":"1835:8:6","nodeType":"VariableDeclaration","scope":1390,"src":"1820:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1386,"name":"bytes","nodeType":"ElementaryTypeName","src":"1820:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1670:179:6"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"1858:0:6"},"scope":1500,"src":"1647:212:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fdc07c70","id":1399,"implemented":false,"kind":"function","modifiers":[],"name":"getInboundNonce","nameLocation":"2095:15:6","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"_srcChainId","nameLocation":"2118:11:6","nodeType":"VariableDeclaration","scope":1399,"src":"2111:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1391,"name":"uint16","nodeType":"ElementaryTypeName","src":"2111:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"_srcAddress","nameLocation":"2146:11:6","nodeType":"VariableDeclaration","scope":1399,"src":"2131:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1393,"name":"bytes","nodeType":"ElementaryTypeName","src":"2131:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2110:48:6"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1399,"src":"2182:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1396,"name":"uint64","nodeType":"ElementaryTypeName","src":"2182:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2181:8:6"},"scope":1500,"src":"2086:104:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7a145748","id":1408,"implemented":false,"kind":"function","modifiers":[],"name":"getOutboundNonce","nameLocation":"2365:16:6","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"_dstChainId","nameLocation":"2389:11:6","nodeType":"VariableDeclaration","scope":1408,"src":"2382:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1400,"name":"uint16","nodeType":"ElementaryTypeName","src":"2382:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"_srcAddress","nameLocation":"2410:11:6","nodeType":"VariableDeclaration","scope":1408,"src":"2402:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"2402:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2381:41:6"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1408,"src":"2446:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1405,"name":"uint64","nodeType":"ElementaryTypeName","src":"2446:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2445:8:6"},"scope":1500,"src":"2356:98:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"40a7bb10","id":1425,"implemented":false,"kind":"function","modifiers":[],"name":"estimateFees","nameLocation":"2977:12:6","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"_dstChainId","nameLocation":"3006:11:6","nodeType":"VariableDeclaration","scope":1425,"src":"2999:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1409,"name":"uint16","nodeType":"ElementaryTypeName","src":"2999:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"_userApplication","nameLocation":"3035:16:6","nodeType":"VariableDeclaration","scope":1425,"src":"3027:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"3027:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"_payload","nameLocation":"3076:8:6","nodeType":"VariableDeclaration","scope":1425,"src":"3061:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1413,"name":"bytes","nodeType":"ElementaryTypeName","src":"3061:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"_payInZRO","nameLocation":"3099:9:6","nodeType":"VariableDeclaration","scope":1425,"src":"3094:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1415,"name":"bool","nodeType":"ElementaryTypeName","src":"3094:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"_adapterParam","nameLocation":"3133:13:6","nodeType":"VariableDeclaration","scope":1425,"src":"3118:28:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1417,"name":"bytes","nodeType":"ElementaryTypeName","src":"3118:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2989:163:6"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"nativeFee","nameLocation":"3181:9:6","nodeType":"VariableDeclaration","scope":1425,"src":"3176:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint","nodeType":"ElementaryTypeName","src":"3176:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"zroFee","nameLocation":"3197:6:6","nodeType":"VariableDeclaration","scope":1425,"src":"3192:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint","nodeType":"ElementaryTypeName","src":"3192:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3175:29:6"},"scope":1500,"src":"2968:237:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3408e470","id":1430,"implemented":false,"kind":"function","modifiers":[],"name":"getChainId","nameLocation":"3283:10:6","nodeType":"FunctionDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[],"src":"3293:2:6"},"returnParameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1430,"src":"3319:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1427,"name":"uint16","nodeType":"ElementaryTypeName","src":"3319:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3318:8:6"},"scope":1500,"src":"3274:53:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aaff5f16","id":1439,"implemented":false,"kind":"function","modifiers":[],"name":"retryPayload","nameLocation":"3593:12:6","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"_srcChainId","nameLocation":"3622:11:6","nodeType":"VariableDeclaration","scope":1439,"src":"3615:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1431,"name":"uint16","nodeType":"ElementaryTypeName","src":"3615:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"_srcAddress","nameLocation":"3658:11:6","nodeType":"VariableDeclaration","scope":1439,"src":"3643:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1433,"name":"bytes","nodeType":"ElementaryTypeName","src":"3643:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1436,"mutability":"mutable","name":"_payload","nameLocation":"3694:8:6","nodeType":"VariableDeclaration","scope":1439,"src":"3679:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1435,"name":"bytes","nodeType":"ElementaryTypeName","src":"3679:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3605:103:6"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[],"src":"3717:0:6"},"scope":1500,"src":"3584:134:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0eaf6ea6","id":1448,"implemented":false,"kind":"function","modifiers":[],"name":"hasStoredPayload","nameLocation":"3930:16:6","nodeType":"FunctionDefinition","parameters":{"id":1444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"_srcChainId","nameLocation":"3954:11:6","nodeType":"VariableDeclaration","scope":1448,"src":"3947:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1440,"name":"uint16","nodeType":"ElementaryTypeName","src":"3947:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"_srcAddress","nameLocation":"3982:11:6","nodeType":"VariableDeclaration","scope":1448,"src":"3967:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1442,"name":"bytes","nodeType":"ElementaryTypeName","src":"3967:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3946:48:6"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1448,"src":"4018:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1445,"name":"bool","nodeType":"ElementaryTypeName","src":"4018:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4017:6:6"},"scope":1500,"src":"3921:103:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9c729da1","id":1455,"implemented":false,"kind":"function","modifiers":[],"name":"getSendLibraryAddress","nameLocation":"4182:21:6","nodeType":"FunctionDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"_userApplication","nameLocation":"4212:16:6","nodeType":"VariableDeclaration","scope":1455,"src":"4204:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"4204:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:26:6"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1455,"src":"4253:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4252:9:6"},"scope":1500,"src":"4173:89:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71ba2fd6","id":1462,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveLibraryAddress","nameLocation":"4422:24:6","nodeType":"FunctionDefinition","parameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"_userApplication","nameLocation":"4455:16:6","nodeType":"VariableDeclaration","scope":1462,"src":"4447:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"4447:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4446:26:6"},"returnParameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1462,"src":"4496:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"4496:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4495:9:6"},"scope":1500,"src":"4413:92:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e97a448a","id":1467,"implemented":false,"kind":"function","modifiers":[],"name":"isSendingPayload","nameLocation":"4642:16:6","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[],"src":"4658:2:6"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1467,"src":"4684:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1464,"name":"bool","nodeType":"ElementaryTypeName","src":"4684:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4683:6:6"},"scope":1500,"src":"4633:57:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ca066b35","id":1472,"implemented":false,"kind":"function","modifiers":[],"name":"isReceivingPayload","nameLocation":"4830:18:6","nodeType":"FunctionDefinition","parameters":{"id":1468,"nodeType":"ParameterList","parameters":[],"src":"4848:2:6"},"returnParameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1472,"src":"4874:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1469,"name":"bool","nodeType":"ElementaryTypeName","src":"4874:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4873:6:6"},"scope":1500,"src":"4821:59:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5ecbdbc","id":1485,"implemented":false,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"5287:9:6","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"_version","nameLocation":"5313:8:6","nodeType":"VariableDeclaration","scope":1485,"src":"5306:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1473,"name":"uint16","nodeType":"ElementaryTypeName","src":"5306:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"_chainId","nameLocation":"5338:8:6","nodeType":"VariableDeclaration","scope":1485,"src":"5331:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1475,"name":"uint16","nodeType":"ElementaryTypeName","src":"5331:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"_userApplication","nameLocation":"5364:16:6","nodeType":"VariableDeclaration","scope":1485,"src":"5356:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"5356:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1480,"mutability":"mutable","name":"_configType","nameLocation":"5395:11:6","nodeType":"VariableDeclaration","scope":1485,"src":"5390:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint","nodeType":"ElementaryTypeName","src":"5390:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5296:116:6"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1485,"src":"5436:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1482,"name":"bytes","nodeType":"ElementaryTypeName","src":"5436:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5435:14:6"},"scope":1500,"src":"5278:172:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"096568f6","id":1492,"implemented":false,"kind":"function","modifiers":[],"name":"getSendVersion","nameLocation":"5609:14:6","nodeType":"FunctionDefinition","parameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"_userApplication","nameLocation":"5632:16:6","nodeType":"VariableDeclaration","scope":1492,"src":"5624:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"5624:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5623:26:6"},"returnParameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1492,"src":"5673:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1489,"name":"uint16","nodeType":"ElementaryTypeName","src":"5673:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5672:8:6"},"scope":1500,"src":"5600:81:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"da1a7c9a","id":1499,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveVersion","nameLocation":"5845:17:6","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"_userApplication","nameLocation":"5871:16:6","nodeType":"VariableDeclaration","scope":1499,"src":"5863:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"5863:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5862:26:6"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1499,"src":"5912:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1496,"name":"uint16","nodeType":"ElementaryTypeName","src":"5912:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5911:8:6"},"scope":1500,"src":"5836:84:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1501,"src":"108:5814:6","usedErrors":[],"usedEvents":[]}],"src":"33:5890:6"},"id":6},"contracts/lzApp/interfaces/ILayerZeroReceiver.sol":{"ast":{"absolutePath":"contracts/lzApp/interfaces/ILayerZeroReceiver.sol","exportedSymbols":{"ILayerZeroReceiver":[1514]},"id":1515,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1502,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroReceiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1514,"linearizedBaseContracts":[1514],"name":"ILayerZeroReceiver","nameLocation":"69:18:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"001d3567","id":1513,"implemented":false,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"482:9:7","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"_srcChainId","nameLocation":"508:11:7","nodeType":"VariableDeclaration","scope":1513,"src":"501:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1503,"name":"uint16","nodeType":"ElementaryTypeName","src":"501:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"_srcAddress","nameLocation":"544:11:7","nodeType":"VariableDeclaration","scope":1513,"src":"529:26:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"529:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"_nonce","nameLocation":"572:6:7","nodeType":"VariableDeclaration","scope":1513,"src":"565:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1507,"name":"uint64","nodeType":"ElementaryTypeName","src":"565:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"_payload","nameLocation":"603:8:7","nodeType":"VariableDeclaration","scope":1513,"src":"588:23:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1509,"name":"bytes","nodeType":"ElementaryTypeName","src":"588:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"491:126:7"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[],"src":"626:0:7"},"scope":1514,"src":"473:154:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1515,"src":"59:570:7","usedErrors":[],"usedEvents":[]}],"src":"33:597:7"},"id":7},"contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"ast":{"absolutePath":"contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol","exportedSymbols":{"ILayerZeroUserApplicationConfig":[1545]},"id":1546,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1516,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"33:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroUserApplicationConfig","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1545,"linearizedBaseContracts":[1545],"name":"ILayerZeroUserApplicationConfig","nameLocation":"69:31:8","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cbed8b9c","id":1527,"implemented":false,"kind":"function","modifiers":[],"name":"setConfig","nameLocation":"512:9:8","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"_version","nameLocation":"538:8:8","nodeType":"VariableDeclaration","scope":1527,"src":"531:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1517,"name":"uint16","nodeType":"ElementaryTypeName","src":"531:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1520,"mutability":"mutable","name":"_chainId","nameLocation":"563:8:8","nodeType":"VariableDeclaration","scope":1527,"src":"556:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1519,"name":"uint16","nodeType":"ElementaryTypeName","src":"556:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"_configType","nameLocation":"586:11:8","nodeType":"VariableDeclaration","scope":1527,"src":"581:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint","nodeType":"ElementaryTypeName","src":"581:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1524,"mutability":"mutable","name":"_config","nameLocation":"622:7:8","nodeType":"VariableDeclaration","scope":1527,"src":"607:22:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1523,"name":"bytes","nodeType":"ElementaryTypeName","src":"607:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"521:114:8"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[],"src":"644:0:8"},"scope":1545,"src":"503:142:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"07e0db17","id":1532,"implemented":false,"kind":"function","modifiers":[],"name":"setSendVersion","nameLocation":"793:14:8","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"_version","nameLocation":"815:8:8","nodeType":"VariableDeclaration","scope":1532,"src":"808:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1528,"name":"uint16","nodeType":"ElementaryTypeName","src":"808:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"807:17:8"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[],"src":"833:0:8"},"scope":1545,"src":"784:50:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"10ddb137","id":1537,"implemented":false,"kind":"function","modifiers":[],"name":"setReceiveVersion","nameLocation":"987:17:8","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"_version","nameLocation":"1012:8:8","nodeType":"VariableDeclaration","scope":1537,"src":"1005:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1533,"name":"uint16","nodeType":"ElementaryTypeName","src":"1005:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1004:17:8"},"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[],"src":"1030:0:8"},"scope":1545,"src":"978:53:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"42d65a8d","id":1544,"implemented":false,"kind":"function","modifiers":[],"name":"forceResumeReceive","nameLocation":"1309:18:8","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"_srcChainId","nameLocation":"1335:11:8","nodeType":"VariableDeclaration","scope":1544,"src":"1328:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1538,"name":"uint16","nodeType":"ElementaryTypeName","src":"1328:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"_srcAddress","nameLocation":"1363:11:8","nodeType":"VariableDeclaration","scope":1544,"src":"1348:26:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1540,"name":"bytes","nodeType":"ElementaryTypeName","src":"1348:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1327:48:8"},"returnParameters":{"id":1543,"nodeType":"ParameterList","parameters":[],"src":"1384:0:8"},"scope":1545,"src":"1300:85:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1546,"src":"59:1328:8","usedErrors":[],"usedEvents":[]}],"src":"33:1355:8"},"id":8},"contracts/lzApp/libs/LzLib.sol":{"ast":{"absolutePath":"contracts/lzApp/libs/LzLib.sol","exportedSymbols":{"LzLib":[1770]},"id":1771,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1547,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"38:24:9"},{"id":1548,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"63:33:9"},{"abstract":false,"baseContracts":[],"canonicalName":"LzLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1770,"linearizedBaseContracts":[1770],"name":"LzLib","nameLocation":"106:5:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"LzLib.CallParams","id":1553,"members":[{"constant":false,"id":1550,"mutability":"mutable","name":"refundAddress","nameLocation":"193:13:9","nodeType":"VariableDeclaration","scope":1553,"src":"177:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"177:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"zroPaymentAddress","nameLocation":"224:17:9","nodeType":"VariableDeclaration","scope":1553,"src":"216:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CallParams","nameLocation":"156:10:9","nodeType":"StructDefinition","scope":1770,"src":"149:99:9","visibility":"public"},{"canonicalName":"LzLib.AirdropParams","id":1558,"members":[{"constant":false,"id":1555,"mutability":"mutable","name":"airdropAmount","nameLocation":"402:13:9","nodeType":"VariableDeclaration","scope":1558,"src":"397:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint","nodeType":"ElementaryTypeName","src":"397:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1557,"mutability":"mutable","name":"airdropAddress","nameLocation":"433:14:9","nodeType":"VariableDeclaration","scope":1558,"src":"425:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"425:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"AirdropParams","nameLocation":"373:13:9","nodeType":"StructDefinition","scope":1770,"src":"366:88:9","visibility":"public"},{"body":{"id":1596,"nodeType":"Block","src":"600:284:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1568,"name":"_airdropParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"614:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1558_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"629:13:9","memberName":"airdropAmount","nodeType":"MemberAccess","referencedDeclaration":1555,"src":"614:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"646:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"614:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1572,"name":"_airdropParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"651:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1558_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"666:14:9","memberName":"airdropAddress","nodeType":"MemberAccess","referencedDeclaration":1557,"src":"651:29:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"307830","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"692:3:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"684:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"684:7:9","typeDescriptions":{}}},"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"684:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"651:45:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"614:82:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1594,"nodeType":"Block","src":"783:95:9","statements":[{"expression":{"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1587,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"797:13:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1589,"name":"_uaGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"839:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1590,"name":"_airdropParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"852:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1558_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_AirdropParams_$1558_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}],"id":1588,"name":"buildAirdropAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"813:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_AirdropParams_$1558_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,struct LzLib.AirdropParams memory) pure returns (bytes memory)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"813:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"797:70:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1593,"nodeType":"ExpressionStatement","src":"797:70:9"}]},"id":1595,"nodeType":"IfStatement","src":"610:268:9","trueBody":{"id":1586,"nodeType":"Block","src":"698:79:9","statements":[{"expression":{"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1580,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"712:13:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1582,"name":"_uaGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"754:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1581,"name":"buildDefaultAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"728:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"728:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"712:54:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1585,"nodeType":"ExpressionStatement","src":"712:54:9"}]}}]},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"buildAdapterParams","nameLocation":"469:18:9","nodeType":"FunctionDefinition","parameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"_airdropParams","nameLocation":"515:14:9","nodeType":"VariableDeclaration","scope":1597,"src":"488:41:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1558_memory_ptr","typeString":"struct LzLib.AirdropParams"},"typeName":{"id":1560,"nodeType":"UserDefinedTypeName","pathNode":{"id":1559,"name":"LzLib.AirdropParams","nameLocations":["488:5:9","494:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1558,"src":"488:19:9"},"referencedDeclaration":1558,"src":"488:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1558_storage_ptr","typeString":"struct LzLib.AirdropParams"}},"visibility":"internal"},{"constant":false,"id":1563,"mutability":"mutable","name":"_uaGasLimit","nameLocation":"536:11:9","nodeType":"VariableDeclaration","scope":1597,"src":"531:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1562,"name":"uint","nodeType":"ElementaryTypeName","src":"531:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"487:61:9"},"returnParameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"adapterParams","nameLocation":"585:13:9","nodeType":"VariableDeclaration","scope":1597,"src":"572:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1565,"name":"bytes","nodeType":"ElementaryTypeName","src":"572:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"571:28:9"},"scope":1770,"src":"460:424:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1613,"nodeType":"Block","src":"1003:153:9","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"31","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1131:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1606,"name":"uint16","nodeType":"ElementaryTypeName","src":"1131:6:9","typeDescriptions":{}}},"id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1131:9:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1610,"name":"_uaGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"1142:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1604,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1114:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1118:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"1114:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1114:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1603,"id":1612,"nodeType":"Return","src":"1107:42:9"}]},"id":1614,"implemented":true,"kind":"function","modifiers":[],"name":"buildDefaultAdapterParams","nameLocation":"927:25:9","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"_uaGas","nameLocation":"958:6:9","nodeType":"VariableDeclaration","scope":1614,"src":"953:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint","nodeType":"ElementaryTypeName","src":"953:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:13:9"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1614,"src":"989:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1601,"name":"bytes","nodeType":"ElementaryTypeName","src":"989:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"988:14:9"},"scope":1770,"src":"918:238:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"1277:438:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1625,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"1295:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1558_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1303:13:9","memberName":"airdropAmount","nodeType":"MemberAccess","referencedDeclaration":1555,"src":"1295:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1319:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1295:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f7020616d6f756e74206d7573742062652067726561746572207468616e2030","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1322:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8","typeString":"literal_string \"Airdrop amount must be greater than 0\""},"value":"Airdrop amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7ce7fe7751b8950db4e0241310685c073c029895d6cd545e35c9e6359e2648a8","typeString":"literal_string \"Airdrop amount must be greater than 0\""}],"id":1624,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1287:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1287:75:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1631,"nodeType":"ExpressionStatement","src":"1287:75:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1633,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"1380:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1558_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1388:14:9","memberName":"airdropAddress","nodeType":"MemberAccess","referencedDeclaration":1557,"src":"1380:22:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1414:3:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1406:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1406:7:9","typeDescriptions":{}}},"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1406:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1380:38:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41697264726f702061646472657373206d75737420626520736574","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1420:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffe2f6917af6bbc0ca026a12135666d62243f06a6ea5f65d92ac05e992c443b6","typeString":"literal_string \"Airdrop address must be set\""},"value":"Airdrop address must be set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffe2f6917af6bbc0ca026a12135666d62243f06a6ea5f65d92ac05e992c443b6","typeString":"literal_string \"Airdrop address must be set\""}],"id":1632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1372:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1372:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1642,"nodeType":"ExpressionStatement","src":"1372:78:9"},{"expression":{"arguments":[{"arguments":[{"hexValue":"32","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1650:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1643:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":1645,"name":"uint16","nodeType":"ElementaryTypeName","src":"1643:6:9","typeDescriptions":{}}},"id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1643:9:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1649,"name":"_uaGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"1654:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1650,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"1662:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1558_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1670:13:9","memberName":"airdropAmount","nodeType":"MemberAccess","referencedDeclaration":1555,"src":"1662:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1652,"name":"_params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"1685:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1558_memory_ptr","typeString":"struct LzLib.AirdropParams memory"}},"id":1653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1693:14:9","memberName":"airdropAddress","nodeType":"MemberAccess","referencedDeclaration":1557,"src":"1685:22:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1643,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1626:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1630:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"1626:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1626:82:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1623,"id":1655,"nodeType":"Return","src":"1619:89:9"}]},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"buildAirdropAdapterParams","nameLocation":"1171:25:9","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1616,"mutability":"mutable","name":"_uaGas","nameLocation":"1202:6:9","nodeType":"VariableDeclaration","scope":1657,"src":"1197:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint","nodeType":"ElementaryTypeName","src":"1197:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"_params","nameLocation":"1231:7:9","nodeType":"VariableDeclaration","scope":1657,"src":"1210:28:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1558_memory_ptr","typeString":"struct LzLib.AirdropParams"},"typeName":{"id":1618,"nodeType":"UserDefinedTypeName","pathNode":{"id":1617,"name":"AirdropParams","nameLocations":["1210:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":1558,"src":"1210:13:9"},"referencedDeclaration":1558,"src":"1210:13:9","typeDescriptions":{"typeIdentifier":"t_struct$_AirdropParams_$1558_storage_ptr","typeString":"struct LzLib.AirdropParams"}},"visibility":"internal"}],"src":"1196:43:9"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1657,"src":"1263:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1621,"name":"bytes","nodeType":"ElementaryTypeName","src":"1263:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1262:14:9"},"scope":1770,"src":"1162:553:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1678,"nodeType":"Block","src":"1809:192:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1665,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"1827:14:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1842:6:9","memberName":"length","nodeType":"MemberAccess","src":"1827:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3334","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1852:2:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"1827:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1669,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"1858:14:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1873:6:9","memberName":"length","nodeType":"MemberAccess","src":"1858:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3636","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1882:2:9","typeDescriptions":{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"},"value":"66"},"src":"1858:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1827:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646170746572506172616d73","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1886:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""},"value":"Invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""}],"id":1664,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1819:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1819:91:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1676,"nodeType":"ExpressionStatement","src":"1819:91:9"},{"AST":{"nodeType":"YulBlock","src":"1929:66:9","statements":[{"nodeType":"YulAssignment","src":"1943:42:9","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"1965:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"1981:2:9","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1961:3:9"},"nodeType":"YulFunctionCall","src":"1961:23:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1955:5:9"},"nodeType":"YulFunctionCall","src":"1955:30:9"},"variableNames":[{"name":"gasLimit","nodeType":"YulIdentifier","src":"1943:8:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1659,"isOffset":false,"isSlot":false,"src":"1965:14:9","valueSize":1},{"declaration":1662,"isOffset":false,"isSlot":false,"src":"1943:8:9","valueSize":1}],"id":1677,"nodeType":"InlineAssembly","src":"1920:75:9"}]},"id":1679,"implemented":true,"kind":"function","modifiers":[],"name":"getGasLimit","nameLocation":"1730:11:9","nodeType":"FunctionDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"_adapterParams","nameLocation":"1755:14:9","nodeType":"VariableDeclaration","scope":1679,"src":"1742:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1658,"name":"bytes","nodeType":"ElementaryTypeName","src":"1742:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1741:29:9"},"returnParameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"gasLimit","nameLocation":"1799:8:9","nodeType":"VariableDeclaration","scope":1679,"src":"1794:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint","nodeType":"ElementaryTypeName","src":"1794:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1793:15:9"},"scope":1770,"src":"1721:280:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1730,"nodeType":"Block","src":"2282:555:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1693,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"2300:14:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2315:6:9","memberName":"length","nodeType":"MemberAccess","src":"2300:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3334","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2325:2:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"34"},"src":"2300:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1697,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"2331:14:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:6:9","memberName":"length","nodeType":"MemberAccess","src":"2331:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3636","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2355:2:9","typeDescriptions":{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"},"value":"66"},"src":"2331:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2300:57:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646170746572506172616d73","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2359:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""},"value":"Invalid adapterParams"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811","typeString":"literal_string \"Invalid adapterParams\""}],"id":1692,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2292:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2292:91:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1704,"nodeType":"ExpressionStatement","src":"2292:91:9"},{"AST":{"nodeType":"YulBlock","src":"2402:115:9","statements":[{"nodeType":"YulAssignment","src":"2416:39:9","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2436:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"2452:1:9","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2432:3:9"},"nodeType":"YulFunctionCall","src":"2432:22:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2426:5:9"},"nodeType":"YulFunctionCall","src":"2426:29:9"},"variableNames":[{"name":"txType","nodeType":"YulIdentifier","src":"2416:6:9"}]},{"nodeType":"YulAssignment","src":"2468:39:9","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2487:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"2503:2:9","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2483:3:9"},"nodeType":"YulFunctionCall","src":"2483:23:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2477:5:9"},"nodeType":"YulFunctionCall","src":"2477:30:9"},"variableNames":[{"name":"uaGas","nodeType":"YulIdentifier","src":"2468:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1681,"isOffset":false,"isSlot":false,"src":"2436:14:9","valueSize":1},{"declaration":1681,"isOffset":false,"isSlot":false,"src":"2487:14:9","valueSize":1},{"declaration":1684,"isOffset":false,"isSlot":false,"src":"2416:6:9","valueSize":1},{"declaration":1686,"isOffset":false,"isSlot":false,"src":"2468:5:9","valueSize":1}],"id":1705,"nodeType":"InlineAssembly","src":"2393:124:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1707,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"2534:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2544:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2534:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1710,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"2549:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2559:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2549:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2534:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e737570706f7274656420747854797065","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2562:20:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83","typeString":"literal_string \"Unsupported txType\""},"value":"Unsupported txType"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83","typeString":"literal_string \"Unsupported txType\""}],"id":1706,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2526:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1716,"nodeType":"ExpressionStatement","src":"2526:57:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1718,"name":"uaGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2601:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2609:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2601:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47617320746f6f206c6f77","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2612:13:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b","typeString":"literal_string \"Gas too low\""},"value":"Gas too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b","typeString":"literal_string \"Gas too low\""}],"id":1717,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2593:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2593:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1723,"nodeType":"ExpressionStatement","src":"2593:33:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1724,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"2641:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2651:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2641:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1729,"nodeType":"IfStatement","src":"2637:194:9","trueBody":{"id":1728,"nodeType":"Block","src":"2654:177:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2677:144:9","statements":[{"nodeType":"YulAssignment","src":"2695:47:9","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2722:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"2738:2:9","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2718:3:9"},"nodeType":"YulFunctionCall","src":"2718:23:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2712:5:9"},"nodeType":"YulFunctionCall","src":"2712:30:9"},"variableNames":[{"name":"airdropAmount","nodeType":"YulIdentifier","src":"2695:13:9"}]},{"nodeType":"YulAssignment","src":"2759:48:9","value":{"arguments":[{"arguments":[{"name":"_adapterParams","nodeType":"YulIdentifier","src":"2787:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"2803:2:9","type":"","value":"86"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2783:3:9"},"nodeType":"YulFunctionCall","src":"2783:23:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2777:5:9"},"nodeType":"YulFunctionCall","src":"2777:30:9"},"variableNames":[{"name":"airdropAddress","nodeType":"YulIdentifier","src":"2759:14:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1681,"isOffset":false,"isSlot":false,"src":"2722:14:9","valueSize":1},{"declaration":1681,"isOffset":false,"isSlot":false,"src":"2787:14:9","valueSize":1},{"declaration":1690,"isOffset":false,"isSlot":false,"src":"2759:14:9","valueSize":1},{"declaration":1688,"isOffset":false,"isSlot":false,"src":"2695:13:9","valueSize":1}],"id":1727,"nodeType":"InlineAssembly","src":"2668:153:9"}]}}]},"id":1731,"implemented":true,"kind":"function","modifiers":[],"name":"decodeAdapterParams","nameLocation":"2045:19:9","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"_adapterParams","nameLocation":"2078:14:9","nodeType":"VariableDeclaration","scope":1731,"src":"2065:27:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1680,"name":"bytes","nodeType":"ElementaryTypeName","src":"2065:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2064:29:9"},"returnParameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"txType","nameLocation":"2161:6:9","nodeType":"VariableDeclaration","scope":1731,"src":"2154:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1683,"name":"uint16","nodeType":"ElementaryTypeName","src":"2154:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"uaGas","nameLocation":"2186:5:9","nodeType":"VariableDeclaration","scope":1731,"src":"2181:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint","nodeType":"ElementaryTypeName","src":"2181:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"airdropAmount","nameLocation":"2210:13:9","nodeType":"VariableDeclaration","scope":1731,"src":"2205:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint","nodeType":"ElementaryTypeName","src":"2205:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"airdropAddress","nameLocation":"2253:14:9","nodeType":"VariableDeclaration","scope":1731,"src":"2237:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"2237:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"2140:137:9"},"scope":1770,"src":"2036:801:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1749,"nodeType":"Block","src":"3046:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1744,"name":"_bytes32Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"3084:15:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3079:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1742,"name":"uint","nodeType":"ElementaryTypeName","src":"3079:4:9","typeDescriptions":{}}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3071:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1740,"name":"uint160","nodeType":"ElementaryTypeName","src":"3071:7:9","typeDescriptions":{}}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3071:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3063:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1738,"name":"address","nodeType":"ElementaryTypeName","src":"3063:7:9","typeDescriptions":{}}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1737,"id":1748,"nodeType":"Return","src":"3056:46:9"}]},"id":1750,"implemented":true,"kind":"function","modifiers":[],"name":"bytes32ToAddress","nameLocation":"2963:16:9","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"_bytes32Address","nameLocation":"2988:15:9","nodeType":"VariableDeclaration","scope":1750,"src":"2980:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2980:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2979:25:9"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"_address","nameLocation":"3036:8:9","nodeType":"VariableDeclaration","scope":1750,"src":"3028:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1735,"name":"address","nodeType":"ElementaryTypeName","src":"3028:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3027:18:9"},"scope":1770,"src":"2954:155:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1768,"nodeType":"Block","src":"3207:56:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1763,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"3245:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3237:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1761,"name":"uint160","nodeType":"ElementaryTypeName","src":"3237:7:9","typeDescriptions":{}}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3237:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3232:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1759,"name":"uint","nodeType":"ElementaryTypeName","src":"3232:4:9","typeDescriptions":{}}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3232:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3224:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1757,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3224:7:9","typeDescriptions":{}}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3224:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1756,"id":1767,"nodeType":"Return","src":"3217:39:9"}]},"id":1769,"implemented":true,"kind":"function","modifiers":[],"name":"addressToBytes32","nameLocation":"3124:16:9","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"_address","nameLocation":"3149:8:9","nodeType":"VariableDeclaration","scope":1769,"src":"3141:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1751,"name":"address","nodeType":"ElementaryTypeName","src":"3141:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3140:18:9"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"_bytes32Address","nameLocation":"3190:15:9","nodeType":"VariableDeclaration","scope":1769,"src":"3182:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3182:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3181:25:9"},"scope":1770,"src":"3115:148:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1771,"src":"98:3167:9","usedErrors":[],"usedEvents":[]}],"src":"38:3228:9"},"id":9},"contracts/lzApp/mocks/LZEndpointMock.sol":{"ast":{"absolutePath":"contracts/lzApp/mocks/LZEndpointMock.sol","exportedSymbols":{"ILayerZeroEndpoint":[1500],"ILayerZeroReceiver":[1514],"ILayerZeroUserApplicationConfig":[1545],"LZEndpointMock":[3088],"LzLib":[1770]},"id":3089,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":1772,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:10"},{"id":1773,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"62:19:10"},{"absolutePath":"contracts/lzApp/interfaces/ILayerZeroReceiver.sol","file":"../interfaces/ILayerZeroReceiver.sol","id":1774,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3089,"sourceUnit":1515,"src":"83:46:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lzApp/interfaces/ILayerZeroEndpoint.sol","file":"../interfaces/ILayerZeroEndpoint.sol","id":1775,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3089,"sourceUnit":1501,"src":"130:46:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lzApp/libs/LzLib.sol","file":"../libs/LzLib.sol","id":1776,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3089,"sourceUnit":1771,"src":"177:27:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1777,"name":"ILayerZeroEndpoint","nameLocations":["839:18:10"],"nodeType":"IdentifierPath","referencedDeclaration":1500,"src":"839:18:10"},"id":1778,"nodeType":"InheritanceSpecifier","src":"839:18:10"}],"canonicalName":"LZEndpointMock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3088,"linearizedBaseContracts":[3088,1500,1545],"name":"LZEndpointMock","nameLocation":"821:14:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1781,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"888:12:10","nodeType":"VariableDeclaration","scope":3088,"src":"864:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1779,"name":"uint8","nodeType":"ElementaryTypeName","src":"864:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"903:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":1784,"mutability":"constant","name":"_ENTERED","nameLocation":"934:8:10","nodeType":"VariableDeclaration","scope":3088,"src":"910:36:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1782,"name":"uint8","nodeType":"ElementaryTypeName","src":"910:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"945:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":false,"functionSelector":"c81b383a","id":1788,"mutability":"mutable","name":"lzEndpointLookup","nameLocation":"988:16:10","nodeType":"VariableDeclaration","scope":3088,"src":"953:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1787,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1785,"name":"address","nodeType":"ElementaryTypeName","src":"961:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"953:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1786,"name":"address","nodeType":"ElementaryTypeName","src":"972:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"db14f305","id":1790,"mutability":"mutable","name":"mockChainId","nameLocation":"1025:11:10","nodeType":"VariableDeclaration","scope":3088,"src":"1011:25:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1789,"name":"uint16","nodeType":"ElementaryTypeName","src":"1011:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"constant":false,"functionSelector":"3e0dd83e","id":1792,"mutability":"mutable","name":"nextMsgBlocked","nameLocation":"1054:14:10","nodeType":"VariableDeclaration","scope":3088,"src":"1042:26:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1791,"name":"bool","nodeType":"ElementaryTypeName","src":"1042:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"907c5e7e","id":1795,"mutability":"mutable","name":"relayerFeeConfig","nameLocation":"1117:16:10","nodeType":"VariableDeclaration","scope":3088,"src":"1093:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig"},"typeName":{"id":1794,"nodeType":"UserDefinedTypeName","pathNode":{"id":1793,"name":"RelayerFeeConfig","nameLocations":["1093:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1851,"src":"1093:16:10"},"referencedDeclaration":1851,"src":"1093:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage_ptr","typeString":"struct LZEndpointMock.RelayerFeeConfig"}},"visibility":"public"},{"constant":false,"functionSelector":"07d3277f","id":1798,"mutability":"mutable","name":"protocolFeeConfig","nameLocation":"1164:17:10","nodeType":"VariableDeclaration","scope":3088,"src":"1139:42:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$1840_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig"},"typeName":{"id":1797,"nodeType":"UserDefinedTypeName","pathNode":{"id":1796,"name":"ProtocolFeeConfig","nameLocations":["1139:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":1840,"src":"1139:17:10"},"referencedDeclaration":1840,"src":"1139:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$1840_storage_ptr","typeString":"struct LZEndpointMock.ProtocolFeeConfig"}},"visibility":"public"},{"constant":false,"functionSelector":"f9cd3ceb","id":1800,"mutability":"mutable","name":"oracleFee","nameLocation":"1199:9:10","nodeType":"VariableDeclaration","scope":3088,"src":"1187:21:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint","nodeType":"ElementaryTypeName","src":"1187:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"272bd384","id":1802,"mutability":"mutable","name":"defaultAdapterParams","nameLocation":"1227:20:10","nodeType":"VariableDeclaration","scope":3088,"src":"1214:33:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes"},"typeName":{"id":1801,"name":"bytes","nodeType":"ElementaryTypeName","src":"1214:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"public"},{"constant":false,"functionSelector":"9924d33b","id":1808,"mutability":"mutable","name":"inboundNonce","nameLocation":"1391:12:10","nodeType":"VariableDeclaration","scope":3088,"src":"1340:63:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(bytes => uint64))"},"typeName":{"id":1807,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1803,"name":"uint16","nodeType":"ElementaryTypeName","src":"1348:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"1340:43:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(bytes => uint64))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1806,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1804,"name":"bytes","nodeType":"ElementaryTypeName","src":"1366:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"1358:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_uint64_$","typeString":"mapping(bytes => uint64)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1805,"name":"uint64","nodeType":"ElementaryTypeName","src":"1375:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}}},"visibility":"public"},{"constant":false,"functionSelector":"b2086499","id":1814,"mutability":"mutable","name":"outboundNonce","nameLocation":"1537:13:10","nodeType":"VariableDeclaration","scope":3088,"src":"1484:66:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(address => uint64))"},"typeName":{"id":1813,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1809,"name":"uint16","nodeType":"ElementaryTypeName","src":"1492:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"1484:45:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(address => uint64))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1812,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1502:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1811,"name":"uint64","nodeType":"ElementaryTypeName","src":"1521:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}}},"visibility":"public"},{"constant":false,"functionSelector":"76a386dc","id":1821,"mutability":"mutable","name":"storedPayload","nameLocation":"1781:13:10","nodeType":"VariableDeclaration","scope":3088,"src":"1723:71:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$_$","typeString":"mapping(uint16 => mapping(bytes => struct LZEndpointMock.StoredPayload))"},"typeName":{"id":1820,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1815,"name":"uint16","nodeType":"ElementaryTypeName","src":"1731:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"1723:50:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$_$","typeString":"mapping(uint16 => mapping(bytes => struct LZEndpointMock.StoredPayload))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1819,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1816,"name":"bytes","nodeType":"ElementaryTypeName","src":"1749:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"1741:31:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$","typeString":"mapping(bytes => struct LZEndpointMock.StoredPayload)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1818,"nodeType":"UserDefinedTypeName","pathNode":{"id":1817,"name":"StoredPayload","nameLocations":["1758:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"1758:13:10"},"referencedDeclaration":1858,"src":"1758:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"}}}},"visibility":"public"},{"constant":false,"functionSelector":"12a9ee6b","id":1829,"mutability":"mutable","name":"msgsToDeliver","nameLocation":"1901:13:10","nodeType":"VariableDeclaration","scope":3088,"src":"1841:73:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_$_$","typeString":"mapping(uint16 => mapping(bytes => struct LZEndpointMock.QueuedPayload[]))"},"typeName":{"id":1828,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1822,"name":"uint16","nodeType":"ElementaryTypeName","src":"1849:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Mapping","src":"1841:52:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_$_$","typeString":"mapping(uint16 => mapping(bytes => struct LZEndpointMock.QueuedPayload[]))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1827,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1823,"name":"bytes","nodeType":"ElementaryTypeName","src":"1867:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"nodeType":"Mapping","src":"1859:33:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_$","typeString":"mapping(bytes => struct LZEndpointMock.QueuedPayload[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1825,"nodeType":"UserDefinedTypeName","pathNode":{"id":1824,"name":"QueuedPayload","nameLocations":["1876:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"1876:13:10"},"referencedDeclaration":1865,"src":"1876:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload"}},"id":1826,"nodeType":"ArrayTypeName","src":"1876:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload[]"}}}},"visibility":"public"},{"constant":false,"id":1832,"mutability":"mutable","name":"_send_entered_state","nameLocation":"1960:19:10","nodeType":"VariableDeclaration","scope":3088,"src":"1945:38:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1830,"name":"uint8","nodeType":"ElementaryTypeName","src":"1945:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":1835,"mutability":"mutable","name":"_receive_entered_state","nameLocation":"2004:22:10","nodeType":"VariableDeclaration","scope":3088,"src":"1989:41:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1833,"name":"uint8","nodeType":"ElementaryTypeName","src":"1989:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"canonicalName":"LZEndpointMock.ProtocolFeeConfig","id":1840,"members":[{"constant":false,"id":1837,"mutability":"mutable","name":"zroFee","nameLocation":"2077:6:10","nodeType":"VariableDeclaration","scope":1840,"src":"2072:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint","nodeType":"ElementaryTypeName","src":"2072:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1839,"mutability":"mutable","name":"nativeBP","nameLocation":"2098:8:10","nodeType":"VariableDeclaration","scope":1840,"src":"2093:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1838,"name":"uint","nodeType":"ElementaryTypeName","src":"2093:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ProtocolFeeConfig","nameLocation":"2044:17:10","nodeType":"StructDefinition","scope":3088,"src":"2037:76:10","visibility":"public"},{"canonicalName":"LZEndpointMock.RelayerFeeConfig","id":1851,"members":[{"constant":false,"id":1842,"mutability":"mutable","name":"dstPriceRatio","nameLocation":"2161:13:10","nodeType":"VariableDeclaration","scope":1851,"src":"2153:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1841,"name":"uint128","nodeType":"ElementaryTypeName","src":"2153:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"dstGasPriceInWei","nameLocation":"2201:16:10","nodeType":"VariableDeclaration","scope":1851,"src":"2193:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1843,"name":"uint128","nodeType":"ElementaryTypeName","src":"2193:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"dstNativeAmtCap","nameLocation":"2235:15:10","nodeType":"VariableDeclaration","scope":1851,"src":"2227:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1845,"name":"uint128","nodeType":"ElementaryTypeName","src":"2227:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"baseGas","nameLocation":"2267:7:10","nodeType":"VariableDeclaration","scope":1851,"src":"2260:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1847,"name":"uint64","nodeType":"ElementaryTypeName","src":"2260:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"gasPerByte","nameLocation":"2291:10:10","nodeType":"VariableDeclaration","scope":1851,"src":"2284:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1849,"name":"uint64","nodeType":"ElementaryTypeName","src":"2284:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"RelayerFeeConfig","nameLocation":"2126:16:10","nodeType":"StructDefinition","scope":3088,"src":"2119:189:10","visibility":"public"},{"canonicalName":"LZEndpointMock.StoredPayload","id":1858,"members":[{"constant":false,"id":1853,"mutability":"mutable","name":"payloadLength","nameLocation":"2352:13:10","nodeType":"VariableDeclaration","scope":1858,"src":"2345:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1852,"name":"uint64","nodeType":"ElementaryTypeName","src":"2345:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"dstAddress","nameLocation":"2383:10:10","nodeType":"VariableDeclaration","scope":1858,"src":"2375:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"2375:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"payloadHash","nameLocation":"2411:11:10","nodeType":"VariableDeclaration","scope":1858,"src":"2403:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2403:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"StoredPayload","nameLocation":"2321:13:10","nodeType":"StructDefinition","scope":3088,"src":"2314:115:10","visibility":"public"},{"canonicalName":"LZEndpointMock.QueuedPayload","id":1865,"members":[{"constant":false,"id":1860,"mutability":"mutable","name":"dstAddress","nameLocation":"2474:10:10","nodeType":"VariableDeclaration","scope":1865,"src":"2466:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1859,"name":"address","nodeType":"ElementaryTypeName","src":"2466:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1862,"mutability":"mutable","name":"nonce","nameLocation":"2501:5:10","nodeType":"VariableDeclaration","scope":1865,"src":"2494:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1861,"name":"uint64","nodeType":"ElementaryTypeName","src":"2494:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"payload","nameLocation":"2522:7:10","nodeType":"VariableDeclaration","scope":1865,"src":"2516:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1863,"name":"bytes","nodeType":"ElementaryTypeName","src":"2516:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"QueuedPayload","nameLocation":"2442:13:10","nodeType":"StructDefinition","scope":3088,"src":"2435:101:10","visibility":"public"},{"body":{"id":1883,"nodeType":"Block","src":"2570:193:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1868,"name":"_send_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"2588:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1869,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"2611:12:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2588:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2073656e64207265656e7472616e6379","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2625:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_73b1d6d5ba54cd5e4e2ebace0c8623f647e51a2b5e72af7e7df83d716224bbcb","typeString":"literal_string \"LayerZeroMock: no send reentrancy\""},"value":"LayerZeroMock: no send reentrancy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_73b1d6d5ba54cd5e4e2ebace0c8623f647e51a2b5e72af7e7df83d716224bbcb","typeString":"literal_string \"LayerZeroMock: no send reentrancy\""}],"id":1867,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2580:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2580:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1873,"nodeType":"ExpressionStatement","src":"2580:81:10"},{"expression":{"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1874,"name":"_send_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"2671:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1875,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"2693:8:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2671:30:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1877,"nodeType":"ExpressionStatement","src":"2671:30:10"},{"id":1878,"nodeType":"PlaceholderStatement","src":"2711:1:10"},{"expression":{"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1879,"name":"_send_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"2722:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1880,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"2744:12:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2722:34:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1882,"nodeType":"ExpressionStatement","src":"2722:34:10"}]},"id":1884,"name":"sendNonReentrant","nameLocation":"2551:16:10","nodeType":"ModifierDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[],"src":"2567:2:10"},"src":"2542:221:10","virtual":false,"visibility":"internal"},{"body":{"id":1902,"nodeType":"Block","src":"2800:205:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1887,"name":"_receive_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"2818:22:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1888,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"2844:12:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2818:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2072656365697665207265656e7472616e6379","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2858:38:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_82caa7769a2a1defb5e8d4082900c39c0f04eedfd5e921c1e3bf1d16730a12ab","typeString":"literal_string \"LayerZeroMock: no receive reentrancy\""},"value":"LayerZeroMock: no receive reentrancy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_82caa7769a2a1defb5e8d4082900c39c0f04eedfd5e921c1e3bf1d16730a12ab","typeString":"literal_string \"LayerZeroMock: no receive reentrancy\""}],"id":1886,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2810:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1892,"nodeType":"ExpressionStatement","src":"2810:87:10"},{"expression":{"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1893,"name":"_receive_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"2907:22:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1894,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"2932:8:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2907:33:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1896,"nodeType":"ExpressionStatement","src":"2907:33:10"},{"id":1897,"nodeType":"PlaceholderStatement","src":"2950:1:10"},{"expression":{"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1898,"name":"_receive_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"2961:22:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1899,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"2986:12:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2961:37:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1901,"nodeType":"ExpressionStatement","src":"2961:37:10"}]},"id":1903,"name":"receiveNonReentrant","nameLocation":"2778:19:10","nodeType":"ModifierDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[],"src":"2797:2:10"},"src":"2769:236:10","virtual":false,"visibility":"internal"},{"anonymous":false,"eventSelector":"23d2684f396e92a6e2ff2d16f98e6fea00d50cb27a64b531bc0748f730211f98","id":1909,"name":"UaForceResumeReceive","nameLocation":"3017:20:10","nodeType":"EventDefinition","parameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"indexed":false,"mutability":"mutable","name":"chainId","nameLocation":"3045:7:10","nodeType":"VariableDeclaration","scope":1909,"src":"3038:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1904,"name":"uint16","nodeType":"ElementaryTypeName","src":"3038:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1907,"indexed":false,"mutability":"mutable","name":"srcAddress","nameLocation":"3060:10:10","nodeType":"VariableDeclaration","scope":1909,"src":"3054:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1906,"name":"bytes","nodeType":"ElementaryTypeName","src":"3054:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3037:34:10"},"src":"3011:61:10"},{"anonymous":false,"eventSelector":"612434f39581c8e7d99746c9c20c6eb0ce8c0eb99f007c5719d620841370957d","id":1919,"name":"PayloadCleared","nameLocation":"3083:14:10","nodeType":"EventDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"indexed":false,"mutability":"mutable","name":"srcChainId","nameLocation":"3105:10:10","nodeType":"VariableDeclaration","scope":1919,"src":"3098:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1910,"name":"uint16","nodeType":"ElementaryTypeName","src":"3098:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1913,"indexed":false,"mutability":"mutable","name":"srcAddress","nameLocation":"3123:10:10","nodeType":"VariableDeclaration","scope":1919,"src":"3117:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1912,"name":"bytes","nodeType":"ElementaryTypeName","src":"3117:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1915,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3142:5:10","nodeType":"VariableDeclaration","scope":1919,"src":"3135:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1914,"name":"uint64","nodeType":"ElementaryTypeName","src":"3135:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1917,"indexed":false,"mutability":"mutable","name":"dstAddress","nameLocation":"3157:10:10","nodeType":"VariableDeclaration","scope":1919,"src":"3149:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1916,"name":"address","nodeType":"ElementaryTypeName","src":"3149:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3097:71:10"},"src":"3077:92:10"},{"anonymous":false,"eventSelector":"0f9e4d95b62f08222d612b5ab92039cd8fbbbea550a95e8df9f927436bbdf5db","id":1933,"name":"PayloadStored","nameLocation":"3180:13:10","nodeType":"EventDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"indexed":false,"mutability":"mutable","name":"srcChainId","nameLocation":"3201:10:10","nodeType":"VariableDeclaration","scope":1933,"src":"3194:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1920,"name":"uint16","nodeType":"ElementaryTypeName","src":"3194:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1923,"indexed":false,"mutability":"mutable","name":"srcAddress","nameLocation":"3219:10:10","nodeType":"VariableDeclaration","scope":1933,"src":"3213:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1922,"name":"bytes","nodeType":"ElementaryTypeName","src":"3213:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1925,"indexed":false,"mutability":"mutable","name":"dstAddress","nameLocation":"3239:10:10","nodeType":"VariableDeclaration","scope":1933,"src":"3231:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1924,"name":"address","nodeType":"ElementaryTypeName","src":"3231:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1927,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3258:5:10","nodeType":"VariableDeclaration","scope":1933,"src":"3251:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1926,"name":"uint64","nodeType":"ElementaryTypeName","src":"3251:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1929,"indexed":false,"mutability":"mutable","name":"payload","nameLocation":"3271:7:10","nodeType":"VariableDeclaration","scope":1933,"src":"3265:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1928,"name":"bytes","nodeType":"ElementaryTypeName","src":"3265:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1931,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"3286:6:10","nodeType":"VariableDeclaration","scope":1933,"src":"3280:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1930,"name":"bytes","nodeType":"ElementaryTypeName","src":"3280:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3193:100:10"},"src":"3174:120:10"},{"anonymous":false,"eventSelector":"2c7a964ca3de5ec1d42d9822f9bbd0eb142a59cc9f855e9d93813b773192c7a3","id":1939,"name":"ValueTransferFailed","nameLocation":"3305:19:10","nodeType":"EventDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3341:2:10","nodeType":"VariableDeclaration","scope":1939,"src":"3325:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1934,"name":"address","nodeType":"ElementaryTypeName","src":"3325:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1937,"indexed":true,"mutability":"mutable","name":"quantity","nameLocation":"3358:8:10","nodeType":"VariableDeclaration","scope":1939,"src":"3345:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint","nodeType":"ElementaryTypeName","src":"3345:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3324:43:10"},"src":"3299:69:10"},{"body":{"id":1976,"nodeType":"Block","src":"3403:501:10","statements":[{"expression":{"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1944,"name":"mockChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"3413:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1945,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"3427:8:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"3413:22:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":1947,"nodeType":"ExpressionStatement","src":"3413:22:10"},{"expression":{"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1948,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"3469:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31653130","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3534:4:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"1e10"},{"hexValue":"31653130","id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3607:4:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"1e10"},{"hexValue":"31653139","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3642:4:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"},"value":"1e19"},{"hexValue":"313030","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3669:3:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},{"hexValue":"31","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3698:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1949,"name":"RelayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"3488:16:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RelayerFeeConfig_$1851_storage_ptr_$","typeString":"type(struct LZEndpointMock.RelayerFeeConfig storage pointer)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3519:13:10","3589:16:10","3625:15:10","3660:7:10","3686:10:10"],"names":["dstPriceRatio","dstGasPriceInWei","dstNativeAmtCap","baseGas","gasPerByte"],"nodeType":"FunctionCall","src":"3488:222:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_memory_ptr","typeString":"struct LZEndpointMock.RelayerFeeConfig memory"}},"src":"3469:241:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":1957,"nodeType":"ExpressionStatement","src":"3469:241:10"},{"expression":{"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1958,"name":"protocolFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"3720:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$1840_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31653138","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3767:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},{"hexValue":"31303030","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3783:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"}],"id":1959,"name":"ProtocolFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"3740:17:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ProtocolFeeConfig_$1840_storage_ptr_$","typeString":"type(struct LZEndpointMock.ProtocolFeeConfig storage pointer)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3759:6:10","3773:8:10"],"names":["zroFee","nativeBP"],"nodeType":"FunctionCall","src":"3740:49:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$1840_memory_ptr","typeString":"struct LZEndpointMock.ProtocolFeeConfig memory"}},"src":"3720:69:10","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$1840_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig storage ref"}},"id":1964,"nodeType":"ExpressionStatement","src":"3720:69:10"},{"expression":{"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1965,"name":"oracleFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"3809:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31653136","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3821:4:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"1e16"},"src":"3809:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1968,"nodeType":"ExpressionStatement","src":"3809:16:10"},{"expression":{"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1969,"name":"defaultAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"3835:20:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"323030303030","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3890:6:10","typeDescriptions":{"typeIdentifier":"t_rational_200000_by_1","typeString":"int_const 200000"},"value":"200000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200000_by_1","typeString":"int_const 200000"}],"expression":{"id":1970,"name":"LzLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"3858:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LzLib_$1770_$","typeString":"type(library LzLib)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3864:25:10","memberName":"buildDefaultAdapterParams","nodeType":"MemberAccess","referencedDeclaration":1614,"src":"3858:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"3835:62:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1975,"nodeType":"ExpressionStatement","src":"3835:62:10"}]},"id":1977,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"_chainId","nameLocation":"3393:8:10","nodeType":"VariableDeclaration","scope":1977,"src":"3386:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1940,"name":"uint16","nodeType":"ElementaryTypeName","src":"3386:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3385:17:10"},"returnParameters":{"id":1943,"nodeType":"ParameterList","parameters":[],"src":"3403:0:10"},"scope":3088,"src":"3374:530:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1375],"body":{"id":2152,"nodeType":"Block","src":"4270:1804:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1996,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"4288:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4294:6:10","memberName":"length","nodeType":"MemberAccess","src":"4288:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3430","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4304:2:10","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"src":"4288:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a20696e636f72726563742072656d6f746520616464726573732073697a65","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4308:46:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_a84f16779931db7ec618d2bd334bd656888d24e7e320bdf2dd7a0a0862d1916b","typeString":"literal_string \"LayerZeroMock: incorrect remote address size\""},"value":"LayerZeroMock: incorrect remote address size"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a84f16779931db7ec618d2bd334bd656888d24e7e320bdf2dd7a0a0862d1916b","typeString":"literal_string \"LayerZeroMock: incorrect remote address size\""}],"id":1995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4280:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4280:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2002,"nodeType":"ExpressionStatement","src":"4280:75:10"},{"assignments":[2004],"declarations":[{"constant":false,"id":2004,"mutability":"mutable","name":"dstAddr","nameLocation":"4401:7:10","nodeType":"VariableDeclaration","scope":2152,"src":"4393:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"4393:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2005,"nodeType":"VariableDeclarationStatement","src":"4393:15:10"},{"AST":{"nodeType":"YulBlock","src":"4427:56:10","statements":[{"nodeType":"YulAssignment","src":"4441:32:10","value":{"arguments":[{"arguments":[{"name":"_path","nodeType":"YulIdentifier","src":"4462:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4469:2:10","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4458:3:10"},"nodeType":"YulFunctionCall","src":"4458:14:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4452:5:10"},"nodeType":"YulFunctionCall","src":"4452:21:10"},"variableNames":[{"name":"dstAddr","nodeType":"YulIdentifier","src":"4441:7:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1981,"isOffset":false,"isSlot":false,"src":"4462:5:10","valueSize":1},{"declaration":2004,"isOffset":false,"isSlot":false,"src":"4441:7:10","valueSize":1}],"id":2006,"nodeType":"InlineAssembly","src":"4418:65:10"},{"assignments":[2008],"declarations":[{"constant":false,"id":2008,"mutability":"mutable","name":"lzEndpoint","nameLocation":"4501:10:10","nodeType":"VariableDeclaration","scope":2152,"src":"4493:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2007,"name":"address","nodeType":"ElementaryTypeName","src":"4493:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2012,"initialValue":{"baseExpression":{"id":2009,"name":"lzEndpointLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"4514:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2011,"indexExpression":{"id":2010,"name":"dstAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"4531:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4514:25:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4493:46:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2014,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"4557:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4579:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4571:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2015,"name":"address","nodeType":"ElementaryTypeName","src":"4571:7:10","typeDescriptions":{}}},"id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4571:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4557:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a2064657374696e6174696f6e204c617965725a65726f20456e64706f696e74206e6f7420666f756e64","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4583:57:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_03f2c372695dfb7017d0d1b5b039a7a7c563c382ff38f9563e77eedca785e4df","typeString":"literal_string \"LayerZeroMock: destination LayerZero Endpoint not found\""},"value":"LayerZeroMock: destination LayerZero Endpoint not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03f2c372695dfb7017d0d1b5b039a7a7c563c382ff38f9563e77eedca785e4df","typeString":"literal_string \"LayerZeroMock: destination LayerZero Endpoint not found\""}],"id":2013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4549:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4549:92:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2022,"nodeType":"ExpressionStatement","src":"4549:92:10"},{"assignments":[2024],"declarations":[{"constant":false,"id":2024,"mutability":"mutable","name":"adapterParams","nameLocation":"4697:13:10","nodeType":"VariableDeclaration","scope":2152,"src":"4684:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2023,"name":"bytes","nodeType":"ElementaryTypeName","src":"4684:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2032,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2025,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"4713:14:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4728:6:10","memberName":"length","nodeType":"MemberAccess","src":"4713:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4737:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4713:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2030,"name":"defaultAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"4758:20:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4713:65:10","trueExpression":{"id":2029,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"4741:14:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4684:94:10"},{"assignments":[2034,null],"declarations":[{"constant":false,"id":2034,"mutability":"mutable","name":"nativeFee","nameLocation":"4794:9:10","nodeType":"VariableDeclaration","scope":2152,"src":"4789:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2033,"name":"uint","nodeType":"ElementaryTypeName","src":"4789:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":2048,"initialValue":{"arguments":[{"id":2036,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"4822:8:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":2037,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4832:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4836:6:10","memberName":"sender","nodeType":"MemberAccess","src":"4832:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2039,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4844:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2040,"name":"_zroPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"4854:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4884:3:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4876:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2041,"name":"address","nodeType":"ElementaryTypeName","src":"4876:7:10","typeDescriptions":{}}},"id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4876:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4854:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2046,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"4890:13:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2035,"name":"estimateFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"4809:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint16,address,bytes memory,bool,bytes memory) view returns (uint256,uint256)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4809:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4788:116:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2050,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4922:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4926:5:10","memberName":"value","nodeType":"MemberAccess","src":"4922:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2052,"name":"nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"4935:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4922:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f7420656e6f756768206e617469766520666f722066656573","id":2054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4946:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7a441e6351efbe3589b780f6d9098a5373ce9246e759367f3fb559adf16b4a","typeString":"literal_string \"LayerZeroMock: not enough native for fees\""},"value":"LayerZeroMock: not enough native for fees"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7a441e6351efbe3589b780f6d9098a5373ce9246e759367f3fb559adf16b4a","typeString":"literal_string \"LayerZeroMock: not enough native for fees\""}],"id":2049,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4914:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:76:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2056,"nodeType":"ExpressionStatement","src":"4914:76:10"},{"assignments":[2058],"declarations":[{"constant":false,"id":2058,"mutability":"mutable","name":"nonce","nameLocation":"5008:5:10","nodeType":"VariableDeclaration","scope":2152,"src":"5001:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2057,"name":"uint64","nodeType":"ElementaryTypeName","src":"5001:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":2066,"initialValue":{"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5016:37:10","subExpression":{"baseExpression":{"baseExpression":{"id":2059,"name":"outboundNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5018:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(address => uint64))"}},"id":2061,"indexExpression":{"id":2060,"name":"_chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"5032:8:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5018:23:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":2064,"indexExpression":{"expression":{"id":2062,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5042:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5046:6:10","memberName":"sender","nodeType":"MemberAccess","src":"5042:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5018:35:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"5001:52:10"},{"assignments":[2068],"declarations":[{"constant":false,"id":2068,"mutability":"mutable","name":"amount","nameLocation":"5109:6:10","nodeType":"VariableDeclaration","scope":2152,"src":"5104:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint","nodeType":"ElementaryTypeName","src":"5104:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2073,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2069,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5118:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5122:5:10","memberName":"value","nodeType":"MemberAccess","src":"5118:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2071,"name":"nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"5130:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5118:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5104:35:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"5153:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5162:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5153:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2092,"nodeType":"IfStatement","src":"5149:163:10","trueBody":{"id":2091,"nodeType":"Block","src":"5165:147:10","statements":[{"assignments":[2078,null],"declarations":[{"constant":false,"id":2078,"mutability":"mutable","name":"success","nameLocation":"5185:7:10","nodeType":"VariableDeclaration","scope":2091,"src":"5180:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2077,"name":"bool","nodeType":"ElementaryTypeName","src":"5180:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2085,"initialValue":{"arguments":[{"hexValue":"","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5233:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2079,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"5198:14:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5213:4:10","memberName":"call","nodeType":"MemberAccess","src":"5198:19:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2081,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"5225:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5198:34:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5198:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5179:57:10"},{"expression":{"arguments":[{"id":2087,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"5258:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206661696c656420746f20726566756e64","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5267:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_dcfb2fb846bf29eed16ab1966cc303d2b0cbdcaede7d9e78ee4c30c1a8119790","typeString":"literal_string \"LayerZeroMock: failed to refund\""},"value":"LayerZeroMock: failed to refund"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dcfb2fb846bf29eed16ab1966cc303d2b0cbdcaede7d9e78ee4c30c1a8119790","typeString":"literal_string \"LayerZeroMock: failed to refund\""}],"id":2086,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5250:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5250:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2090,"nodeType":"ExpressionStatement","src":"5250:51:10"}]}},{"assignments":[null,2094,2096,2098],"declarations":[null,{"constant":false,"id":2094,"mutability":"mutable","name":"extraGas","nameLocation":"5474:8:10","nodeType":"VariableDeclaration","scope":2152,"src":"5469:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint","nodeType":"ElementaryTypeName","src":"5469:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"dstNativeAmt","nameLocation":"5489:12:10","nodeType":"VariableDeclaration","scope":2152,"src":"5484:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint","nodeType":"ElementaryTypeName","src":"5484:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"dstNativeAddr","nameLocation":"5519:13:10","nodeType":"VariableDeclaration","scope":2152,"src":"5503:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2097,"name":"address","nodeType":"ElementaryTypeName","src":"5503:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":2103,"initialValue":{"arguments":[{"id":2101,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"5562:13:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2099,"name":"LzLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"5536:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LzLib_$1770_$","typeString":"type(library LzLib)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5542:19:10","memberName":"decodeAdapterParams","nodeType":"MemberAccess","referencedDeclaration":1731,"src":"5536:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint16_$_t_uint256_$_t_uint256_$_t_address_payable_$","typeString":"function (bytes memory) pure returns (uint16,uint256,uint256,address payable)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint256_$_t_uint256_$_t_address_payable_$","typeString":"tuple(uint16,uint256,uint256,address payable)"}},"nodeType":"VariableDeclarationStatement","src":"5466:110:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2104,"name":"dstNativeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5590:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5590:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2126,"nodeType":"IfStatement","src":"5586:222:10","trueBody":{"id":2125,"nodeType":"Block","src":"5608:200:10","statements":[{"assignments":[2108,null],"declarations":[{"constant":false,"id":2108,"mutability":"mutable","name":"success","nameLocation":"5628:7:10","nodeType":"VariableDeclaration","scope":2125,"src":"5623:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2107,"name":"bool","nodeType":"ElementaryTypeName","src":"5623:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2115,"initialValue":{"arguments":[{"hexValue":"","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5681:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2109,"name":"dstNativeAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"5641:13:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5655:4:10","memberName":"call","nodeType":"MemberAccess","src":"5641:18:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2111,"name":"dstNativeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5667:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5641:39:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5622:62:10"},{"condition":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5702:8:10","subExpression":{"id":2116,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"5703:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2124,"nodeType":"IfStatement","src":"5698:100:10","trueBody":{"id":2123,"nodeType":"Block","src":"5712:86:10","statements":[{"eventCall":{"arguments":[{"id":2119,"name":"dstNativeAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"5755:13:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2120,"name":"dstNativeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5770:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2118,"name":"ValueTransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"5735:19:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5735:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2122,"nodeType":"EmitStatement","src":"5730:53:10"}]}}]}},{"assignments":[2128],"declarations":[{"constant":false,"id":2128,"mutability":"mutable","name":"srcUaAddress","nameLocation":"5831:12:10","nodeType":"VariableDeclaration","scope":2152,"src":"5818:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2127,"name":"bytes","nodeType":"ElementaryTypeName","src":"5818:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2135,"initialValue":{"arguments":[{"expression":{"id":2131,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5863:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5867:6:10","memberName":"sender","nodeType":"MemberAccess","src":"5863:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2133,"name":"dstAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"5875:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2129,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5846:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5850:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"5846:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5818:65:10"},{"assignments":[2137],"declarations":[{"constant":false,"id":2137,"mutability":"mutable","name":"payload","nameLocation":"5936:7:10","nodeType":"VariableDeclaration","scope":2152,"src":"5923:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2136,"name":"bytes","nodeType":"ElementaryTypeName","src":"5923:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2139,"initialValue":{"id":2138,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"5946:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"5923:31:10"},{"expression":{"arguments":[{"id":2144,"name":"mockChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"6006:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2145,"name":"srcUaAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"6019:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2146,"name":"dstAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"6033:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2147,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6042:5:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2148,"name":"extraGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"6049:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2149,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"6059:7:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2141,"name":"lzEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"5979:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2140,"name":"LZEndpointMock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"5964:14:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LZEndpointMock_$3088_$","typeString":"type(contract LZEndpointMock)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5964:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LZEndpointMock_$3088","typeString":"contract LZEndpointMock"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5991:14:10","memberName":"receivePayload","nodeType":"MemberAccess","referencedDeclaration":2360,"src":"5964:41:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,address,uint64,uint256,bytes memory) external"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5964:103:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"ExpressionStatement","src":"5964:103:10"}]},"functionSelector":"c5803100","id":2153,"implemented":true,"kind":"function","modifiers":[{"id":1993,"kind":"modifierInvocation","modifierName":{"id":1992,"name":"sendNonReentrant","nameLocations":["4253:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":1884,"src":"4253:16:10"},"nodeType":"ModifierInvocation","src":"4253:16:10"}],"name":"send","nameLocation":"4017:4:10","nodeType":"FunctionDefinition","overrides":{"id":1991,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:10"},"parameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"_chainId","nameLocation":"4038:8:10","nodeType":"VariableDeclaration","scope":2153,"src":"4031:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1978,"name":"uint16","nodeType":"ElementaryTypeName","src":"4031:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1981,"mutability":"mutable","name":"_path","nameLocation":"4069:5:10","nodeType":"VariableDeclaration","scope":2153,"src":"4056:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1980,"name":"bytes","nodeType":"ElementaryTypeName","src":"4056:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1983,"mutability":"mutable","name":"_payload","nameLocation":"4099:8:10","nodeType":"VariableDeclaration","scope":2153,"src":"4084:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1982,"name":"bytes","nodeType":"ElementaryTypeName","src":"4084:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1985,"mutability":"mutable","name":"_refundAddress","nameLocation":"4133:14:10","nodeType":"VariableDeclaration","scope":2153,"src":"4117:30:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"4117:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"_zroPaymentAddress","nameLocation":"4165:18:10","nodeType":"VariableDeclaration","scope":2153,"src":"4157:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1986,"name":"address","nodeType":"ElementaryTypeName","src":"4157:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1989,"mutability":"mutable","name":"_adapterParams","nameLocation":"4206:14:10","nodeType":"VariableDeclaration","scope":2153,"src":"4193:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1988,"name":"bytes","nodeType":"ElementaryTypeName","src":"4193:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4021:205:10"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"4270:0:10"},"scope":3088,"src":"4008:2066:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1390],"body":{"id":2359,"nodeType":"Block","src":"6315:2094:10","statements":[{"assignments":[2173],"declarations":[{"constant":false,"id":2173,"mutability":"mutable","name":"sp","nameLocation":"6347:2:10","nodeType":"VariableDeclaration","scope":2359,"src":"6325:24:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"},"typeName":{"id":2172,"nodeType":"UserDefinedTypeName","pathNode":{"id":2171,"name":"StoredPayload","nameLocations":["6325:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"6325:13:10"},"referencedDeclaration":1858,"src":"6325:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"}},"visibility":"internal"}],"id":2179,"initialValue":{"baseExpression":{"baseExpression":{"id":2174,"name":"storedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6352:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref))"}},"id":2176,"indexExpression":{"id":2175,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"6366:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6352:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref)"}},"id":2178,"indexExpression":{"id":2177,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"6379:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6352:33:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6325:60:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2181,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"6468:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6478:34:10","subExpression":{"baseExpression":{"baseExpression":{"id":2182,"name":"inboundNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"6480:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(bytes memory => uint64))"}},"id":2184,"indexExpression":{"id":2183,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"6493:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6480:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_uint64_$","typeString":"mapping(bytes memory => uint64)"}},"id":2186,"indexExpression":{"id":2185,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"6506:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6480:32:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6468:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a2077726f6e67206e6f6e6365","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6514:28:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfe15a20060cae4027edaeadac99a28b9a581999e01bac9619e7f52b82ee25ac","typeString":"literal_string \"LayerZeroMock: wrong nonce\""},"value":"LayerZeroMock: wrong nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfe15a20060cae4027edaeadac99a28b9a581999e01bac9619e7f52b82ee25ac","typeString":"literal_string \"LayerZeroMock: wrong nonce\""}],"id":2180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6460:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6460:83:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2191,"nodeType":"ExpressionStatement","src":"6460:83:10"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2192,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"6681:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6684:11:10","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"6681:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6707:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6699:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6699:7:10","typeDescriptions":{}}},"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6699:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6681:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":2270,"name":"nextMsgBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"7535:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2356,"nodeType":"Block","src":"7894:509:10","statements":[{"clauses":[{"block":{"id":2317,"nodeType":"Block","src":"8008:2:10","statements":[]},"errorName":"","id":2318,"nodeType":"TryCatchClause","src":"8008:2:10"},{"block":{"id":2353,"nodeType":"Block","src":"8039:354:10","statements":[{"expression":{"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2322,"name":"storedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"8057:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref))"}},"id":2325,"indexExpression":{"id":2323,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"8071:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8057:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref)"}},"id":2326,"indexExpression":{"id":2324,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"8084:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8057:33:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":2330,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"8114:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8123:6:10","memberName":"length","nodeType":"MemberAccess","src":"8114:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8107:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2328,"name":"uint64","nodeType":"ElementaryTypeName","src":"8107:6:10","typeDescriptions":{}}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8107:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2333,"name":"_dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8132:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2335,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"8155:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2334,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8145:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8145:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2327,"name":"StoredPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"8093:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StoredPayload_$1858_storage_ptr_$","typeString":"type(struct LZEndpointMock.StoredPayload storage pointer)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8093:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_memory_ptr","typeString":"struct LZEndpointMock.StoredPayload memory"}},"src":"8057:108:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"id":2339,"nodeType":"ExpressionStatement","src":"8057:108:10"},{"eventCall":{"arguments":[{"id":2341,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"8202:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2342,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"8215:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2343,"name":"_dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8222:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2344,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"8235:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2345,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"8243:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2346,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"8253:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2340,"name":"PayloadStored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"8188:13:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,address,uint64,bytes memory,bytes memory)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2348,"nodeType":"EmitStatement","src":"8183:77:10"},{"expression":{"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2349,"name":"nextMsgBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"8356:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8373:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8356:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2352,"nodeType":"ExpressionStatement","src":"8356:22:10"}]},"errorName":"","id":2354,"nodeType":"TryCatchClause","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"reason","nameLocation":"8031:6:10","nodeType":"VariableDeclaration","scope":2354,"src":"8018:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2319,"name":"bytes","nodeType":"ElementaryTypeName","src":"8018:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8017:21:10"},"src":"8011:382:10"}],"externalCall":{"arguments":[{"id":2312,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"7970:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2313,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"7983:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2314,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"7990:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2315,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"7998:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":2307,"name":"_dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"7931:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2306,"name":"ILayerZeroReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"7912:18:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroReceiver_$1514_$","typeString":"type(contract ILayerZeroReceiver)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7912:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroReceiver_$1514","typeString":"contract ILayerZeroReceiver"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7944:9:10","memberName":"lzReceive","nodeType":"MemberAccess","referencedDeclaration":1513,"src":"7912:41:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"id":2310,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"7959:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7912:57:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$gas","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7912:95:10","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2355,"nodeType":"TryStatement","src":"7908:485:10"}]},"id":2357,"nodeType":"IfStatement","src":"7531:872:10","trueBody":{"id":2305,"nodeType":"Block","src":"7551:337:10","statements":[{"expression":{"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2271,"name":"storedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"7565:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref))"}},"id":2274,"indexExpression":{"id":2272,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"7579:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7565:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref)"}},"id":2275,"indexExpression":{"id":2273,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"7592:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7565:33:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":2279,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"7622:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7631:6:10","memberName":"length","nodeType":"MemberAccess","src":"7622:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7615:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2277,"name":"uint64","nodeType":"ElementaryTypeName","src":"7615:6:10","typeDescriptions":{}}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7615:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2282,"name":"_dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"7640:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2284,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"7663:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2283,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7653:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7653:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2276,"name":"StoredPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"7601:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StoredPayload_$1858_storage_ptr_$","typeString":"type(struct LZEndpointMock.StoredPayload storage pointer)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_memory_ptr","typeString":"struct LZEndpointMock.StoredPayload memory"}},"src":"7565:108:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"id":2288,"nodeType":"ExpressionStatement","src":"7565:108:10"},{"eventCall":{"arguments":[{"id":2290,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"7706:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2291,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"7719:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2292,"name":"_dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"7726:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2293,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"7739:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2294,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"7747:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[{"hexValue":"","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7763:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7757:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2295,"name":"bytes","nodeType":"ElementaryTypeName","src":"7757:5:10","typeDescriptions":{}}},"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7757:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2289,"name":"PayloadStored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"7692:13:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_address_$_t_uint64_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,address,uint64,bytes memory,bytes memory)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7692:75:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2300,"nodeType":"EmitStatement","src":"7687:80:10"},{"expression":{"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2301,"name":"nextMsgBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"7855:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7872:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7855:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2304,"nodeType":"ExpressionStatement","src":"7855:22:10"}]}},"id":2358,"nodeType":"IfStatement","src":"6677:1726:10","trueBody":{"id":2269,"nodeType":"Block","src":"6711:814:10","statements":[{"assignments":[2203],"declarations":[{"constant":false,"id":2203,"mutability":"mutable","name":"msgs","nameLocation":"6749:4:10","nodeType":"VariableDeclaration","scope":2269,"src":"6725:28:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload[]"},"typeName":{"baseType":{"id":2201,"nodeType":"UserDefinedTypeName","pathNode":{"id":2200,"name":"QueuedPayload","nameLocations":["6725:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"6725:13:10"},"referencedDeclaration":1865,"src":"6725:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload"}},"id":2202,"nodeType":"ArrayTypeName","src":"6725:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload[]"}},"visibility":"internal"}],"id":2209,"initialValue":{"baseExpression":{"baseExpression":{"id":2204,"name":"msgsToDeliver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"6756:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.QueuedPayload storage ref[] storage ref))"}},"id":2206,"indexExpression":{"id":2205,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"6770:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6756:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.QueuedPayload storage ref[] storage ref)"}},"id":2208,"indexExpression":{"id":2207,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"6783:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6756:33:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6725:64:10"},{"assignments":[2212],"declarations":[{"constant":false,"id":2212,"mutability":"mutable","name":"newMsg","nameLocation":"6824:6:10","nodeType":"VariableDeclaration","scope":2269,"src":"6803:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"QueuedPayload","nameLocations":["6803:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"6803:13:10"},"referencedDeclaration":1865,"src":"6803:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload"}},"visibility":"internal"}],"id":2218,"initialValue":{"arguments":[{"id":2214,"name":"_dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"6847:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2215,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"6860:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2216,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6868:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2213,"name":"QueuedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"6833:13:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_QueuedPayload_$1865_storage_ptr_$","typeString":"type(struct LZEndpointMock.QueuedPayload storage pointer)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6833:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}},"nodeType":"VariableDeclarationStatement","src":"6803:74:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2219,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"7083:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7088:6:10","memberName":"length","nodeType":"MemberAccess","src":"7083:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7097:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7083:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2267,"nodeType":"Block","src":"7465:50:10","statements":[{"expression":{"arguments":[{"id":2264,"name":"newMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"7493:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_QueuedPayload_$1865_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}],"expression":{"id":2261,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"7483:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7488:4:10","memberName":"push","nodeType":"MemberAccess","src":"7483:9:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr_$_t_struct$_QueuedPayload_$1865_storage_$returns$__$attached_to$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr_$","typeString":"function (struct LZEndpointMock.QueuedPayload storage ref[] storage pointer,struct LZEndpointMock.QueuedPayload storage ref)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2266,"nodeType":"ExpressionStatement","src":"7483:17:10"}]},"id":2268,"nodeType":"IfStatement","src":"7079:436:10","trueBody":{"id":2260,"nodeType":"Block","src":"7100:359:10","statements":[{"expression":{"arguments":[{"id":2226,"name":"newMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"7164:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_QueuedPayload_$1865_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}],"expression":{"id":2223,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"7154:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7159:4:10","memberName":"push","nodeType":"MemberAccess","src":"7154:9:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr_$_t_struct$_QueuedPayload_$1865_storage_$returns$__$attached_to$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr_$","typeString":"function (struct LZEndpointMock.QueuedPayload storage ref[] storage pointer,struct LZEndpointMock.QueuedPayload storage ref)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7154:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2228,"nodeType":"ExpressionStatement","src":"7154:17:10"},{"body":{"id":2252,"nodeType":"Block","src":"7287:62:10","statements":[{"expression":{"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2242,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"7309:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":2246,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2243,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"7314:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7318:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7314:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7309:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2247,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"7323:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":2249,"indexExpression":{"id":2248,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"7328:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7323:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref"}},"src":"7309:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref"}},"id":2251,"nodeType":"ExpressionStatement","src":"7309:21:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2233,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"7261:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2234,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"7265:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7270:6:10","memberName":"length","nodeType":"MemberAccess","src":"7265:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7279:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7265:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7261:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2253,"initializationExpression":{"assignments":[2230],"declarations":[{"constant":false,"id":2230,"mutability":"mutable","name":"i","nameLocation":"7254:1:10","nodeType":"VariableDeclaration","scope":2253,"src":"7249:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint","nodeType":"ElementaryTypeName","src":"7249:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2232,"initialValue":{"hexValue":"30","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7258:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7249:10:10"},"loopExpression":{"expression":{"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7282:3:10","subExpression":{"id":2239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"7282:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2241,"nodeType":"ExpressionStatement","src":"7282:3:10"},"nodeType":"ForStatement","src":"7244:105:10"},{"expression":{"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2254,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"7428:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":2256,"indexExpression":{"hexValue":"30","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7433:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7428:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2257,"name":"newMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"7438:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}},"src":"7428:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref"}},"id":2259,"nodeType":"ExpressionStatement","src":"7428:16:10"}]}}]}}]},"functionSelector":"c2fa4813","id":2360,"implemented":true,"kind":"function","modifiers":[{"id":2169,"kind":"modifierInvocation","modifierName":{"id":2168,"name":"receiveNonReentrant","nameLocations":["6295:19:10"],"nodeType":"IdentifierPath","referencedDeclaration":1903,"src":"6295:19:10"},"nodeType":"ModifierInvocation","src":"6295:19:10"}],"name":"receivePayload","nameLocation":"6089:14:10","nodeType":"FunctionDefinition","overrides":{"id":2167,"nodeType":"OverrideSpecifier","overrides":[],"src":"6286:8:10"},"parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"_srcChainId","nameLocation":"6120:11:10","nodeType":"VariableDeclaration","scope":2360,"src":"6113:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2154,"name":"uint16","nodeType":"ElementaryTypeName","src":"6113:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"_path","nameLocation":"6156:5:10","nodeType":"VariableDeclaration","scope":2360,"src":"6141:20:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2156,"name":"bytes","nodeType":"ElementaryTypeName","src":"6141:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"_dstAddress","nameLocation":"6179:11:10","nodeType":"VariableDeclaration","scope":2360,"src":"6171:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2158,"name":"address","nodeType":"ElementaryTypeName","src":"6171:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"_nonce","nameLocation":"6207:6:10","nodeType":"VariableDeclaration","scope":2360,"src":"6200:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2160,"name":"uint64","nodeType":"ElementaryTypeName","src":"6200:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"_gasLimit","nameLocation":"6228:9:10","nodeType":"VariableDeclaration","scope":2360,"src":"6223:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint","nodeType":"ElementaryTypeName","src":"6223:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"_payload","nameLocation":"6262:8:10","nodeType":"VariableDeclaration","scope":2360,"src":"6247:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2164,"name":"bytes","nodeType":"ElementaryTypeName","src":"6247:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6103:173:10"},"returnParameters":{"id":2170,"nodeType":"ParameterList","parameters":[],"src":"6315:0:10"},"scope":3088,"src":"6080:2329:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1399],"body":{"id":2376,"nodeType":"Block","src":"8519:53:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2370,"name":"inboundNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"8536:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(bytes memory => uint64))"}},"id":2372,"indexExpression":{"id":2371,"name":"_chainID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"8549:8:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8536:22:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_uint64_$","typeString":"mapping(bytes memory => uint64)"}},"id":2374,"indexExpression":{"id":2373,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"8559:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8536:29:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":2369,"id":2375,"nodeType":"Return","src":"8529:36:10"}]},"functionSelector":"fdc07c70","id":2377,"implemented":true,"kind":"function","modifiers":[],"name":"getInboundNonce","nameLocation":"8424:15:10","nodeType":"FunctionDefinition","overrides":{"id":2366,"nodeType":"OverrideSpecifier","overrides":[],"src":"8493:8:10"},"parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"_chainID","nameLocation":"8447:8:10","nodeType":"VariableDeclaration","scope":2377,"src":"8440:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2361,"name":"uint16","nodeType":"ElementaryTypeName","src":"8440:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"_path","nameLocation":"8472:5:10","nodeType":"VariableDeclaration","scope":2377,"src":"8457:20:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2363,"name":"bytes","nodeType":"ElementaryTypeName","src":"8457:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8439:39:10"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2377,"src":"8511:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2367,"name":"uint64","nodeType":"ElementaryTypeName","src":"8511:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8510:8:10"},"scope":3088,"src":"8415:157:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1408],"body":{"id":2393,"nodeType":"Block","src":"8682:60:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2387,"name":"outboundNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"8699:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(address => uint64))"}},"id":2389,"indexExpression":{"id":2388,"name":"_chainID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"8713:8:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8699:23:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint64_$","typeString":"mapping(address => uint64)"}},"id":2391,"indexExpression":{"id":2390,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"8723:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8699:36:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":2386,"id":2392,"nodeType":"Return","src":"8692:43:10"}]},"functionSelector":"7a145748","id":2394,"implemented":true,"kind":"function","modifiers":[],"name":"getOutboundNonce","nameLocation":"8587:16:10","nodeType":"FunctionDefinition","overrides":{"id":2383,"nodeType":"OverrideSpecifier","overrides":[],"src":"8656:8:10"},"parameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"_chainID","nameLocation":"8611:8:10","nodeType":"VariableDeclaration","scope":2394,"src":"8604:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2378,"name":"uint16","nodeType":"ElementaryTypeName","src":"8604:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2381,"mutability":"mutable","name":"_srcAddress","nameLocation":"8629:11:10","nodeType":"VariableDeclaration","scope":2394,"src":"8621:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2380,"name":"address","nodeType":"ElementaryTypeName","src":"8621:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8603:38:10"},"returnParameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2394,"src":"8674:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2384,"name":"uint64","nodeType":"ElementaryTypeName","src":"8674:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8673:8:10"},"scope":3088,"src":"8578:164:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1425],"body":{"id":2458,"nodeType":"Block","src":"8989:507:10","statements":[{"assignments":[2413],"declarations":[{"constant":false,"id":2413,"mutability":"mutable","name":"adapterParams","nameLocation":"9012:13:10","nodeType":"VariableDeclaration","scope":2458,"src":"8999:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2412,"name":"bytes","nodeType":"ElementaryTypeName","src":"8999:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2421,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2414,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"9028:14:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9043:6:10","memberName":"length","nodeType":"MemberAccess","src":"9028:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9052:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9028:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2419,"name":"defaultAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"9073:20:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9028:65:10","trueExpression":{"id":2418,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"9056:14:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8999:94:10"},{"assignments":[2423],"declarations":[{"constant":false,"id":2423,"mutability":"mutable","name":"relayerFee","nameLocation":"9132:10:10","nodeType":"VariableDeclaration","scope":2458,"src":"9127:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint","nodeType":"ElementaryTypeName","src":"9127:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2432,"initialValue":{"arguments":[{"id":2425,"name":"_dstChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"9160:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"hexValue":"31","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":2427,"name":"_userApplication","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"9176:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2428,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"9194:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9203:6:10","memberName":"length","nodeType":"MemberAccess","src":"9194:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2430,"name":"adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"9211:13:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2424,"name":"_getRelayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"9145:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint16_$_t_uint16_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint16,uint16,address,uint256,bytes memory) view returns (uint256)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9145:80:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9127:98:10"},{"assignments":[2434],"declarations":[{"constant":false,"id":2434,"mutability":"mutable","name":"protocolFee","nameLocation":"9266:11:10","nodeType":"VariableDeclaration","scope":2458,"src":"9261:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2433,"name":"uint","nodeType":"ElementaryTypeName","src":"9261:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2440,"initialValue":{"arguments":[{"id":2436,"name":"_payInZRO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"9297:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2437,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"9308:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2438,"name":"oracleFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"9320:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2435,"name":"_getProtocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"9280:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) view returns (uint256)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9280:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9261:69:10"},{"expression":{"condition":{"id":2441,"name":"_payInZRO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"9340:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2445,"name":"nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9375:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2446,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"9387:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9375:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9340:58:10","trueExpression":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2442,"name":"zroFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"9352:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2443,"name":"protocolFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"9361:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9352:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2449,"nodeType":"ExpressionStatement","src":"9340:58:10"},{"expression":{"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2450,"name":"nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9443:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2451,"name":"nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"9455:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2452,"name":"relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"9467:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9455:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2454,"name":"oracleFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"9480:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9455:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9443:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2457,"nodeType":"ExpressionStatement","src":"9443:46:10"}]},"functionSelector":"40a7bb10","id":2459,"implemented":true,"kind":"function","modifiers":[],"name":"estimateFees","nameLocation":"8757:12:10","nodeType":"FunctionDefinition","overrides":{"id":2406,"nodeType":"OverrideSpecifier","overrides":[],"src":"8942:8:10"},"parameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"_dstChainId","nameLocation":"8786:11:10","nodeType":"VariableDeclaration","scope":2459,"src":"8779:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2395,"name":"uint16","nodeType":"ElementaryTypeName","src":"8779:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"_userApplication","nameLocation":"8815:16:10","nodeType":"VariableDeclaration","scope":2459,"src":"8807:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"8807:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"_payload","nameLocation":"8854:8:10","nodeType":"VariableDeclaration","scope":2459,"src":"8841:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2399,"name":"bytes","nodeType":"ElementaryTypeName","src":"8841:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"_payInZRO","nameLocation":"8877:9:10","nodeType":"VariableDeclaration","scope":2459,"src":"8872:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2401,"name":"bool","nodeType":"ElementaryTypeName","src":"8872:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"_adapterParams","nameLocation":"8909:14:10","nodeType":"VariableDeclaration","scope":2459,"src":"8896:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2403,"name":"bytes","nodeType":"ElementaryTypeName","src":"8896:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8769:160:10"},"returnParameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"nativeFee","nameLocation":"8965:9:10","nodeType":"VariableDeclaration","scope":2459,"src":"8960:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint","nodeType":"ElementaryTypeName","src":"8960:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"zroFee","nameLocation":"8981:6:10","nodeType":"VariableDeclaration","scope":2459,"src":"8976:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint","nodeType":"ElementaryTypeName","src":"8976:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8959:29:10"},"scope":3088,"src":"8748:748:10","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1430],"body":{"id":2467,"nodeType":"Block","src":"9564:35:10","statements":[{"expression":{"id":2465,"name":"mockChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"9581:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":2464,"id":2466,"nodeType":"Return","src":"9574:18:10"}]},"functionSelector":"3408e470","id":2468,"implemented":true,"kind":"function","modifiers":[],"name":"getChainId","nameLocation":"9511:10:10","nodeType":"FunctionDefinition","overrides":{"id":2461,"nodeType":"OverrideSpecifier","overrides":[],"src":"9538:8:10"},"parameters":{"id":2460,"nodeType":"ParameterList","parameters":[],"src":"9521:2:10"},"returnParameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2468,"src":"9556:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2462,"name":"uint16","nodeType":"ElementaryTypeName","src":"9556:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"9555:8:10"},"scope":3088,"src":"9502:97:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1439],"body":{"id":2568,"nodeType":"Block","src":"9742:686:10","statements":[{"assignments":[2480],"declarations":[{"constant":false,"id":2480,"mutability":"mutable","name":"sp","nameLocation":"9774:2:10","nodeType":"VariableDeclaration","scope":2568,"src":"9752:24:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"},"typeName":{"id":2479,"nodeType":"UserDefinedTypeName","pathNode":{"id":2478,"name":"StoredPayload","nameLocations":["9752:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"9752:13:10"},"referencedDeclaration":1858,"src":"9752:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"}},"visibility":"internal"}],"id":2486,"initialValue":{"baseExpression":{"baseExpression":{"id":2481,"name":"storedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"9779:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref))"}},"id":2483,"indexExpression":{"id":2482,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"9793:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9779:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref)"}},"id":2485,"indexExpression":{"id":2484,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"9806:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9779:33:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9752:60:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2488,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"9830:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9833:11:10","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"9830:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9856:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9848:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9848:7:10","typeDescriptions":{}}},"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9848:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9830:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2073746f726564207061796c6f6164","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9860:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db","typeString":"literal_string \"LayerZeroMock: no stored payload\""},"value":"LayerZeroMock: no stored payload"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db","typeString":"literal_string \"LayerZeroMock: no stored payload\""}],"id":2487,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9822:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2497,"nodeType":"ExpressionStatement","src":"9822:73:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2499,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"9913:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9922:6:10","memberName":"length","nodeType":"MemberAccess","src":"9913:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2501,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"9932:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9935:13:10","memberName":"payloadLength","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"9932:16:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"9913:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2505,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"9962:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2504,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9952:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9952:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2507,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"9975:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9978:11:10","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"9975:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9952:37:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9913:76:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a20696e76616c6964207061796c6f6164","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9991:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d0b005579c4d5f607baec096f4a22c77289f237586c7362a7902ea2a3c322fe","typeString":"literal_string \"LayerZeroMock: invalid payload\""},"value":"LayerZeroMock: invalid payload"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d0b005579c4d5f607baec096f4a22c77289f237586c7362a7902ea2a3c322fe","typeString":"literal_string \"LayerZeroMock: invalid payload\""}],"id":2498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9905:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9905:119:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2513,"nodeType":"ExpressionStatement","src":"9905:119:10"},{"assignments":[2515],"declarations":[{"constant":false,"id":2515,"mutability":"mutable","name":"dstAddress","nameLocation":"10043:10:10","nodeType":"VariableDeclaration","scope":2568,"src":"10035:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"10035:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2518,"initialValue":{"expression":{"id":2516,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"10056:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10059:10:10","memberName":"dstAddress","nodeType":"MemberAccess","referencedDeclaration":1855,"src":"10056:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10035:34:10"},{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2519,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"10114:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10117:13:10","memberName":"payloadLength","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"10114:16:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10133:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10114:20:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2524,"nodeType":"ExpressionStatement","src":"10114:20:10"},{"expression":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2525,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"10144:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2527,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10147:10:10","memberName":"dstAddress","nodeType":"MemberAccess","referencedDeclaration":1855,"src":"10144:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10168:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10160:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2528,"name":"address","nodeType":"ElementaryTypeName","src":"10160:7:10","typeDescriptions":{}}},"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10160:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10144:26:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2533,"nodeType":"ExpressionStatement","src":"10144:26:10"},{"expression":{"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2534,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"10180:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10183:11:10","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"10180:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10205:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10197:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10197:7:10","typeDescriptions":{}}},"id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10197:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10180:27:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2542,"nodeType":"ExpressionStatement","src":"10180:27:10"},{"assignments":[2544],"declarations":[{"constant":false,"id":2544,"mutability":"mutable","name":"nonce","nameLocation":"10225:5:10","nodeType":"VariableDeclaration","scope":2568,"src":"10218:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2543,"name":"uint64","nodeType":"ElementaryTypeName","src":"10218:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":2550,"initialValue":{"baseExpression":{"baseExpression":{"id":2545,"name":"inboundNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"10233:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_uint64_$_$","typeString":"mapping(uint16 => mapping(bytes memory => uint64))"}},"id":2547,"indexExpression":{"id":2546,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"10246:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10233:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_uint64_$","typeString":"mapping(bytes memory => uint64)"}},"id":2549,"indexExpression":{"id":2548,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"10259:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10233:32:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"10218:47:10"},{"expression":{"arguments":[{"id":2555,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"10317:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2556,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"10330:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2557,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"10337:5:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2558,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"10344:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":2552,"name":"dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"10295:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2551,"name":"ILayerZeroReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"10276:18:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroReceiver_$1514_$","typeString":"type(contract ILayerZeroReceiver)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10276:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroReceiver_$1514","typeString":"contract ILayerZeroReceiver"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10307:9:10","memberName":"lzReceive","nodeType":"MemberAccess","referencedDeclaration":1513,"src":"10276:40:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10276:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2560,"nodeType":"ExpressionStatement","src":"10276:77:10"},{"eventCall":{"arguments":[{"id":2562,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"10383:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2563,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"10396:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":2564,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"10403:5:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2565,"name":"dstAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"10410:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2561,"name":"PayloadCleared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"10368:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint16,bytes memory,uint64,address)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10368:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2567,"nodeType":"EmitStatement","src":"10363:58:10"}]},"functionSelector":"aaff5f16","id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"retryPayload","nameLocation":"9614:12:10","nodeType":"FunctionDefinition","overrides":{"id":2476,"nodeType":"OverrideSpecifier","overrides":[],"src":"9733:8:10"},"parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2470,"mutability":"mutable","name":"_srcChainId","nameLocation":"9643:11:10","nodeType":"VariableDeclaration","scope":2569,"src":"9636:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2469,"name":"uint16","nodeType":"ElementaryTypeName","src":"9636:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2472,"mutability":"mutable","name":"_path","nameLocation":"9679:5:10","nodeType":"VariableDeclaration","scope":2569,"src":"9664:20:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2471,"name":"bytes","nodeType":"ElementaryTypeName","src":"9664:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2474,"mutability":"mutable","name":"_payload","nameLocation":"9709:8:10","nodeType":"VariableDeclaration","scope":2569,"src":"9694:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2473,"name":"bytes","nodeType":"ElementaryTypeName","src":"9694:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9626:97:10"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[],"src":"9742:0:10"},"scope":3088,"src":"9605:823:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1448],"body":{"id":2596,"nodeType":"Block","src":"10540:122:10","statements":[{"assignments":[2581],"declarations":[{"constant":false,"id":2581,"mutability":"mutable","name":"sp","nameLocation":"10572:2:10","nodeType":"VariableDeclaration","scope":2596,"src":"10550:24:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"},"typeName":{"id":2580,"nodeType":"UserDefinedTypeName","pathNode":{"id":2579,"name":"StoredPayload","nameLocations":["10550:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"10550:13:10"},"referencedDeclaration":1858,"src":"10550:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"}},"visibility":"internal"}],"id":2587,"initialValue":{"baseExpression":{"baseExpression":{"id":2582,"name":"storedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"10577:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref))"}},"id":2584,"indexExpression":{"id":2583,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"10591:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10577:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref)"}},"id":2586,"indexExpression":{"id":2585,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"10604:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10577:33:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10550:60:10"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2588,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"10627:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10630:11:10","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"10627:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10653:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10645:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10645:7:10","typeDescriptions":{}}},"id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10645:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10627:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2578,"id":2595,"nodeType":"Return","src":"10620:35:10"}]},"functionSelector":"0eaf6ea6","id":2597,"implemented":true,"kind":"function","modifiers":[],"name":"hasStoredPayload","nameLocation":"10443:16:10","nodeType":"FunctionDefinition","overrides":{"id":2575,"nodeType":"OverrideSpecifier","overrides":[],"src":"10516:8:10"},"parameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"_srcChainId","nameLocation":"10467:11:10","nodeType":"VariableDeclaration","scope":2597,"src":"10460:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2570,"name":"uint16","nodeType":"ElementaryTypeName","src":"10460:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"_path","nameLocation":"10495:5:10","nodeType":"VariableDeclaration","scope":2597,"src":"10480:20:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2572,"name":"bytes","nodeType":"ElementaryTypeName","src":"10480:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10459:42:10"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2597,"src":"10534:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2576,"name":"bool","nodeType":"ElementaryTypeName","src":"10534:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10533:6:10"},"scope":3088,"src":"10434:228:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1455],"body":{"id":2610,"nodeType":"Block","src":"10749:37:10","statements":[{"expression":{"arguments":[{"id":2607,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10774:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_LZEndpointMock_$3088","typeString":"contract LZEndpointMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LZEndpointMock_$3088","typeString":"contract LZEndpointMock"}],"id":2606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10766:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2605,"name":"address","nodeType":"ElementaryTypeName","src":"10766:7:10","typeDescriptions":{}}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10766:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2604,"id":2609,"nodeType":"Return","src":"10759:20:10"}]},"functionSelector":"9c729da1","id":2611,"implemented":true,"kind":"function","modifiers":[],"name":"getSendLibraryAddress","nameLocation":"10677:21:10","nodeType":"FunctionDefinition","overrides":{"id":2601,"nodeType":"OverrideSpecifier","overrides":[],"src":"10722:8:10"},"parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2611,"src":"10699:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2598,"name":"address","nodeType":"ElementaryTypeName","src":"10699:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10698:9:10"},"returnParameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2611,"src":"10740:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2602,"name":"address","nodeType":"ElementaryTypeName","src":"10740:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10739:9:10"},"scope":3088,"src":"10668:118:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1462],"body":{"id":2624,"nodeType":"Block","src":"10876:37:10","statements":[{"expression":{"arguments":[{"id":2621,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10901:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_LZEndpointMock_$3088","typeString":"contract LZEndpointMock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LZEndpointMock_$3088","typeString":"contract LZEndpointMock"}],"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10893:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2619,"name":"address","nodeType":"ElementaryTypeName","src":"10893:7:10","typeDescriptions":{}}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10893:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2618,"id":2623,"nodeType":"Return","src":"10886:20:10"}]},"functionSelector":"71ba2fd6","id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"getReceiveLibraryAddress","nameLocation":"10801:24:10","nodeType":"FunctionDefinition","overrides":{"id":2615,"nodeType":"OverrideSpecifier","overrides":[],"src":"10849:8:10"},"parameters":{"id":2614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2625,"src":"10826:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"10826:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10825:9:10"},"returnParameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2625,"src":"10867:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2616,"name":"address","nodeType":"ElementaryTypeName","src":"10867:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10866:9:10"},"scope":3088,"src":"10792:121:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1467],"body":{"id":2635,"nodeType":"Block","src":"10985:55:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2631,"name":"_send_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"11002:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2632,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"11025:8:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11002:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2630,"id":2634,"nodeType":"Return","src":"10995:38:10"}]},"functionSelector":"e97a448a","id":2636,"implemented":true,"kind":"function","modifiers":[],"name":"isSendingPayload","nameLocation":"10928:16:10","nodeType":"FunctionDefinition","overrides":{"id":2627,"nodeType":"OverrideSpecifier","overrides":[],"src":"10961:8:10"},"parameters":{"id":2626,"nodeType":"ParameterList","parameters":[],"src":"10944:2:10"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2636,"src":"10979:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2628,"name":"bool","nodeType":"ElementaryTypeName","src":"10979:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10978:6:10"},"scope":3088,"src":"10919:121:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1472],"body":{"id":2646,"nodeType":"Block","src":"11114:58:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2642,"name":"_receive_entered_state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"11131:22:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2643,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"11157:8:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11131:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2641,"id":2645,"nodeType":"Return","src":"11124:41:10"}]},"functionSelector":"ca066b35","id":2647,"implemented":true,"kind":"function","modifiers":[],"name":"isReceivingPayload","nameLocation":"11055:18:10","nodeType":"FunctionDefinition","overrides":{"id":2638,"nodeType":"OverrideSpecifier","overrides":[],"src":"11090:8:10"},"parameters":{"id":2637,"nodeType":"ParameterList","parameters":[],"src":"11073:2:10"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2647,"src":"11108:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2639,"name":"bool","nodeType":"ElementaryTypeName","src":"11108:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11107:6:10"},"scope":3088,"src":"11046:126:10","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1485],"body":{"id":2663,"nodeType":"Block","src":"11362:26:10","statements":[{"expression":{"hexValue":"","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11379:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2660,"id":2662,"nodeType":"Return","src":"11372:9:10"}]},"functionSelector":"f5ecbdbc","id":2664,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"11187:9:10","nodeType":"FunctionDefinition","overrides":{"id":2657,"nodeType":"OverrideSpecifier","overrides":[],"src":"11330:8:10"},"parameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2664,"src":"11206:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2648,"name":"uint16","nodeType":"ElementaryTypeName","src":"11206:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2664,"src":"11235:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2650,"name":"uint16","nodeType":"ElementaryTypeName","src":"11235:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2664,"src":"11264:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"11264:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2664,"src":"11289:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint","nodeType":"ElementaryTypeName","src":"11289:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11196:119:10"},"returnParameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2664,"src":"11348:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2658,"name":"bytes","nodeType":"ElementaryTypeName","src":"11348:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11347:14:10"},"scope":3088,"src":"11178:210:10","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1492],"body":{"id":2674,"nodeType":"Block","src":"11502:25:10","statements":[{"expression":{"hexValue":"31","id":2672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11519:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":2671,"id":2673,"nodeType":"Return","src":"11512:8:10"}]},"functionSelector":"096568f6","id":2675,"implemented":true,"kind":"function","modifiers":[],"name":"getSendVersion","nameLocation":"11403:14:10","nodeType":"FunctionDefinition","overrides":{"id":2668,"nodeType":"OverrideSpecifier","overrides":[],"src":"11476:8:10"},"parameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2675,"src":"11427:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"11427:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11417:44:10"},"returnParameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2675,"src":"11494:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2669,"name":"uint16","nodeType":"ElementaryTypeName","src":"11494:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"11493:8:10"},"scope":3088,"src":"11394:133:10","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1499],"body":{"id":2685,"nodeType":"Block","src":"11644:25:10","statements":[{"expression":{"hexValue":"31","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11661:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":2682,"id":2684,"nodeType":"Return","src":"11654:8:10"}]},"functionSelector":"da1a7c9a","id":2686,"implemented":true,"kind":"function","modifiers":[],"name":"getReceiveVersion","nameLocation":"11542:17:10","nodeType":"FunctionDefinition","overrides":{"id":2679,"nodeType":"OverrideSpecifier","overrides":[],"src":"11618:8:10"},"parameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2686,"src":"11569:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2676,"name":"address","nodeType":"ElementaryTypeName","src":"11569:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11559:44:10"},"returnParameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2686,"src":"11636:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2680,"name":"uint16","nodeType":"ElementaryTypeName","src":"11636:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"11635:8:10"},"scope":3088,"src":"11533:136:10","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[1527],"body":{"id":2698,"nodeType":"Block","src":"11840:2:10","statements":[]},"functionSelector":"cbed8b9c","id":2699,"implemented":true,"kind":"function","modifiers":[],"name":"setConfig","nameLocation":"11684:9:10","nodeType":"FunctionDefinition","overrides":{"id":2696,"nodeType":"OverrideSpecifier","overrides":[],"src":"11831:8:10"},"parameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"11703:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2687,"name":"uint16","nodeType":"ElementaryTypeName","src":"11703:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"11732:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2689,"name":"uint16","nodeType":"ElementaryTypeName","src":"11732:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"11761:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint","nodeType":"ElementaryTypeName","src":"11761:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"11791:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2693,"name":"bytes","nodeType":"ElementaryTypeName","src":"11791:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11693:128:10"},"returnParameters":{"id":2697,"nodeType":"ParameterList","parameters":[],"src":"11840:0:10"},"scope":3088,"src":"11675:167:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1532],"body":{"id":2705,"nodeType":"Block","src":"11924:2:10","statements":[]},"functionSelector":"07e0db17","id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"setSendVersion","nameLocation":"11857:14:10","nodeType":"FunctionDefinition","overrides":{"id":2703,"nodeType":"OverrideSpecifier","overrides":[],"src":"11915:8:10"},"parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"11881:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2700,"name":"uint16","nodeType":"ElementaryTypeName","src":"11881:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"11871:34:10"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[],"src":"11924:0:10"},"scope":3088,"src":"11848:78:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1537],"body":{"id":2712,"nodeType":"Block","src":"12011:2:10","statements":[]},"functionSelector":"10ddb137","id":2713,"implemented":true,"kind":"function","modifiers":[],"name":"setReceiveVersion","nameLocation":"11941:17:10","nodeType":"FunctionDefinition","overrides":{"id":2710,"nodeType":"OverrideSpecifier","overrides":[],"src":"12002:8:10"},"parameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2713,"src":"11968:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2707,"name":"uint16","nodeType":"ElementaryTypeName","src":"11968:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"11958:34:10"},"returnParameters":{"id":2711,"nodeType":"ParameterList","parameters":[],"src":"12011:0:10"},"scope":3088,"src":"11932:81:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1544],"body":{"id":2784,"nodeType":"Block","src":"12107:632:10","statements":[{"assignments":[2723],"declarations":[{"constant":false,"id":2723,"mutability":"mutable","name":"sp","nameLocation":"12139:2:10","nodeType":"VariableDeclaration","scope":2784,"src":"12117:24:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"},"typeName":{"id":2722,"nodeType":"UserDefinedTypeName","pathNode":{"id":2721,"name":"StoredPayload","nameLocations":["12117:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1858,"src":"12117:13:10"},"referencedDeclaration":1858,"src":"12117:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload"}},"visibility":"internal"}],"id":2729,"initialValue":{"baseExpression":{"baseExpression":{"id":2724,"name":"storedPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"12144:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref))"}},"id":2726,"indexExpression":{"id":2725,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"12158:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12144:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_struct$_StoredPayload_$1858_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.StoredPayload storage ref)"}},"id":2728,"indexExpression":{"id":2727,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"12171:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12144:33:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage","typeString":"struct LZEndpointMock.StoredPayload storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12117:60:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2731,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"12273:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12276:11:10","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"12273:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12299:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12291:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12291:7:10","typeDescriptions":{}}},"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12291:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12273:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2073746f726564207061796c6f6164","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12303:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db","typeString":"literal_string \"LayerZeroMock: no stored payload\""},"value":"LayerZeroMock: no stored payload"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db","typeString":"literal_string \"LayerZeroMock: no stored payload\""}],"id":2730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12265:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12265:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2740,"nodeType":"ExpressionStatement","src":"12265:73:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2742,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"12356:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12359:10:10","memberName":"dstAddress","nodeType":"MemberAccess","referencedDeclaration":1855,"src":"12356:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2744,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12373:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12377:6:10","memberName":"sender","nodeType":"MemberAccess","src":"12373:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12356:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a20696e76616c69642063616c6c6572","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12385:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3967011d6285a9dce57c3ff82ee9dd83446fd39eaaeb6fa26af022508e44801b","typeString":"literal_string \"LayerZeroMock: invalid caller\""},"value":"LayerZeroMock: invalid caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3967011d6285a9dce57c3ff82ee9dd83446fd39eaaeb6fa26af022508e44801b","typeString":"literal_string \"LayerZeroMock: invalid caller\""}],"id":2741,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12348:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12348:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2749,"nodeType":"ExpressionStatement","src":"12348:69:10"},{"expression":{"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2750,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"12463:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12466:13:10","memberName":"payloadLength","nodeType":"MemberAccess","referencedDeclaration":1853,"src":"12463:16:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12482:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12463:20:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2755,"nodeType":"ExpressionStatement","src":"12463:20:10"},{"expression":{"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2756,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"12493:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12496:10:10","memberName":"dstAddress","nodeType":"MemberAccess","referencedDeclaration":1855,"src":"12493:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12517:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12509:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"12509:7:10","typeDescriptions":{}}},"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12509:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12493:26:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2764,"nodeType":"ExpressionStatement","src":"12493:26:10"},{"expression":{"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2765,"name":"sp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"12529:2:10","typeDescriptions":{"typeIdentifier":"t_struct$_StoredPayload_$1858_storage_ptr","typeString":"struct LZEndpointMock.StoredPayload storage pointer"}},"id":2767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12532:11:10","memberName":"payloadHash","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"12529:14:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12554:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12546:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12546:7:10","typeDescriptions":{}}},"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12546:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12529:27:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2773,"nodeType":"ExpressionStatement","src":"12529:27:10"},{"eventCall":{"arguments":[{"id":2775,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"12593:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2776,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"12606:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2774,"name":"UaForceResumeReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"12572:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12572:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2778,"nodeType":"EmitStatement","src":"12567:45:10"},{"expression":{"arguments":[{"id":2780,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"12713:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2781,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"12726:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2779,"name":"_clearMsgQue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"12700:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint16_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (uint16,bytes calldata)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12700:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2783,"nodeType":"ExpressionStatement","src":"12700:32:10"}]},"functionSelector":"42d65a8d","id":2785,"implemented":true,"kind":"function","modifiers":[],"name":"forceResumeReceive","nameLocation":"12028:18:10","nodeType":"FunctionDefinition","overrides":{"id":2719,"nodeType":"OverrideSpecifier","overrides":[],"src":"12098:8:10"},"parameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"_srcChainId","nameLocation":"12054:11:10","nodeType":"VariableDeclaration","scope":2785,"src":"12047:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2714,"name":"uint16","nodeType":"ElementaryTypeName","src":"12047:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"_path","nameLocation":"12082:5:10","nodeType":"VariableDeclaration","scope":2785,"src":"12067:20:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2716,"name":"bytes","nodeType":"ElementaryTypeName","src":"12067:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12046:42:10"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[],"src":"12107:0:10"},"scope":3088,"src":"12019:720:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2801,"nodeType":"Block","src":"12970:70:10","statements":[{"expression":{"expression":{"baseExpression":{"baseExpression":{"id":2794,"name":"msgsToDeliver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"12987:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.QueuedPayload storage ref[] storage ref))"}},"id":2796,"indexExpression":{"id":2795,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"13001:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12987:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.QueuedPayload storage ref[] storage ref)"}},"id":2798,"indexExpression":{"id":2797,"name":"_srcAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"13014:11:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12987:39:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage ref"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13027:6:10","memberName":"length","nodeType":"MemberAccess","src":"12987:46:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2793,"id":2800,"nodeType":"Return","src":"12980:53:10"}]},"functionSelector":"7f6df8e6","id":2802,"implemented":true,"kind":"function","modifiers":[],"name":"getLengthOfQueue","nameLocation":"12876:16:10","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"_srcChainId","nameLocation":"12900:11:10","nodeType":"VariableDeclaration","scope":2802,"src":"12893:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2786,"name":"uint16","nodeType":"ElementaryTypeName","src":"12893:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"_srcAddress","nameLocation":"12928:11:10","nodeType":"VariableDeclaration","scope":2802,"src":"12913:26:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2788,"name":"bytes","nodeType":"ElementaryTypeName","src":"12913:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12892:48:10"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2802,"src":"12964:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint","nodeType":"ElementaryTypeName","src":"12964:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12963:6:10"},"scope":3088,"src":"12867:173:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2809,"nodeType":"Block","src":"13145:38:10","statements":[{"expression":{"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2805,"name":"nextMsgBlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"13155:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13172:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13155:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2808,"nodeType":"ExpressionStatement","src":"13155:21:10"}]},"functionSelector":"d23104f1","id":2810,"implemented":true,"kind":"function","modifiers":[],"name":"blockNextMsg","nameLocation":"13121:12:10","nodeType":"FunctionDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[],"src":"13133:2:10"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[],"src":"13145:0:10"},"scope":3088,"src":"13112:71:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2823,"nodeType":"Block","src":"13267:60:10","statements":[{"expression":{"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2817,"name":"lzEndpointLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"13277:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":2819,"indexExpression":{"id":2818,"name":"destAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"13294:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13277:26:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2820,"name":"lzEndpointAddr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"13306:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13277:43:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2822,"nodeType":"ExpressionStatement","src":"13277:43:10"}]},"functionSelector":"c08f15a1","id":2824,"implemented":true,"kind":"function","modifiers":[],"name":"setDestLzEndpoint","nameLocation":"13198:17:10","nodeType":"FunctionDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"destAddr","nameLocation":"13224:8:10","nodeType":"VariableDeclaration","scope":2824,"src":"13216:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2811,"name":"address","nodeType":"ElementaryTypeName","src":"13216:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2814,"mutability":"mutable","name":"lzEndpointAddr","nameLocation":"13242:14:10","nodeType":"VariableDeclaration","scope":2824,"src":"13234:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2813,"name":"address","nodeType":"ElementaryTypeName","src":"13234:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13215:42:10"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[],"src":"13267:0:10"},"scope":3088,"src":"13189:138:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2867,"nodeType":"Block","src":"13527:284:10","statements":[{"expression":{"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2837,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"13537:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":2839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13554:13:10","memberName":"dstPriceRatio","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"13537:30:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2840,"name":"_dstPriceRatio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"13570:14:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"13537:47:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2842,"nodeType":"ExpressionStatement","src":"13537:47:10"},{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2843,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"13594:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":2845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13611:16:10","memberName":"dstGasPriceInWei","nodeType":"MemberAccess","referencedDeclaration":1844,"src":"13594:33:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2846,"name":"_dstGasPriceInWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"13630:17:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"13594:53:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2848,"nodeType":"ExpressionStatement","src":"13594:53:10"},{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2849,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"13657:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":2851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13674:15:10","memberName":"dstNativeAmtCap","nodeType":"MemberAccess","referencedDeclaration":1846,"src":"13657:32:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2852,"name":"_dstNativeAmtCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"13692:16:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"13657:51:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2854,"nodeType":"ExpressionStatement","src":"13657:51:10"},{"expression":{"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2855,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"13718:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":2857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13735:7:10","memberName":"baseGas","nodeType":"MemberAccess","referencedDeclaration":1848,"src":"13718:24:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2858,"name":"_baseGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"13745:8:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13718:35:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2860,"nodeType":"ExpressionStatement","src":"13718:35:10"},{"expression":{"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2861,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"13763:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":2863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13780:10:10","memberName":"gasPerByte","nodeType":"MemberAccess","referencedDeclaration":1850,"src":"13763:27:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2864,"name":"_gasPerByte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"13793:11:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13763:41:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2866,"nodeType":"ExpressionStatement","src":"13763:41:10"}]},"functionSelector":"2c365e25","id":2868,"implemented":true,"kind":"function","modifiers":[],"name":"setRelayerPrice","nameLocation":"13342:15:10","nodeType":"FunctionDefinition","parameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2826,"mutability":"mutable","name":"_dstPriceRatio","nameLocation":"13375:14:10","nodeType":"VariableDeclaration","scope":2868,"src":"13367:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2825,"name":"uint128","nodeType":"ElementaryTypeName","src":"13367:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2828,"mutability":"mutable","name":"_dstGasPriceInWei","nameLocation":"13407:17:10","nodeType":"VariableDeclaration","scope":2868,"src":"13399:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2827,"name":"uint128","nodeType":"ElementaryTypeName","src":"13399:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2830,"mutability":"mutable","name":"_dstNativeAmtCap","nameLocation":"13442:16:10","nodeType":"VariableDeclaration","scope":2868,"src":"13434:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2829,"name":"uint128","nodeType":"ElementaryTypeName","src":"13434:7:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"_baseGas","nameLocation":"13475:8:10","nodeType":"VariableDeclaration","scope":2868,"src":"13468:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2831,"name":"uint64","nodeType":"ElementaryTypeName","src":"13468:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"_gasPerByte","nameLocation":"13500:11:10","nodeType":"VariableDeclaration","scope":2868,"src":"13493:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2833,"name":"uint64","nodeType":"ElementaryTypeName","src":"13493:6:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13357:160:10"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[],"src":"13527:0:10"},"scope":3088,"src":"13333:478:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2887,"nodeType":"Block","src":"13880:99:10","statements":[{"expression":{"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2875,"name":"protocolFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"13890:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$1840_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig storage ref"}},"id":2877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13908:6:10","memberName":"zroFee","nodeType":"MemberAccess","referencedDeclaration":1837,"src":"13890:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2878,"name":"_zroFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"13917:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13890:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2880,"nodeType":"ExpressionStatement","src":"13890:34:10"},{"expression":{"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2881,"name":"protocolFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"13934:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$1840_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig storage ref"}},"id":2883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13952:8:10","memberName":"nativeBP","nodeType":"MemberAccess","referencedDeclaration":1839,"src":"13934:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2884,"name":"_nativeBP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"13963:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13934:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2886,"nodeType":"ExpressionStatement","src":"13934:38:10"}]},"functionSelector":"240de277","id":2888,"implemented":true,"kind":"function","modifiers":[],"name":"setProtocolFee","nameLocation":"13826:14:10","nodeType":"FunctionDefinition","parameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"_zroFee","nameLocation":"13846:7:10","nodeType":"VariableDeclaration","scope":2888,"src":"13841:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint","nodeType":"ElementaryTypeName","src":"13841:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"_nativeBP","nameLocation":"13860:9:10","nodeType":"VariableDeclaration","scope":2888,"src":"13855:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint","nodeType":"ElementaryTypeName","src":"13855:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13840:30:10"},"returnParameters":{"id":2874,"nodeType":"ParameterList","parameters":[],"src":"13880:0:10"},"scope":3088,"src":"13817:162:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2897,"nodeType":"Block","src":"14033:39:10","statements":[{"expression":{"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2893,"name":"oracleFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"14043:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2894,"name":"_oracleFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2890,"src":"14055:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14043:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2896,"nodeType":"ExpressionStatement","src":"14043:22:10"}]},"functionSelector":"b6d9ef60","id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"setOracleFee","nameLocation":"13994:12:10","nodeType":"FunctionDefinition","parameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"_oracleFee","nameLocation":"14012:10:10","nodeType":"VariableDeclaration","scope":2898,"src":"14007:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2889,"name":"uint","nodeType":"ElementaryTypeName","src":"14007:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14006:17:10"},"returnParameters":{"id":2892,"nodeType":"ParameterList","parameters":[],"src":"14033:0:10"},"scope":3088,"src":"13985:87:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2907,"nodeType":"Block","src":"14149:54:10","statements":[{"expression":{"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2903,"name":"defaultAdapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"14159:20:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2904,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"14182:14:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"14159:37:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":2906,"nodeType":"ExpressionStatement","src":"14159:37:10"}]},"functionSelector":"fbba623b","id":2908,"implemented":true,"kind":"function","modifiers":[],"name":"setDefaultAdapterParams","nameLocation":"14087:23:10","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"_adapterParams","nameLocation":"14124:14:10","nodeType":"VariableDeclaration","scope":2908,"src":"14111:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2899,"name":"bytes","nodeType":"ElementaryTypeName","src":"14111:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14110:29:10"},"returnParameters":{"id":2902,"nodeType":"ParameterList","parameters":[],"src":"14149:0:10"},"scope":3088,"src":"14078:125:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2960,"nodeType":"Block","src":"14461:425:10","statements":[{"assignments":[2919],"declarations":[{"constant":false,"id":2919,"mutability":"mutable","name":"msgs","nameLocation":"14495:4:10","nodeType":"VariableDeclaration","scope":2960,"src":"14471:28:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload[]"},"typeName":{"baseType":{"id":2917,"nodeType":"UserDefinedTypeName","pathNode":{"id":2916,"name":"QueuedPayload","nameLocations":["14471:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"14471:13:10"},"referencedDeclaration":1865,"src":"14471:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload"}},"id":2918,"nodeType":"ArrayTypeName","src":"14471:15:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload[]"}},"visibility":"internal"}],"id":2925,"initialValue":{"baseExpression":{"baseExpression":{"id":2920,"name":"msgsToDeliver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"14502:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint16_$_t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_$_$","typeString":"mapping(uint16 => mapping(bytes memory => struct LZEndpointMock.QueuedPayload storage ref[] storage ref))"}},"id":2922,"indexExpression":{"id":2921,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"14516:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14502:26:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes_memory_ptr_$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_$","typeString":"mapping(bytes memory => struct LZEndpointMock.QueuedPayload storage ref[] storage ref)"}},"id":2924,"indexExpression":{"id":2923,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"14529:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14502:33:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14471:64:10"},{"body":{"id":2958,"nodeType":"Block","src":"14665:215:10","statements":[{"assignments":[2932],"declarations":[{"constant":false,"id":2932,"mutability":"mutable","name":"payload","nameLocation":"14700:7:10","nodeType":"VariableDeclaration","scope":2958,"src":"14679:28:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload"},"typeName":{"id":2931,"nodeType":"UserDefinedTypeName","pathNode":{"id":2930,"name":"QueuedPayload","nameLocations":["14679:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"14679:13:10"},"referencedDeclaration":1865,"src":"14679:13:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload"}},"visibility":"internal"}],"id":2939,"initialValue":{"baseExpression":{"id":2933,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"14710:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":2938,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2934,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"14715:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14720:6:10","memberName":"length","nodeType":"MemberAccess","src":"14715:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14729:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14715:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14710:21:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_storage","typeString":"struct LZEndpointMock.QueuedPayload storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14679:52:10"},{"expression":{"arguments":[{"id":2945,"name":"_srcChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2910,"src":"14794:11:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2946,"name":"_path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"14807:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":2947,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"14814:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}},"id":2948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14822:5:10","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1862,"src":"14814:13:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":2949,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"14829:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}},"id":2950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14837:7:10","memberName":"payload","nodeType":"MemberAccess","referencedDeclaration":1864,"src":"14829:15:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"expression":{"id":2941,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"14764:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_QueuedPayload_$1865_memory_ptr","typeString":"struct LZEndpointMock.QueuedPayload memory"}},"id":2942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14772:10:10","memberName":"dstAddress","nodeType":"MemberAccess","referencedDeclaration":1860,"src":"14764:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2940,"name":"ILayerZeroReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"14745:18:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroReceiver_$1514_$","typeString":"type(contract ILayerZeroReceiver)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14745:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroReceiver_$1514","typeString":"contract ILayerZeroReceiver"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14784:9:10","memberName":"lzReceive","nodeType":"MemberAccess","referencedDeclaration":1513,"src":"14745:48:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint16_$_t_bytes_memory_ptr_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint16,bytes memory,uint64,bytes memory) external"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14745:100:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2952,"nodeType":"ExpressionStatement","src":"14745:100:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2953,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"14859:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14864:3:10","memberName":"pop","nodeType":"MemberAccess","src":"14859:8:10","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr_$","typeString":"function (struct LZEndpointMock.QueuedPayload storage ref[] storage pointer)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14859:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2957,"nodeType":"ExpressionStatement","src":"14859:10:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2926,"name":"msgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"14648:4:10","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_QueuedPayload_$1865_storage_$dyn_storage_ptr","typeString":"struct LZEndpointMock.QueuedPayload storage ref[] storage pointer"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14653:6:10","memberName":"length","nodeType":"MemberAccess","src":"14648:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14662:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14648:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2959,"nodeType":"WhileStatement","src":"14641:239:10"}]},"id":2961,"implemented":true,"kind":"function","modifiers":[],"name":"_clearMsgQue","nameLocation":"14397:12:10","nodeType":"FunctionDefinition","parameters":{"id":2913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2910,"mutability":"mutable","name":"_srcChainId","nameLocation":"14417:11:10","nodeType":"VariableDeclaration","scope":2961,"src":"14410:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2909,"name":"uint16","nodeType":"ElementaryTypeName","src":"14410:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2912,"mutability":"mutable","name":"_path","nameLocation":"14445:5:10","nodeType":"VariableDeclaration","scope":2961,"src":"14430:20:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2911,"name":"bytes","nodeType":"ElementaryTypeName","src":"14430:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14409:42:10"},"returnParameters":{"id":2914,"nodeType":"ParameterList","parameters":[],"src":"14461:0:10"},"scope":3088,"src":"14388:498:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2990,"nodeType":"Block","src":"15028:190:10","statements":[{"condition":{"id":2972,"name":"_payInZro","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"15042:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2988,"nodeType":"Block","src":"15115:97:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"_relayerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"15138:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2978,"name":"_oracleFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"15152:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15138:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15137:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2981,"name":"protocolFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"15166:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$1840_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig storage ref"}},"id":2982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15184:8:10","memberName":"nativeBP","nodeType":"MemberAccess","referencedDeclaration":1839,"src":"15166:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15137:55:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15136:57:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15196:5:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"15136:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2971,"id":2987,"nodeType":"Return","src":"15129:72:10"}]},"id":2989,"nodeType":"IfStatement","src":"15038:174:10","trueBody":{"id":2976,"nodeType":"Block","src":"15053:56:10","statements":[{"expression":{"expression":{"id":2973,"name":"protocolFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"15074:17:10","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFeeConfig_$1840_storage","typeString":"struct LZEndpointMock.ProtocolFeeConfig storage ref"}},"id":2974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15092:6:10","memberName":"zroFee","nodeType":"MemberAccess","referencedDeclaration":1837,"src":"15074:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2971,"id":2975,"nodeType":"Return","src":"15067:31:10"}]}}]},"id":2991,"implemented":true,"kind":"function","modifiers":[],"name":"_getProtocolFees","nameLocation":"14901:16:10","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"_payInZro","nameLocation":"14932:9:10","nodeType":"VariableDeclaration","scope":2991,"src":"14927:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2962,"name":"bool","nodeType":"ElementaryTypeName","src":"14927:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"_relayerFee","nameLocation":"14956:11:10","nodeType":"VariableDeclaration","scope":2991,"src":"14951:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint","nodeType":"ElementaryTypeName","src":"14951:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"_oracleFee","nameLocation":"14982:10:10","nodeType":"VariableDeclaration","scope":2991,"src":"14977:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint","nodeType":"ElementaryTypeName","src":"14977:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14917:81:10"},"returnParameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"15022:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint","nodeType":"ElementaryTypeName","src":"15022:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15021:6:10"},"scope":3088,"src":"14892:326:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3086,"nodeType":"Block","src":"15462:1084:10","statements":[{"assignments":[3007,3009,3011,null],"declarations":[{"constant":false,"id":3007,"mutability":"mutable","name":"txType","nameLocation":"15480:6:10","nodeType":"VariableDeclaration","scope":3086,"src":"15473:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3006,"name":"uint16","nodeType":"ElementaryTypeName","src":"15473:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3009,"mutability":"mutable","name":"extraGas","nameLocation":"15493:8:10","nodeType":"VariableDeclaration","scope":3086,"src":"15488:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint","nodeType":"ElementaryTypeName","src":"15488:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"dstNativeAmt","nameLocation":"15508:12:10","nodeType":"VariableDeclaration","scope":3086,"src":"15503:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint","nodeType":"ElementaryTypeName","src":"15503:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3016,"initialValue":{"arguments":[{"id":3014,"name":"_adapterParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"15552:14:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3012,"name":"LzLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"15526:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LzLib_$1770_$","typeString":"type(library LzLib)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15532:19:10","memberName":"decodeAdapterParams","nodeType":"MemberAccess","referencedDeclaration":1731,"src":"15526:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint16_$_t_uint256_$_t_uint256_$_t_address_payable_$","typeString":"function (bytes memory) pure returns (uint16,uint256,uint256,address payable)"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15526:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint256_$_t_uint256_$_t_address_payable_$","typeString":"tuple(uint16,uint256,uint256,address payable)"}},"nodeType":"VariableDeclarationStatement","src":"15472:95:10"},{"assignments":[3018],"declarations":[{"constant":false,"id":3018,"mutability":"mutable","name":"totalRemoteToken","nameLocation":"15582:16:10","nodeType":"VariableDeclaration","scope":3086,"src":"15577:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint","nodeType":"ElementaryTypeName","src":"15577:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3019,"nodeType":"VariableDeclarationStatement","src":"15577:21:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3020,"name":"txType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"15659:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15669:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15659:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3036,"nodeType":"IfStatement","src":"15655:187:10","trueBody":{"id":3035,"nodeType":"Block","src":"15672:170:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3024,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"15694:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":3025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15711:15:10","memberName":"dstNativeAmtCap","nodeType":"MemberAccess","referencedDeclaration":1846,"src":"15694:32:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3026,"name":"dstNativeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"15730:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15694:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617965725a65726f4d6f636b3a206473744e6174697665416d7420746f6f206c6172676520","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15744:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ed68b89a8d51980886c19b98768f5848012f002a5537f0951f8528791f91206","typeString":"literal_string \"LayerZeroMock: dstNativeAmt too large \""},"value":"LayerZeroMock: dstNativeAmt too large "}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ed68b89a8d51980886c19b98768f5848012f002a5537f0951f8528791f91206","typeString":"literal_string \"LayerZeroMock: dstNativeAmt too large \""}],"id":3023,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15686:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15686:99:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3030,"nodeType":"ExpressionStatement","src":"15686:99:10"},{"expression":{"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3031,"name":"totalRemoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"15799:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3032,"name":"dstNativeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"15819:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15799:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3034,"nodeType":"ExpressionStatement","src":"15799:32:10"}]}},{"assignments":[3038],"declarations":[{"constant":false,"id":3038,"mutability":"mutable","name":"remoteGasTotal","nameLocation":"15924:14:10","nodeType":"VariableDeclaration","scope":3086,"src":"15919:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint","nodeType":"ElementaryTypeName","src":"15919:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3047,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3039,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"15941:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":3040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15958:16:10","memberName":"dstGasPriceInWei","nodeType":"MemberAccess","referencedDeclaration":1844,"src":"15941:33:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3041,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"15978:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":3042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15995:7:10","memberName":"baseGas","nodeType":"MemberAccess","referencedDeclaration":1848,"src":"15978:24:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3043,"name":"extraGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"16005:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15978:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15977:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15941:73:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15919:95:10"},{"expression":{"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3048,"name":"totalRemoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"16024:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3049,"name":"remoteGasTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"16044:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16024:34:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3051,"nodeType":"ExpressionStatement","src":"16024:34:10"},{"assignments":[3053],"declarations":[{"constant":false,"id":3053,"mutability":"mutable","name":"basePrice","nameLocation":"16191:9:10","nodeType":"VariableDeclaration","scope":3086,"src":"16186:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint","nodeType":"ElementaryTypeName","src":"16186:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3063,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3054,"name":"totalRemoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"16204:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3055,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"16223:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":3056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16240:13:10","memberName":"dstPriceRatio","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"16223:30:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"16204:49:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16203:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":3061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16257:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16261:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"16257:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}},"src":"16203:60:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16186:77:10"},{"assignments":[3065],"declarations":[{"constant":false,"id":3065,"mutability":"mutable","name":"pricePerByte","nameLocation":"16360:12:10","nodeType":"VariableDeclaration","scope":3086,"src":"16355:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint","nodeType":"ElementaryTypeName","src":"16355:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3079,"initialValue":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3066,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"16376:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":3067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16393:16:10","memberName":"dstGasPriceInWei","nodeType":"MemberAccess","referencedDeclaration":1844,"src":"16376:33:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3068,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"16412:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":3069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16429:10:10","memberName":"gasPerByte","nodeType":"MemberAccess","referencedDeclaration":1850,"src":"16412:27:10","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16376:63:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3071,"name":"relayerFeeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"16442:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_RelayerFeeConfig_$1851_storage","typeString":"struct LZEndpointMock.RelayerFeeConfig storage ref"}},"id":3072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16459:13:10","memberName":"dstPriceRatio","nodeType":"MemberAccess","referencedDeclaration":1842,"src":"16442:30:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"16376:96:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":3074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16375:98:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"id":3077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16476:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3130","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16480:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"16476:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"}},"src":"16375:107:10","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"16355:127:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3080,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"16500:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"_payloadSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"16512:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3082,"name":"pricePerByte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"16527:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16512:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16500:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3005,"id":3085,"nodeType":"Return","src":"16493:46:10"}]},"id":3087,"implemented":true,"kind":"function","modifiers":[],"name":"_getRelayerFee","nameLocation":"15233:14:10","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"15257:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2992,"name":"uint16","nodeType":"ElementaryTypeName","src":"15257:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"15291:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2994,"name":"uint16","nodeType":"ElementaryTypeName","src":"15291:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"15332:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2996,"name":"address","nodeType":"ElementaryTypeName","src":"15332:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2999,"mutability":"mutable","name":"_payloadSize","nameLocation":"15377:12:10","nodeType":"VariableDeclaration","scope":3087,"src":"15372:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint","nodeType":"ElementaryTypeName","src":"15372:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"_adapterParams","nameLocation":"15412:14:10","nodeType":"VariableDeclaration","scope":3087,"src":"15399:27:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3000,"name":"bytes","nodeType":"ElementaryTypeName","src":"15399:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15247:185:10"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"15456:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint","nodeType":"ElementaryTypeName","src":"15456:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15455:6:10"},"scope":3088,"src":"15224:1322:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3089,"src":"812:15736:10","usedErrors":[],"usedEvents":[1909,1919,1933,1939]}],"src":"38:16511:10"},"id":10}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/BytesLib.sol":{"BytesLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9e740e21f136f03eb23fd2719fe184ac9d607ddde7511f2246008766e4be14f64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xE7 BLOCKHASH 0xE2 0x1F SGT PUSH16 0x3EB23FD2719FE184AC9D607DDDE7511 CALLCODE 0x24 PUSH1 0x8 PUSH23 0x6E4BE14F64736F6C634300081400330000000000000000 ","sourceMap":"369:18622:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:18622:2;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9e740e21f136f03eb23fd2719fe184ac9d607ddde7511f2246008766e4be14f64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xE7 BLOCKHASH 0xE2 0x1F SGT PUSH16 0x3EB23FD2719FE184AC9D607DDDE7511 CALLCODE 0x24 PUSH1 0x8 PUSH23 0x6E4BE14F64736F6C634300081400330000000000000000 ","sourceMap":"369:18622:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"concat(bytes memory,bytes memory)":"infinite","concatStorage(bytes storage pointer,bytes memory)":"infinite","equal(bytes memory,bytes memory)":"infinite","equalStorage(bytes storage pointer,bytes memory)":"infinite","slice(bytes memory,uint256,uint256)":"infinite","toAddress(bytes memory,uint256)":"infinite","toBytes32(bytes memory,uint256)":"infinite","toUint128(bytes memory,uint256)":"infinite","toUint16(bytes memory,uint256)":"infinite","toUint256(bytes memory,uint256)":"infinite","toUint32(bytes memory,uint256)":"infinite","toUint64(bytes memory,uint256)":"infinite","toUint8(bytes memory,uint256)":"infinite","toUint96(bytes memory,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/ExcessivelySafeCall.sol":{"ExcessivelySafeCall":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edb04851a140e1476f3b4a1e6aced4558fcd72357e62866ed5c63b76f4f7d85f64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xB0 BASEFEE MLOAD LOG1 BLOCKHASH 0xE1 SELFBALANCE PUSH16 0x3B4A1E6ACED4558FCD72357E62866ED5 0xC6 EXTCODESIZE PUSH23 0xF4F7D85F64736F6C634300081400330000000000000000 ","sourceMap":"72:5387:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;72:5387:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edb04851a140e1476f3b4a1e6aced4558fcd72357e62866ed5c63b76f4f7d85f64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xB0 BASEFEE MLOAD LOG1 BLOCKHASH 0xE1 SELFBALANCE PUSH16 0x3B4A1E6ACED4558FCD72357E62866ED5 0xC6 EXTCODESIZE PUSH23 0xF4F7D85F64736F6C634300081400330000000000000000 ","sourceMap":"72:5387:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"excessivelySafeCall(address,uint256,uint16,bytes memory)":"infinite","excessivelySafeStaticCall(address,uint256,uint16,bytes memory)":"infinite","swapSelector(bytes4,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/ExcessivelySafeCall.sol\":\"ExcessivelySafeCall\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                0, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n                _gas, // gas\\n                _target, // recipient\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\n        require(_buf.length >= 4);\\n        uint _mask = LOW_28_MASK;\\n        assembly {\\n            // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n            // mask out the top 4 bytes\\n            // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4e52af409b5ec80432292d86fb01906785eb78ac31da3bab4565aabcd6e3e56\",\"license\":\"MIT OR Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/lzApp/LzApp.sol":{"LzApp":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","owner()":"8da5cb5b","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","renounceOwnership()":"715018a6","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lzApp/LzApp.sol\":\"LzApp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"},\"contracts/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"../libraries/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\n            \\\"LzApp: invalid source sending contract\\\"\\n        );\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function _lzSend(\\n        uint16 _dstChainId,\\n        bytes memory _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes memory _adapterParams,\\n        uint _nativeFee\\n    ) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        _checkPayloadSize(_dstChainId, _payload.length);\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(\\n        uint16 _dstChainId,\\n        uint16 _type,\\n        bytes memory _adapterParams,\\n        uint _extraGas\\n    ) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\n        if (payloadSizeLimit == 0) {\\n            // use default if not set\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\n        }\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address,\\n        uint _configType\\n    ) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = _path;\\n        emit SetTrustedRemote(_remoteChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(\\n        uint16 _dstChainId,\\n        uint16 _packetType,\\n        uint _minGas\\n    ) external onlyOwner {\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    // if the size is 0, it means default size limit\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x309c994bdcf69ad63c6789694a28eb72a773e2d9db58fe572ab2b34a475972ce\",\"license\":\"MIT\"},\"contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/lzApp/LzApp.sol:LzApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":598,"contract":"contracts/lzApp/LzApp.sol:LzApp","label":"trustedRemoteLookup","offset":0,"slot":"1","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":604,"contract":"contracts/lzApp/LzApp.sol:LzApp","label":"minDstGasLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":608,"contract":"contracts/lzApp/LzApp.sol:LzApp","label":"payloadSizeLimitLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_uint256)"},{"astId":610,"contract":"contracts/lzApp/LzApp.sol:LzApp","label":"precrime","offset":0,"slot":"4","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/lzApp/NonblockingLzApp.sol":{"NonblockingLzApp":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"_payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"_reason","type":"bytes"}],"name":"MessageFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"_nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"RetryMessageSuccess","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"_type","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"_minDstGas","type":"uint256"}],"name":"SetMinDstGas","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"precrime","type":"address"}],"name":"SetPrecrime","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_path","type":"bytes"}],"name":"SetTrustedRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"SetTrustedRemoteAddress","type":"event"},{"inputs":[],"name":"DEFAULT_PAYLOAD_SIZE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint64","name":"","type":"uint64"}],"name":"failedMessages","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"}],"name":"getTrustedRemoteAddress","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"isTrustedRemote","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lzEndpoint","outputs":[{"internalType":"contract ILayerZeroEndpoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"}],"name":"minDstGasLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"nonblockingLzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"payloadSizeLimitLookup","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"precrime","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint16","name":"_packetType","type":"uint16"},{"internalType":"uint256","name":"_minGas","type":"uint256"}],"name":"setMinDstGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"uint256","name":"_size","type":"uint256"}],"name":"setPayloadSizeLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_precrime","type":"address"}],"name":"setPrecrime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"setTrustedRemote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_remoteChainId","type":"uint16"},{"internalType":"bytes","name":"_remoteAddress","type":"bytes"}],"name":"setTrustedRemoteAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"trustedRemoteLookup","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_PAYLOAD_SIZE_LIMIT()":"c4461834","failedMessages(uint16,bytes,uint64)":"5b8c41e6","forceResumeReceive(uint16,bytes)":"42d65a8d","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getTrustedRemoteAddress(uint16)":"9f38369a","isTrustedRemote(uint16,bytes)":"3d8b38f6","lzEndpoint()":"b353aaa7","lzReceive(uint16,bytes,uint64,bytes)":"001d3567","minDstGasLookup(uint16,uint16)":"8cfd8f5c","nonblockingLzReceive(uint16,bytes,uint64,bytes)":"66ad5c8a","owner()":"8da5cb5b","payloadSizeLimitLookup(uint16)":"3f1f4fa4","precrime()":"950c8a74","renounceOwnership()":"715018a6","retryMessage(uint16,bytes,uint64,bytes)":"d1deba1f","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setMinDstGas(uint16,uint16,uint256)":"df2a5b3b","setPayloadSizeLimit(uint16,uint256)":"0df37483","setPrecrime(address)":"baf3292d","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17","setTrustedRemote(uint16,bytes)":"eb8d72b7","setTrustedRemoteAddress(uint16,bytes)":"a6c3d165","transferOwnership(address)":"f2fde38b","trustedRemoteLookup(uint16)":"7533d788"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"MessageFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"RetryMessageSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_type\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_minDstGas\",\"type\":\"uint256\"}],\"name\":\"SetMinDstGas\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"precrime\",\"type\":\"address\"}],\"name\":\"SetPrecrime\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_PAYLOAD_SIZE_LIMIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"}],\"name\":\"getTrustedRemoteAddress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"isTrustedRemote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzEndpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"minDstGasLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"nonblockingLzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"payloadSizeLimitLookup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"precrime\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_packetType\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_minGas\",\"type\":\"uint256\"}],\"name\":\"setMinDstGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"setPayloadSizeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_precrime\",\"type\":\"address\"}],\"name\":\"setPrecrime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_remoteChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_remoteAddress\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lzApp/NonblockingLzApp.sol\":\"NonblockingLzApp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/libraries/BytesLib.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\n/*\\n * @title Solidity Bytes Arrays Utils\\n * @author Gon\\u00e7alo S\\u00e1 <goncalo.sa@consensys.net>\\n *\\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\\n */\\npragma solidity >=0.8.0 <0.9.0;\\n\\nlibrary BytesLib {\\n    function concat(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bytes memory) {\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\\n        assembly {\\n            // Read the first 32 bytes of _preBytes storage, which is the length\\n            // of the array. (We don't need to use the offset into the slot\\n            // because arrays use the entire slot.)\\n            let fslot := sload(_preBytes.slot)\\n            // Arrays of 31 bytes or less have an even value in their slot,\\n            // while longer arrays have an odd value. The actual length is\\n            // the slot divided by two for odd values, and the lowest order\\n            // byte divided by two for even values.\\n            // If the slot is even, bitwise and the slot with 255 and divide by\\n            // two to get the length. If the slot is odd, bitwise and the slot\\n            // with -1 and divide by two.\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n            let newlength := add(slength, mlength)\\n            // slength can contain both the length and contents of the array\\n            // if length < 32 bytes so let's prepare for that\\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n            switch add(lt(slength, 32), lt(newlength, 32))\\n            case 2 {\\n                // Since the new array still fits in the slot, we just need to\\n                // update the contents of the slot.\\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\\n                sstore(\\n                    _preBytes.slot,\\n                    // all the modifications to the slot are inside this\\n                    // next block\\n                    add(\\n                        // we can just add to the slot contents because the\\n                        // bytes we want to change are the LSBs\\n                        fslot,\\n                        add(\\n                            mul(\\n                                div(\\n                                    // load the bytes from memory\\n                                    mload(add(_postBytes, 0x20)),\\n                                    // zero all bytes to the right\\n                                    exp(0x100, sub(32, mlength))\\n                                ),\\n                                // and now shift left the number of bytes to\\n                                // leave space for the length in the slot\\n                                exp(0x100, sub(32, newlength))\\n                            ),\\n                            // increase length by the double of the memory\\n                            // bytes length\\n                            mul(mlength, 2)\\n                        )\\n                    )\\n                )\\n            }\\n            case 1 {\\n                // The stored value fits in the slot, but the combined value\\n                // will exceed it.\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // The contents of the _postBytes array start 32 bytes into\\n                // the structure. Our first read should obtain the `submod`\\n                // bytes that can fit into the unused space in the last word\\n                // of the stored array. To get this, we read 32 bytes starting\\n                // from `submod`, so the data we read overlaps with the array\\n                // contents by `submod` bytes. Masking the lowest-order\\n                // `submod` bytes allows us to add that value directly to the\\n                // stored value.\\n\\n                let submod := sub(32, slength)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(and(fslot, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00), and(mload(mc), mask)))\\n\\n                for {\\n                    mc := add(mc, 0x20)\\n                    sc := add(sc, 1)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n            default {\\n                // get the keccak hash to get the contents of the array\\n                mstore(0x0, _preBytes.slot)\\n                // Start copying to the last used word of the stored array.\\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\\n\\n                // save new length\\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\\n\\n                // Copy over the first `submod` bytes of the new data as in\\n                // case 1 above.\\n                let slengthmod := mod(slength, 32)\\n                let mlengthmod := mod(mlength, 32)\\n                let submod := sub(32, slengthmod)\\n                let mc := add(_postBytes, submod)\\n                let end := add(_postBytes, mlength)\\n                let mask := sub(exp(0x100, submod), 1)\\n\\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\\n\\n                for {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } lt(mc, end) {\\n                    sc := add(sc, 1)\\n                    mc := add(mc, 0x20)\\n                } {\\n                    sstore(sc, mload(mc))\\n                }\\n\\n                mask := exp(0x100, sub(mc, end))\\n\\n                sstore(sc, mul(div(mload(mc), mask), mask))\\n            }\\n        }\\n    }\\n\\n    function slice(\\n        bytes memory _bytes,\\n        uint _start,\\n        uint _length\\n    ) internal pure returns (bytes memory) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        bytes memory tempBytes;\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    function toAddress(bytes memory _bytes, uint _start) internal pure returns (address) {\\n        require(_bytes.length >= _start + 20, \\\"toAddress_outOfBounds\\\");\\n        address tempAddress;\\n\\n        assembly {\\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\\n        }\\n\\n        return tempAddress;\\n    }\\n\\n    function toUint8(bytes memory _bytes, uint _start) internal pure returns (uint8) {\\n        require(_bytes.length >= _start + 1, \\\"toUint8_outOfBounds\\\");\\n        uint8 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x1), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint16(bytes memory _bytes, uint _start) internal pure returns (uint16) {\\n        require(_bytes.length >= _start + 2, \\\"toUint16_outOfBounds\\\");\\n        uint16 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x2), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint32(bytes memory _bytes, uint _start) internal pure returns (uint32) {\\n        require(_bytes.length >= _start + 4, \\\"toUint32_outOfBounds\\\");\\n        uint32 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x4), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint64(bytes memory _bytes, uint _start) internal pure returns (uint64) {\\n        require(_bytes.length >= _start + 8, \\\"toUint64_outOfBounds\\\");\\n        uint64 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x8), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint96(bytes memory _bytes, uint _start) internal pure returns (uint96) {\\n        require(_bytes.length >= _start + 12, \\\"toUint96_outOfBounds\\\");\\n        uint96 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0xc), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint128(bytes memory _bytes, uint _start) internal pure returns (uint128) {\\n        require(_bytes.length >= _start + 16, \\\"toUint128_outOfBounds\\\");\\n        uint128 tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x10), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toUint256(bytes memory _bytes, uint _start) internal pure returns (uint) {\\n        require(_bytes.length >= _start + 32, \\\"toUint256_outOfBounds\\\");\\n        uint tempUint;\\n\\n        assembly {\\n            tempUint := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempUint;\\n    }\\n\\n    function toBytes32(bytes memory _bytes, uint _start) internal pure returns (bytes32) {\\n        require(_bytes.length >= _start + 32, \\\"toBytes32_outOfBounds\\\");\\n        bytes32 tempBytes32;\\n\\n        assembly {\\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\\n        }\\n\\n        return tempBytes32;\\n    }\\n\\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            let length := mload(_preBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(length, mload(_postBytes))\\n            case 1 {\\n                // cb is a circuit breaker in the for loop since there's\\n                //  no said feature for inline assembly loops\\n                // cb = 1 - don't breaker\\n                // cb = 0 - break\\n                let cb := 1\\n\\n                let mc := add(_preBytes, 0x20)\\n                let end := add(mc, length)\\n\\n                for {\\n                    let cc := add(_postBytes, 0x20)\\n                    // the next line is the loop condition:\\n                    // while(uint256(mc < end) + cb == 2)\\n                } eq(add(lt(mc, end), cb), 2) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    // if any of these checks fails then arrays are not equal\\n                    if iszero(eq(mload(mc), mload(cc))) {\\n                        // unsuccess:\\n                        success := 0\\n                        cb := 0\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n\\n    function equalStorage(bytes storage _preBytes, bytes memory _postBytes) internal view returns (bool) {\\n        bool success = true;\\n\\n        assembly {\\n            // we know _preBytes_offset is 0\\n            let fslot := sload(_preBytes.slot)\\n            // Decode the length of the stored array like in concatStorage().\\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\\n            let mlength := mload(_postBytes)\\n\\n            // if lengths don't match the arrays are not equal\\n            switch eq(slength, mlength)\\n            case 1 {\\n                // slength can contain both the length and contents of the array\\n                // if length < 32 bytes so let's prepare for that\\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\\n                if iszero(iszero(slength)) {\\n                    switch lt(slength, 32)\\n                    case 1 {\\n                        // blank the last byte which is the length\\n                        fslot := mul(div(fslot, 0x100), 0x100)\\n\\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\\n                            // unsuccess:\\n                            success := 0\\n                        }\\n                    }\\n                    default {\\n                        // cb is a circuit breaker in the for loop since there's\\n                        //  no said feature for inline assembly loops\\n                        // cb = 1 - don't breaker\\n                        // cb = 0 - break\\n                        let cb := 1\\n\\n                        // get the keccak hash to get the contents of the array\\n                        mstore(0x0, _preBytes.slot)\\n                        let sc := keccak256(0x0, 0x20)\\n\\n                        let mc := add(_postBytes, 0x20)\\n                        let end := add(mc, mlength)\\n\\n                        // the next line is the loop condition:\\n                        // while(uint256(mc < end) + cb == 2)\\n                        for {\\n\\n                        } eq(add(lt(mc, end), cb), 2) {\\n                            sc := add(sc, 1)\\n                            mc := add(mc, 0x20)\\n                        } {\\n                            if iszero(eq(sload(sc), mload(mc))) {\\n                                // unsuccess:\\n                                success := 0\\n                                cb := 0\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n            default {\\n                // unsuccess:\\n                success := 0\\n            }\\n        }\\n\\n        return success;\\n    }\\n}\\n\",\"keccak256\":\"0x7e64cccdf22a03f513d94960f2145dd801fb5ec88d971de079b5186a9f5e93c4\",\"license\":\"Unlicense\"},\"contracts/libraries/ExcessivelySafeCall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity >=0.7.6;\\n\\nlibrary ExcessivelySafeCall {\\n    uint constant LOW_28_MASK = 0x00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff;\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := call(\\n                _gas, // gas\\n                _target, // recipient\\n                0, // ether value\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /// @notice Use when you _really_ really _really_ don't trust the called\\n    /// contract. This prevents the called contract from causing reversion of\\n    /// the caller in as many ways as we can.\\n    /// @dev The main difference between this and a solidity low-level call is\\n    /// that we limit the number of bytes that the callee can cause to be\\n    /// copied to caller memory. This prevents stupid things like malicious\\n    /// contracts returning 10,000,000 bytes causing a local OOG when copying\\n    /// to memory.\\n    /// @param _target The address to call\\n    /// @param _gas The amount of gas to forward to the remote contract\\n    /// @param _maxCopy The maximum number of bytes of returndata to copy\\n    /// to memory.\\n    /// @param _calldata The data to send to the remote contract\\n    /// @return success and returndata, as `.call()`. Returndata is capped to\\n    /// `_maxCopy` bytes.\\n    function excessivelySafeStaticCall(\\n        address _target,\\n        uint _gas,\\n        uint16 _maxCopy,\\n        bytes memory _calldata\\n    ) internal view returns (bool, bytes memory) {\\n        // set up for assembly call\\n        uint _toCopy;\\n        bool _success;\\n        bytes memory _returnData = new bytes(_maxCopy);\\n        // dispatch message to recipient\\n        // by assembly calling \\\"handle\\\" function\\n        // we call via assembly to avoid memcopying a very large returndata\\n        // returned by a malicious contract\\n        assembly {\\n            _success := staticcall(\\n                _gas, // gas\\n                _target, // recipient\\n                add(_calldata, 0x20), // inloc\\n                mload(_calldata), // inlen\\n                0, // outloc\\n                0 // outlen\\n            )\\n            // limit our copy to 256 bytes\\n            _toCopy := returndatasize()\\n            if gt(_toCopy, _maxCopy) {\\n                _toCopy := _maxCopy\\n            }\\n            // Store the length of the copied bytes\\n            mstore(_returnData, _toCopy)\\n            // copy the bytes from returndata[0:_toCopy]\\n            returndatacopy(add(_returnData, 0x20), 0, _toCopy)\\n        }\\n        return (_success, _returnData);\\n    }\\n\\n    /**\\n     * @notice Swaps function selectors in encoded contract calls\\n     * @dev Allows reuse of encoded calldata for functions with identical\\n     * argument types but different names. It simply swaps out the first 4 bytes\\n     * for the new selector. This function modifies memory in place, and should\\n     * only be used with caution.\\n     * @param _newSelector The new 4-byte selector\\n     * @param _buf The encoded contract args\\n     */\\n    function swapSelector(bytes4 _newSelector, bytes memory _buf) internal pure {\\n        require(_buf.length >= 4);\\n        uint _mask = LOW_28_MASK;\\n        assembly {\\n            // load the first word of\\n            let _word := mload(add(_buf, 0x20))\\n            // mask out the top 4 bytes\\n            // /x\\n            _word := and(_word, _mask)\\n            _word := or(_newSelector, _word)\\n            mstore(add(_buf, 0x20), _word)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd4e52af409b5ec80432292d86fb01906785eb78ac31da3bab4565aabcd6e3e56\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/lzApp/LzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"./interfaces/ILayerZeroUserApplicationConfig.sol\\\";\\nimport \\\"./interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"../libraries/BytesLib.sol\\\";\\n\\n/*\\n * a generic LzReceiver implementation\\n */\\nabstract contract LzApp is Ownable, ILayerZeroReceiver, ILayerZeroUserApplicationConfig {\\n    using BytesLib for bytes;\\n\\n    // ua can not send payload larger than this by default, but it can be changed by the ua owner\\n    uint public constant DEFAULT_PAYLOAD_SIZE_LIMIT = 10000;\\n\\n    ILayerZeroEndpoint public immutable lzEndpoint;\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n    mapping(uint16 => mapping(uint16 => uint)) public minDstGasLookup;\\n    mapping(uint16 => uint) public payloadSizeLimitLookup;\\n    address public precrime;\\n\\n    event SetPrecrime(address precrime);\\n    event SetTrustedRemote(uint16 _remoteChainId, bytes _path);\\n    event SetTrustedRemoteAddress(uint16 _remoteChainId, bytes _remoteAddress);\\n    event SetMinDstGas(uint16 _dstChainId, uint16 _type, uint _minDstGas);\\n\\n    constructor(address _endpoint) {\\n        lzEndpoint = ILayerZeroEndpoint(_endpoint);\\n    }\\n\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual override {\\n        // lzReceive must be called by the endpoint for security\\n        require(_msgSender() == address(lzEndpoint), \\\"LzApp: invalid endpoint caller\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[_srcChainId];\\n        // if will still block the message pathway from (srcChainId, srcAddress). should not receive message from untrusted remote.\\n        require(\\n            _srcAddress.length == trustedRemote.length && trustedRemote.length > 0 && keccak256(_srcAddress) == keccak256(trustedRemote),\\n            \\\"LzApp: invalid source sending contract\\\"\\n        );\\n\\n        _blockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    // abstract function - the default behaviour of LayerZero is blocking. See: NonblockingLzApp if you dont need to enforce ordered messaging\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function _lzSend(\\n        uint16 _dstChainId,\\n        bytes memory _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes memory _adapterParams,\\n        uint _nativeFee\\n    ) internal virtual {\\n        bytes memory trustedRemote = trustedRemoteLookup[_dstChainId];\\n        require(trustedRemote.length != 0, \\\"LzApp: destination chain is not a trusted source\\\");\\n        _checkPayloadSize(_dstChainId, _payload.length);\\n        lzEndpoint.send{value: _nativeFee}(_dstChainId, trustedRemote, _payload, _refundAddress, _zroPaymentAddress, _adapterParams);\\n    }\\n\\n    function _checkGasLimit(\\n        uint16 _dstChainId,\\n        uint16 _type,\\n        bytes memory _adapterParams,\\n        uint _extraGas\\n    ) internal view virtual {\\n        uint providedGasLimit = _getGasLimit(_adapterParams);\\n        uint minGasLimit = minDstGasLookup[_dstChainId][_type];\\n        require(minGasLimit > 0, \\\"LzApp: minGasLimit not set\\\");\\n        require(providedGasLimit >= minGasLimit + _extraGas, \\\"LzApp: gas limit is too low\\\");\\n    }\\n\\n    function _getGasLimit(bytes memory _adapterParams) internal pure virtual returns (uint gasLimit) {\\n        require(_adapterParams.length >= 34, \\\"LzApp: invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    function _checkPayloadSize(uint16 _dstChainId, uint _payloadSize) internal view virtual {\\n        uint payloadSizeLimit = payloadSizeLimitLookup[_dstChainId];\\n        if (payloadSizeLimit == 0) {\\n            // use default if not set\\n            payloadSizeLimit = DEFAULT_PAYLOAD_SIZE_LIMIT;\\n        }\\n        require(_payloadSize <= payloadSizeLimit, \\\"LzApp: payload size is too large\\\");\\n    }\\n\\n    //---------------------------UserApplication config----------------------------------------\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address,\\n        uint _configType\\n    ) external view returns (bytes memory) {\\n        return lzEndpoint.getConfig(_version, _chainId, address(this), _configType);\\n    }\\n\\n    // generic config for LayerZero user Application\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external override onlyOwner {\\n        lzEndpoint.setConfig(_version, _chainId, _configType, _config);\\n    }\\n\\n    function setSendVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setSendVersion(_version);\\n    }\\n\\n    function setReceiveVersion(uint16 _version) external override onlyOwner {\\n        lzEndpoint.setReceiveVersion(_version);\\n    }\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external override onlyOwner {\\n        lzEndpoint.forceResumeReceive(_srcChainId, _srcAddress);\\n    }\\n\\n    // _path = abi.encodePacked(remoteAddress, localAddress)\\n    // this function set the trusted path for the cross-chain communication\\n    function setTrustedRemote(uint16 _remoteChainId, bytes calldata _path) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = _path;\\n        emit SetTrustedRemote(_remoteChainId, _path);\\n    }\\n\\n    function setTrustedRemoteAddress(uint16 _remoteChainId, bytes calldata _remoteAddress) external onlyOwner {\\n        trustedRemoteLookup[_remoteChainId] = abi.encodePacked(_remoteAddress, address(this));\\n        emit SetTrustedRemoteAddress(_remoteChainId, _remoteAddress);\\n    }\\n\\n    function getTrustedRemoteAddress(uint16 _remoteChainId) external view returns (bytes memory) {\\n        bytes memory path = trustedRemoteLookup[_remoteChainId];\\n        require(path.length != 0, \\\"LzApp: no trusted path record\\\");\\n        return path.slice(0, path.length - 20); // the last 20 bytes should be address(this)\\n    }\\n\\n    function setPrecrime(address _precrime) external onlyOwner {\\n        precrime = _precrime;\\n        emit SetPrecrime(_precrime);\\n    }\\n\\n    function setMinDstGas(\\n        uint16 _dstChainId,\\n        uint16 _packetType,\\n        uint _minGas\\n    ) external onlyOwner {\\n        minDstGasLookup[_dstChainId][_packetType] = _minGas;\\n        emit SetMinDstGas(_dstChainId, _packetType, _minGas);\\n    }\\n\\n    // if the size is 0, it means default size limit\\n    function setPayloadSizeLimit(uint16 _dstChainId, uint _size) external onlyOwner {\\n        payloadSizeLimitLookup[_dstChainId] = _size;\\n    }\\n\\n    //--------------------------- VIEW FUNCTION ----------------------------------------\\n    function isTrustedRemote(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool) {\\n        bytes memory trustedSource = trustedRemoteLookup[_srcChainId];\\n        return keccak256(trustedSource) == keccak256(_srcAddress);\\n    }\\n}\\n\",\"keccak256\":\"0x309c994bdcf69ad63c6789694a28eb72a773e2d9db58fe572ab2b34a475972ce\",\"license\":\"MIT\"},\"contracts/lzApp/NonblockingLzApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./LzApp.sol\\\";\\nimport \\\"../libraries/ExcessivelySafeCall.sol\\\";\\n\\n/*\\n * the default LayerZero messaging behaviour is blocking, i.e. any failed message will block the channel\\n * this abstract class try-catch all fail messages and store locally for future retry. hence, non-blocking\\n * NOTE: if the srcAddress is not configured properly, it will still block the message pathway from (srcChainId, srcAddress).\\n */\\nabstract contract NonblockingLzApp is LzApp {\\n    using ExcessivelySafeCall for address;\\n\\n    constructor(address _endpoint) LzApp(_endpoint) {}\\n\\n    mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))\\n        public failedMessages;\\n\\n    event MessageFailed(\\n        uint16 _srcChainId,\\n        bytes _srcAddress,\\n        uint64 _nonce,\\n        bytes _payload,\\n        bytes _reason\\n    );\\n    event RetryMessageSuccess(\\n        uint16 _srcChainId,\\n        bytes _srcAddress,\\n        uint64 _nonce,\\n        bytes32 _payloadHash\\n    );\\n\\n    // overriding the virtual function in LzReceiver.\\n    function _blockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual override {\\n        (bool success, bytes memory reason) = address(this).excessivelySafeCall(\\n            gasleft(),\\n            150,\\n            abi.encodeWithSelector(\\n                this.nonblockingLzReceive.selector,\\n                _srcChainId,\\n                _srcAddress,\\n                _nonce,\\n                _payload\\n            )\\n        );\\n        if (!success) {\\n            _storeFailedMessage(\\n                _srcChainId,\\n                _srcAddress,\\n                _nonce,\\n                _payload,\\n                reason\\n            );\\n        }\\n    }\\n\\n    function _storeFailedMessage(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload,\\n        bytes memory _reason\\n    ) internal virtual {\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = keccak256(_payload);\\n        emit MessageFailed(_srcChainId, _srcAddress, _nonce, _payload, _reason);\\n    }\\n\\n    function nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public virtual {\\n        // only internal transaction\\n        require(\\n            _msgSender() == address(this),\\n            \\\"NonblockingLzApp: caller must be LzApp\\\"\\n        );\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n    }\\n\\n    //@notice override this function\\n    function _nonblockingLzReceive(\\n        uint16 _srcChainId,\\n        bytes memory _srcAddress,\\n        uint64 _nonce,\\n        bytes memory _payload\\n    ) internal virtual;\\n\\n    function retryMessage(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) public payable virtual {\\n        // assert there is message to retry\\n        bytes32 payloadHash = failedMessages[_srcChainId][_srcAddress][_nonce];\\n        require(\\n            payloadHash != bytes32(0),\\n            \\\"NonblockingLzApp: no stored message\\\"\\n        );\\n        require(\\n            keccak256(_payload) == payloadHash,\\n            \\\"NonblockingLzApp: invalid payload\\\"\\n        );\\n        // clear the stored message\\n        failedMessages[_srcChainId][_srcAddress][_nonce] = bytes32(0);\\n        // execute the message. revert if it fails again\\n        _nonblockingLzReceive(_srcChainId, _srcAddress, _nonce, _payload);\\n        emit RetryMessageSuccess(_srcChainId, _srcAddress, _nonce, payloadHash);\\n    }\\n}\\n\",\"keccak256\":\"0x61669a8cc27c6e3ae3c9df4c3927aac12b33a8fa23b9e95de31807b347c61fb5\",\"license\":\"MIT\"},\"contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":598,"contract":"contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"trustedRemoteLookup","offset":0,"slot":"1","type":"t_mapping(t_uint16,t_bytes_storage)"},{"astId":604,"contract":"contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"minDstGasLookup","offset":0,"slot":"2","type":"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))"},{"astId":608,"contract":"contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"payloadSizeLimitLookup","offset":0,"slot":"3","type":"t_mapping(t_uint16,t_uint256)"},{"astId":610,"contract":"contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"precrime","offset":0,"slot":"4","type":"t_address"},{"astId":1140,"contract":"contracts/lzApp/NonblockingLzApp.sol:NonblockingLzApp","label":"failedMessages","offset":0,"slot":"5","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => mapping(uint64 => bytes32))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_bytes32)"},"t_mapping(t_uint16,t_bytes_storage)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => bytes)","numberOfBytes":"32","value":"t_bytes_storage"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))"},"t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(uint16 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint16,t_uint256)"},"t_mapping(t_uint16,t_uint256)":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint64,t_bytes32)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/lzApp/interfaces/ILayerZeroEndpoint.sol":{"ILayerZeroEndpoint":{"abi":[{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"bool","name":"_payInZRO","type":"bool"},{"internalType":"bytes","name":"_adapterParam","type":"bytes"}],"name":"estimateFees","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"uint256","name":"_configType","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"getInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_srcAddress","type":"address"}],"name":"getOutboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getReceiveLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getReceiveVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getSendLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_userApplication","type":"address"}],"name":"getSendVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"hasStoredPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isReceivingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"address","name":"_dstAddress","type":"address"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"uint256","name":"_gasLimit","type":"uint256"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"receivePayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"bytes","name":"_destination","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"address","name":"_zroPaymentAddress","type":"address"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"estimateFees(uint16,address,bytes,bool,bytes)":"40a7bb10","forceResumeReceive(uint16,bytes)":"42d65a8d","getChainId()":"3408e470","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getInboundNonce(uint16,bytes)":"fdc07c70","getOutboundNonce(uint16,address)":"7a145748","getReceiveLibraryAddress(address)":"71ba2fd6","getReceiveVersion(address)":"da1a7c9a","getSendLibraryAddress(address)":"9c729da1","getSendVersion(address)":"096568f6","hasStoredPayload(uint16,bytes)":"0eaf6ea6","isReceivingPayload()":"ca066b35","isSendingPayload()":"e97a448a","receivePayload(uint16,bytes,address,uint64,uint256,bytes)":"c2fa4813","retryPayload(uint16,bytes,bytes)":"aaff5f16","send(uint16,bytes,bytes,address,address,bytes)":"c5803100","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInZRO\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParam\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"getInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_srcAddress\",\"type\":\"address\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getReceiveLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getReceiveVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getSendLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"}],\"name\":\"getSendVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"hasStoredPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceivingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"receivePayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_destination\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zroPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":\"ILayerZeroEndpoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/lzApp/interfaces/ILayerZeroReceiver.sol":{"ILayerZeroReceiver":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"lzReceive(uint16,bytes,uint64,bytes)":"001d3567"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":\"ILayerZeroReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol":{"ILayerZeroUserApplicationConfig":{"abi":[{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"},{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"uint256","name":"_configType","type":"uint256"},{"internalType":"bytes","name":"_config","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_version","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"forceResumeReceive(uint16,bytes)":"42d65a8d","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setReceiveVersion(uint16)":"10ddb137","setSendVersion(uint16)":"07e0db17"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_configType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_config\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":\"ILayerZeroUserApplicationConfig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/lzApp/libs/LzLib.sol":{"LzLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c976711703954a0f4f0e0f2ff13fb0abb84eb294135100e769161dbf4b39692564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH23 0x711703954A0F4F0E0F2FF13FB0ABB84EB294135100E769 AND SAR 0xBF 0x4B CODECOPY PUSH10 0x2564736F6C6343000814 STOP CALLER ","sourceMap":"98:3167:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;98:3167:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c976711703954a0f4f0e0f2ff13fb0abb84eb294135100e769161dbf4b39692564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH23 0x711703954A0F4F0E0F2FF13FB0ABB84EB294135100E769 AND SAR 0xBF 0x4B CODECOPY PUSH10 0x2564736F6C6343000814 STOP CALLER ","sourceMap":"98:3167:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"addressToBytes32(address)":"infinite","buildAdapterParams(struct LzLib.AirdropParams memory,uint256)":"infinite","buildAirdropAdapterParams(uint256,struct LzLib.AirdropParams memory)":"infinite","buildDefaultAdapterParams(uint256)":"infinite","bytes32ToAddress(bytes32)":"infinite","decodeAdapterParams(bytes memory)":"infinite","getGasLimit(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lzApp/libs/LzLib.sol\":\"LzLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lzApp/libs/LzLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LzLib {\\n    // LayerZero communication\\n    struct CallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n\\n    struct AirdropParams {\\n        uint airdropAmount;\\n        bytes32 airdropAddress;\\n    }\\n\\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\\n        } else {\\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\\n        }\\n    }\\n\\n    // Build Adapter Params\\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\\n        // txType 1\\n        // bytes  [2       32      ]\\n        // fields [txType  extraGas]\\n        return abi.encodePacked(uint16(1), _uaGas);\\n    }\\n\\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\\n        require(_params.airdropAmount > 0, \\\"Airdrop amount must be greater than 0\\\");\\n        require(_params.airdropAddress != bytes32(0x0), \\\"Airdrop address must be set\\\");\\n\\n        // txType 2\\n        // bytes  [2       32        32            bytes[]         ]\\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\\n    }\\n\\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    // Decode Adapter Params\\n    function decodeAdapterParams(bytes memory _adapterParams)\\n        internal\\n        pure\\n        returns (\\n            uint16 txType,\\n            uint uaGas,\\n            uint airdropAmount,\\n            address payable airdropAddress\\n        )\\n    {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            txType := mload(add(_adapterParams, 2))\\n            uaGas := mload(add(_adapterParams, 34))\\n        }\\n        require(txType == 1 || txType == 2, \\\"Unsupported txType\\\");\\n        require(uaGas > 0, \\\"Gas too low\\\");\\n\\n        if (txType == 2) {\\n            assembly {\\n                airdropAmount := mload(add(_adapterParams, 66))\\n                airdropAddress := mload(add(_adapterParams, 86))\\n            }\\n        }\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\\n        return address(uint160(uint(_bytes32Address)));\\n    }\\n\\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\\n        return bytes32(uint(uint160(_address)));\\n    }\\n}\\n\",\"keccak256\":\"0xf61b7357d6638814e1a8d5edeba5c8f5db1cd782882b96da4452604ec0d5c20a\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/lzApp/mocks/LZEndpointMock.sol":{"LZEndpointMock":{"abi":[{"inputs":[{"internalType":"uint16","name":"_chainId","type":"uint16"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"srcAddress","type":"bytes"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"address","name":"dstAddress","type":"address"}],"name":"PayloadCleared","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"srcChainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"srcAddress","type":"bytes"},{"indexed":false,"internalType":"address","name":"dstAddress","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes","name":"payload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"reason","type":"bytes"}],"name":"PayloadStored","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"chainId","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"srcAddress","type":"bytes"}],"name":"UaForceResumeReceive","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"ValueTransferFailed","type":"event"},{"inputs":[],"name":"blockNextMsg","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"defaultAdapterParams","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_dstChainId","type":"uint16"},{"internalType":"address","name":"_userApplication","type":"address"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"bool","name":"_payInZRO","type":"bool"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"estimateFees","outputs":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"zroFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"forceResumeReceive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint16","name":"_chainID","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"getInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_srcAddress","type":"bytes"}],"name":"getLengthOfQueue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_chainID","type":"uint16"},{"internalType":"address","name":"_srcAddress","type":"address"}],"name":"getOutboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getReceiveLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getReceiveVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getSendLibraryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"getSendVersion","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"}],"name":"hasStoredPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"inboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isReceivingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingPayload","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lzEndpointLookup","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mockChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"msgsToDeliver","outputs":[{"internalType":"address","name":"dstAddress","type":"address"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"bytes","name":"payload","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextMsgBlocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracleFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"address","name":"","type":"address"}],"name":"outboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFeeConfig","outputs":[{"internalType":"uint256","name":"zroFee","type":"uint256"},{"internalType":"uint256","name":"nativeBP","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"},{"internalType":"address","name":"_dstAddress","type":"address"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"uint256","name":"_gasLimit","type":"uint256"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"receivePayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"relayerFeeConfig","outputs":[{"internalType":"uint128","name":"dstPriceRatio","type":"uint128"},{"internalType":"uint128","name":"dstGasPriceInWei","type":"uint128"},{"internalType":"uint128","name":"dstNativeAmtCap","type":"uint128"},{"internalType":"uint64","name":"baseGas","type":"uint64"},{"internalType":"uint64","name":"gasPerByte","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"_srcChainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"}],"name":"retryPayload","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"_chainId","type":"uint16"},{"internalType":"bytes","name":"_path","type":"bytes"},{"internalType":"bytes","name":"_payload","type":"bytes"},{"internalType":"address payable","name":"_refundAddress","type":"address"},{"internalType":"address","name":"_zroPaymentAddress","type":"address"},{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"send","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"_adapterParams","type":"bytes"}],"name":"setDefaultAdapterParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"destAddr","type":"address"},{"internalType":"address","name":"lzEndpointAddr","type":"address"}],"name":"setDestLzEndpoint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_oracleFee","type":"uint256"}],"name":"setOracleFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_zroFee","type":"uint256"},{"internalType":"uint256","name":"_nativeBP","type":"uint256"}],"name":"setProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"setReceiveVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"_dstPriceRatio","type":"uint128"},{"internalType":"uint128","name":"_dstGasPriceInWei","type":"uint128"},{"internalType":"uint128","name":"_dstNativeAmtCap","type":"uint128"},{"internalType":"uint64","name":"_baseGas","type":"uint64"},{"internalType":"uint64","name":"_gasPerByte","type":"uint64"}],"name":"setRelayerPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"}],"name":"setSendVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"storedPayload","outputs":[{"internalType":"uint64","name":"payloadLength","type":"uint64"},{"internalType":"address","name":"dstAddress","type":"address"},{"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1977":{"entryPoint":null,"id":1977,"parameterSlots":1,"returnSlots":0},"@buildDefaultAdapterParams_1614":{"entryPoint":null,"id":1614,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_uint16_fromMemory":{"entryPoint":317,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_uint16_t_uint256__to_t_uint16_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":444,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":527,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":384,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":362,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3288:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"94:196:11","statements":[{"body":{"nodeType":"YulBlock","src":"140:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"149:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"152:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"142:6:11"},"nodeType":"YulFunctionCall","src":"142:12:11"},"nodeType":"YulExpressionStatement","src":"142:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"115:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"124:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"111:3:11"},"nodeType":"YulFunctionCall","src":"111:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"136:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"107:3:11"},"nodeType":"YulFunctionCall","src":"107:32:11"},"nodeType":"YulIf","src":"104:52:11"},{"nodeType":"YulVariableDeclaration","src":"165:29:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"184:9:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"178:5:11"},"nodeType":"YulFunctionCall","src":"178:16:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"169:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"244:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"253:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"256:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"246:6:11"},"nodeType":"YulFunctionCall","src":"246:12:11"},"nodeType":"YulExpressionStatement","src":"246:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"216:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"227:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"234:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"223:3:11"},"nodeType":"YulFunctionCall","src":"223:18:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"213:2:11"},"nodeType":"YulFunctionCall","src":"213:29:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"206:6:11"},"nodeType":"YulFunctionCall","src":"206:37:11"},"nodeType":"YulIf","src":"203:57:11"},{"nodeType":"YulAssignment","src":"269:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"279:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"269:6:11"}]}]},"name":"abi_decode_tuple_t_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"71:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"83:6:11","type":""}],"src":"14:276:11"},{"body":{"nodeType":"YulBlock","src":"327:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"344:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"351:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"356:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"347:3:11"},"nodeType":"YulFunctionCall","src":"347:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"337:6:11"},"nodeType":"YulFunctionCall","src":"337:31:11"},"nodeType":"YulExpressionStatement","src":"337:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"384:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"387:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"377:6:11"},"nodeType":"YulFunctionCall","src":"377:15:11"},"nodeType":"YulExpressionStatement","src":"377:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"408:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"411:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"401:6:11"},"nodeType":"YulFunctionCall","src":"401:15:11"},"nodeType":"YulExpressionStatement","src":"401:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"295:127:11"},{"body":{"nodeType":"YulBlock","src":"482:325:11","statements":[{"nodeType":"YulAssignment","src":"492:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"506:1:11","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"509:4:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"502:3:11"},"nodeType":"YulFunctionCall","src":"502:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"492:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"523:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"553:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"559:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"549:3:11"},"nodeType":"YulFunctionCall","src":"549:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"527:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"600:31:11","statements":[{"nodeType":"YulAssignment","src":"602:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"616:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"624:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"612:3:11"},"nodeType":"YulFunctionCall","src":"612:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"602:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"580:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"573:6:11"},"nodeType":"YulFunctionCall","src":"573:26:11"},"nodeType":"YulIf","src":"570:61:11"},{"body":{"nodeType":"YulBlock","src":"690:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"711:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"718:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"723:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"714:3:11"},"nodeType":"YulFunctionCall","src":"714:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"704:6:11"},"nodeType":"YulFunctionCall","src":"704:31:11"},"nodeType":"YulExpressionStatement","src":"704:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"755:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"758:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"748:6:11"},"nodeType":"YulFunctionCall","src":"748:15:11"},"nodeType":"YulExpressionStatement","src":"748:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"783:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"786:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"776:6:11"},"nodeType":"YulFunctionCall","src":"776:15:11"},"nodeType":"YulExpressionStatement","src":"776:15:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"646:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"669:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"677:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"666:2:11"},"nodeType":"YulFunctionCall","src":"666:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"643:2:11"},"nodeType":"YulFunctionCall","src":"643:38:11"},"nodeType":"YulIf","src":"640:161:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"462:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"471:6:11","type":""}],"src":"427:380:11"},{"body":{"nodeType":"YulBlock","src":"867:65:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"884:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"887:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"877:6:11"},"nodeType":"YulFunctionCall","src":"877:14:11"},"nodeType":"YulExpressionStatement","src":"877:14:11"},{"nodeType":"YulAssignment","src":"900:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"918:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"921:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"908:9:11"},"nodeType":"YulFunctionCall","src":"908:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"900:4:11"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"850:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"858:4:11","type":""}],"src":"812:120:11"},{"body":{"nodeType":"YulBlock","src":"1017:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"1050:425:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1064:11:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1074:1:11","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1068:2:11","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1095:2:11"},{"name":"array","nodeType":"YulIdentifier","src":"1099:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1088:6:11"},"nodeType":"YulFunctionCall","src":"1088:17:11"},"nodeType":"YulExpressionStatement","src":"1088:17:11"},{"nodeType":"YulVariableDeclaration","src":"1118:31:11","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1140:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"1144:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1130:9:11"},"nodeType":"YulFunctionCall","src":"1130:19:11"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"1122:4:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1162:57:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1185:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1195:1:11","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1202:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1214:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1198:3:11"},"nodeType":"YulFunctionCall","src":"1198:19:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1191:3:11"},"nodeType":"YulFunctionCall","src":"1191:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1181:3:11"},"nodeType":"YulFunctionCall","src":"1181:38:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"1166:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1256:23:11","statements":[{"nodeType":"YulAssignment","src":"1258:19:11","value":{"name":"data","nodeType":"YulIdentifier","src":"1273:4:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"1258:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"1238:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1250:4:11","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1235:2:11"},"nodeType":"YulFunctionCall","src":"1235:20:11"},"nodeType":"YulIf","src":"1232:47:11"},{"nodeType":"YulVariableDeclaration","src":"1292:41:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1306:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1316:1:11","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1323:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1328:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1319:3:11"},"nodeType":"YulFunctionCall","src":"1319:12:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1312:3:11"},"nodeType":"YulFunctionCall","src":"1312:20:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1302:3:11"},"nodeType":"YulFunctionCall","src":"1302:31:11"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1296:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1346:24:11","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1359:11:11"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1350:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1444:21:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1453:5:11"},{"name":"_1","nodeType":"YulIdentifier","src":"1460:2:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1446:6:11"},"nodeType":"YulFunctionCall","src":"1446:17:11"},"nodeType":"YulExpressionStatement","src":"1446:17:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1394:5:11"},{"name":"_2","nodeType":"YulIdentifier","src":"1401:2:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1391:2:11"},"nodeType":"YulFunctionCall","src":"1391:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1405:26:11","statements":[{"nodeType":"YulAssignment","src":"1407:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1420:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"1427:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:11"},"nodeType":"YulFunctionCall","src":"1416:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1407:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"1387:3:11","statements":[]},"src":"1383:82:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1033:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"1038:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1030:2:11"},"nodeType":"YulFunctionCall","src":"1030:11:11"},"nodeType":"YulIf","src":"1027:448:11"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"989:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"996:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1001:10:11","type":""}],"src":"937:544:11"},{"body":{"nodeType":"YulBlock","src":"1571:81:11","statements":[{"nodeType":"YulAssignment","src":"1581:65:11","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1596:4:11"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1614:1:11","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1617:3:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1610:3:11"},"nodeType":"YulFunctionCall","src":"1610:11:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1627:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1623:3:11"},"nodeType":"YulFunctionCall","src":"1623:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1606:3:11"},"nodeType":"YulFunctionCall","src":"1606:24:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1602:3:11"},"nodeType":"YulFunctionCall","src":"1602:29:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1592:3:11"},"nodeType":"YulFunctionCall","src":"1592:40:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1638:1:11","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1641:3:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1634:3:11"},"nodeType":"YulFunctionCall","src":"1634:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1589:2:11"},"nodeType":"YulFunctionCall","src":"1589:57:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1581:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1548:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"1554:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1562:4:11","type":""}],"src":"1486:166:11"},{"body":{"nodeType":"YulBlock","src":"1751:1254:11","statements":[{"nodeType":"YulVariableDeclaration","src":"1761:24:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1781:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1775:5:11"},"nodeType":"YulFunctionCall","src":"1775:10:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1765:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1828:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1830:16:11"},"nodeType":"YulFunctionCall","src":"1830:18:11"},"nodeType":"YulExpressionStatement","src":"1830:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1800:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1816:2:11","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1820:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1812:3:11"},"nodeType":"YulFunctionCall","src":"1812:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"1824:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1808:3:11"},"nodeType":"YulFunctionCall","src":"1808:18:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1797:2:11"},"nodeType":"YulFunctionCall","src":"1797:30:11"},"nodeType":"YulIf","src":"1794:56:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1902:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1940:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1934:5:11"},"nodeType":"YulFunctionCall","src":"1934:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1908:25:11"},"nodeType":"YulFunctionCall","src":"1908:38:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"1948:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"1859:42:11"},"nodeType":"YulFunctionCall","src":"1859:96:11"},"nodeType":"YulExpressionStatement","src":"1859:96:11"},{"nodeType":"YulVariableDeclaration","src":"1964:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"1981:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1968:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1991:23:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2010:4:11","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1995:11:11","type":""}]},{"nodeType":"YulAssignment","src":"2023:24:11","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2036:11:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2023:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2093:655:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2107:35:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2126:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2138:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2134:3:11"},"nodeType":"YulFunctionCall","src":"2134:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2122:3:11"},"nodeType":"YulFunctionCall","src":"2122:20:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2111:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2155:48:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2198:4:11"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"2169:28:11"},"nodeType":"YulFunctionCall","src":"2169:34:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"2159:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2216:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2225:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2220:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2303:172:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2328:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2346:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2351:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2342:3:11"},"nodeType":"YulFunctionCall","src":"2342:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2336:5:11"},"nodeType":"YulFunctionCall","src":"2336:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2321:6:11"},"nodeType":"YulFunctionCall","src":"2321:42:11"},"nodeType":"YulExpressionStatement","src":"2321:42:11"},{"nodeType":"YulAssignment","src":"2380:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2394:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2402:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2390:3:11"},"nodeType":"YulFunctionCall","src":"2390:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2380:6:11"}]},{"nodeType":"YulAssignment","src":"2421:40:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2438:9:11"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2449:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2434:3:11"},"nodeType":"YulFunctionCall","src":"2434:27:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2421:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2250:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"2253:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2247:2:11"},"nodeType":"YulFunctionCall","src":"2247:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2262:28:11","statements":[{"nodeType":"YulAssignment","src":"2264:24:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2273:1:11"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2276:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2269:3:11"},"nodeType":"YulFunctionCall","src":"2269:19:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2264:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"2243:3:11","statements":[]},"src":"2239:236:11"},{"body":{"nodeType":"YulBlock","src":"2523:166:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2541:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2568:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2573:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2564:3:11"},"nodeType":"YulFunctionCall","src":"2564:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2558:5:11"},"nodeType":"YulFunctionCall","src":"2558:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2545:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2608:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2620:9:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:1:11","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2650:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:11"},"nodeType":"YulFunctionCall","src":"2643:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"2659:3:11","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2639:3:11"},"nodeType":"YulFunctionCall","src":"2639:24:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2669:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2665:3:11"},"nodeType":"YulFunctionCall","src":"2665:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2635:3:11"},"nodeType":"YulFunctionCall","src":"2635:37:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2631:3:11"},"nodeType":"YulFunctionCall","src":"2631:42:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2616:3:11"},"nodeType":"YulFunctionCall","src":"2616:58:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2601:6:11"},"nodeType":"YulFunctionCall","src":"2601:74:11"},"nodeType":"YulExpressionStatement","src":"2601:74:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2494:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"2503:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2491:2:11"},"nodeType":"YulFunctionCall","src":"2491:19:11"},"nodeType":"YulIf","src":"2488:201:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2709:4:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2723:1:11","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2726:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2719:3:11"},"nodeType":"YulFunctionCall","src":"2719:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"2735:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2715:3:11"},"nodeType":"YulFunctionCall","src":"2715:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2702:6:11"},"nodeType":"YulFunctionCall","src":"2702:36:11"},"nodeType":"YulExpressionStatement","src":"2702:36:11"}]},"nodeType":"YulCase","src":"2086:662:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2091:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2765:234:11","statements":[{"nodeType":"YulVariableDeclaration","src":"2779:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2792:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2783:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2828:67:11","statements":[{"nodeType":"YulAssignment","src":"2846:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2865:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2870:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2861:3:11"},"nodeType":"YulFunctionCall","src":"2861:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2855:5:11"},"nodeType":"YulFunctionCall","src":"2855:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2846:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2809:6:11"},"nodeType":"YulIf","src":"2806:89:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2915:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2974:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"2981:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2921:52:11"},"nodeType":"YulFunctionCall","src":"2921:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2908:6:11"},"nodeType":"YulFunctionCall","src":"2908:81:11"},"nodeType":"YulExpressionStatement","src":"2908:81:11"}]},"nodeType":"YulCase","src":"2757:242:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2066:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2074:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2063:2:11"},"nodeType":"YulFunctionCall","src":"2063:14:11"},"nodeType":"YulSwitch","src":"2056:943:11"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1736:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"1742:3:11","type":""}],"src":"1657:1348:11"},{"body":{"nodeType":"YulBlock","src":"3155:131:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3172:3:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3185:3:11","type":"","value":"240"},{"name":"value0","nodeType":"YulIdentifier","src":"3190:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3181:3:11"},"nodeType":"YulFunctionCall","src":"3181:16:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3203:3:11","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"3208:5:11","type":"","value":"65535"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3199:3:11"},"nodeType":"YulFunctionCall","src":"3199:15:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3177:3:11"},"nodeType":"YulFunctionCall","src":"3177:38:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3165:6:11"},"nodeType":"YulFunctionCall","src":"3165:51:11"},"nodeType":"YulExpressionStatement","src":"3165:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3236:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3241:1:11","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3232:3:11"},"nodeType":"YulFunctionCall","src":"3232:11:11"},{"name":"value1","nodeType":"YulIdentifier","src":"3245:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3225:6:11"},"nodeType":"YulFunctionCall","src":"3225:27:11"},"nodeType":"YulExpressionStatement","src":"3225:27:11"},{"nodeType":"YulAssignment","src":"3261:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3272:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"3277:2:11","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3268:3:11"},"nodeType":"YulFunctionCall","src":"3268:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3261:3:11"}]}]},"name":"abi_encode_tuple_packed_t_uint16_t_uint256__to_t_uint16_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3123:3:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3128:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3136:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3147:3:11","type":""}],"src":"3010:276:11"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint16_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_uint16_t_uint256__to_t_uint16_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(240, value0), shl(240, 65535)))\n        mstore(add(pos, 2), value1)\n        end := add(pos, 34)\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xC DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x31AF CODESIZE SUB DUP1 PUSH3 0x31AF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x43 SWAP2 PUSH3 0x13D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP4 AND OR DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH5 0x2540BE400 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH8 0x8AC7230489E80000 DUP3 DUP5 ADD MSTORE PUSH1 0x64 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH21 0x2540BE400000000000000000000000002540BE400 PUSH1 0x2 SSTORE PUSH25 0x1000000000000006400000000000000008AC7230489E80000 PUSH1 0x3 SSTORE DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH8 0xDE0B6B3A7640000 DUP1 DUP3 MSTORE PUSH2 0x3E8 SWAP2 SWAP1 SWAP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x6 SSTORE PUSH3 0x126 PUSH3 0x30D40 PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP1 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD DUP1 DUP3 SUB SWAP1 SWAP4 ADD DUP4 MSTORE PUSH1 0x42 ADD SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x7 SWAP1 PUSH3 0x135 SWAP1 DUP3 PUSH3 0x20F JUMP JUMPDEST POP POP PUSH3 0x2DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH3 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x195 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x20A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1E5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x206 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1F1 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x22B JUMPI PUSH3 0x22B PUSH3 0x16A JUMP JUMPDEST PUSH3 0x243 DUP2 PUSH3 0x23C DUP5 SLOAD PUSH3 0x180 JUMP JUMPDEST DUP5 PUSH3 0x1BC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x27B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x262 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x206 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2AC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x28B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2CB JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2EC4 DUP1 PUSH3 0x2EB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9924D33B GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xCA066B35 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE97A448A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE97A448A EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0x826 JUMPI DUP1 PUSH4 0xF9CD3CEB EQ PUSH2 0x858 JUMPI DUP1 PUSH4 0xFBBA623B EQ PUSH2 0x86E JUMPI DUP1 PUSH4 0xFDC07C70 EQ PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCA066B35 EQ PUSH2 0x78A JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0xD23104F1 EQ PUSH2 0x7CC JUMPI DUP1 PUSH4 0xDA1A7C9A EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xDB14F305 EQ PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB6D9EF60 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xB6D9EF60 EQ PUSH2 0x6B8 JUMPI DUP1 PUSH4 0xC08F15A1 EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0xC2FA4813 EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0xC5803100 EQ PUSH2 0x741 JUMPI DUP1 PUSH4 0xC81B383A EQ PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9924D33B EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0x9C729DA1 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xAAFF5F16 EQ PUSH2 0x657 JUMPI DUP1 PUSH4 0xB2086499 EQ PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3408E470 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x71BA2FD6 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x71BA2FD6 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x76A386DC EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x7A145748 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x7F6DF8E6 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0x907C5E7E EQ PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3408E470 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x3E0DD83E EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x40A7BB10 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10DDB137 GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x12A9EE6B EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x240DE277 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x272BD384 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x2C365E25 EQ PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D3277F EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x96568F6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xEAF6EA6 EQ PUSH2 0x2A8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x23A SWAP2 SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x21CB JUMP JUMPDEST POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x21FB JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2354 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x248F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP5 DUP7 AND DUP6 MUL OR PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP4 SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP2 SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xFFFF AND PUSH2 0x295 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x2C8 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x24F4 JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x439 CALLDATASIZE PUSH1 0x4 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0xB7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45E PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x21FB JUMP JUMPDEST POP ADDRESS SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E2 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x2594 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x25E1 JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x567 PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x5C1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL SWAP3 DUP4 SWAP1 DIV DUP3 AND SWAP3 SWAP2 DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x620 CALLDATASIZE PUSH1 0x4 PUSH2 0x2594 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x2618 JUMP JUMPDEST PUSH2 0xD39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x692 CALLDATASIZE PUSH1 0x4 PUSH2 0x25E1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x6D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2698 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x6F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x73C CALLDATASIZE PUSH1 0x4 PUSH2 0x26CF JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x272 PUSH2 0x74F CALLDATASIZE PUSH1 0x4 PUSH2 0x277E JUMP JUMPDEST PUSH2 0x168A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45E PUSH2 0x76F CALLDATASIZE PUSH1 0x4 PUSH2 0x21FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 EQ SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x7C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2845 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH1 0x1 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x295 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0x841 CALLDATASIZE PUSH1 0x4 PUSH2 0x28AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x567 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x889 CALLDATASIZE PUSH1 0x4 PUSH2 0x28F9 JUMP JUMPDEST PUSH2 0x1C25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x8A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x8D4 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO ISZERO SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x92B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP7 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP5 POP SWAP2 SWAP3 POP PUSH2 0x96E SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x99A SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x9FE SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA2A SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA77 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA4C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA77 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA5A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD GT PUSH2 0xB1C JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0xA99 SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAC5 SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB12 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAE7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB12 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAF5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xB1E JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB31 DUP10 PUSH1 0x1 DUP11 DUP11 MLOAD DUP7 PUSH2 0x1C7A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB42 DUP8 DUP4 PUSH1 0x6 SLOAD PUSH2 0x1E13 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0xB52 JUMPI DUP1 SWAP5 POP DUP5 PUSH2 0xB57 JUMP JUMPDEST DUP1 SWAP4 POP DUP4 JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0xB65 DUP4 DUP8 PUSH2 0x2995 JUMP JUMPDEST PUSH2 0xB6F SWAP2 SWAP1 PUSH2 0x2995 JUMP JUMPDEST SWAP5 POP POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xBA1 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2073746F726564207061796C6F6164 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A20696E76616C69642063616C6C6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD PUSH32 0x23D2684F396E92A6E2FF2D16F98E6FEA00D50CB27A64B531BC0748F730211F98 SWAP1 PUSH2 0xCB2 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x29D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7C6 DUP5 DUP5 DUP5 PUSH2 0x1E50 JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xD20 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xD5C SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xDBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2073746F726564207061796C6F6164 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP3 EQ DUP1 ISZERO PUSH2 0xDF2 JUMPI POP DUP1 PUSH1 0x1 ADD SLOAD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDE8 SWAP3 SWAP2 SWAP1 PUSH2 0x2935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A20696E76616C6964207061796C6F61640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH2 0xFFFF DUP9 AND DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH2 0xE88 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 SLOAD PUSH3 0x1D3567 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH3 0x1D3567 SWAP1 PUSH2 0xED4 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP8 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x29EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x612434F39581C8E7D99746C9C20C6EB0CE8C0EB99F007C5719D620841370957D DUP9 DUP9 DUP9 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xF3D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2072656365697665207265656E7472 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6379 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x200 OR SWAP1 SSTORE PUSH2 0xFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xFE7 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x8 PUSH1 0x0 DUP11 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1022 SWAP3 SWAP2 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1048 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2A85 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ PUSH2 0x10CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A2077726F6E67206E6F6E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD ISZERO PUSH2 0x139D JUMPI PUSH2 0xFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x10F8 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP2 MSTORE POP DUP3 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x132E JUMPI DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP5 MUL ADD DUP1 SLOAD SWAP2 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP4 SWAP3 SWAP2 DUP3 ADD SWAP1 PUSH2 0x11D9 SWAP1 DUP3 PUSH2 0x2AFA JUMP JUMPDEST POP POP POP PUSH1 0x0 JUMPDEST DUP3 SLOAD PUSH2 0x11ED SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x12B3 JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1206 JUMPI PUSH2 0x1206 PUSH2 0x2BCC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD DUP4 DUP3 PUSH1 0x1 PUSH2 0x1222 SWAP2 SWAP1 PUSH2 0x2995 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1232 JUMPI PUSH2 0x1232 PUSH2 0x2BCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP3 SSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND OR PUSH1 0x1 PUSH1 0xA0 SHL SWAP3 DUP4 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD SWAP1 PUSH2 0x129C SWAP1 DUP5 ADD DUP3 PUSH2 0x2BE2 JUMP JUMPDEST POP SWAP1 POP POP DUP1 DUP1 PUSH2 0x12AB SWAP1 PUSH2 0x2CBC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11DF JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x12C8 JUMPI PUSH2 0x12C8 PUSH2 0x2BCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD SWAP3 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x1325 SWAP1 DUP3 PUSH2 0x2AFA JUMP JUMPDEST POP SWAP1 POP POP PUSH2 0x1396 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP5 MUL ADD DUP1 SLOAD SWAP2 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP4 SWAP3 SWAP2 DUP3 ADD SWAP1 PUSH2 0x1392 SWAP1 DUP3 PUSH2 0x2AFA JUMP JUMPDEST POP POP POP JUMPDEST POP POP PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14CB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13EA SWAP3 SWAP2 SWAP1 PUSH2 0x2935 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 MSTORE PUSH2 0xFFFF DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x1419 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD DUP7 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR OR DUP2 SSTORE SWAP4 DUP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP2 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xF9E4D95B62F08222D612B5AB92039CD8FBBBEA550A95E8DF9F927436BBDF5DB SWAP2 PUSH2 0x14B2 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP12 SWAP2 DUP12 SWAP2 SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1D3567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH3 0x1D3567 SWAP1 DUP7 SWAP1 PUSH2 0x1501 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP13 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x29EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x152D JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1670 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x155B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP6 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x159D SWAP3 SWAP2 SWAP1 PUSH2 0x2935 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 MSTORE PUSH2 0xFFFF DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x15CC SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP3 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xF9E4D95B62F08222D612B5AB92039CD8FBBBEA550A95E8DF9F927436BBDF5DB SWAP1 PUSH2 0x165A SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP11 SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE JUMPDEST POP POP PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x16E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2073656E64207265656E7472616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE DUP6 MLOAD PUSH1 0x28 EQ PUSH2 0x175C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A20696E636F72726563742072656D6F746520 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x616464726573732073697A65 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x14 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A2064657374696E6174696F6E204C61796572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5A65726F20456E64706F696E74206E6F7420666F756E64000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 MLOAD GT PUSH2 0x1889 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0x1806 SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1832 SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x187F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1854 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x187F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1862 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x188B JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18DC DUP12 CALLER DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO ISZERO DUP7 PUSH2 0xA7F JUMP JUMPDEST POP SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x1941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F7420656E6F756768206E6174697665 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x20666F722066656573 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH2 0xFFFF DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP1 PUSH2 0x1975 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2A85 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE SWAP1 POP PUSH1 0x0 DUP3 CALLVALUE PUSH2 0x19A8 SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1A55 JUMPI PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206661696C656420746F20726566756E6400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1A63 DUP8 PUSH2 0x2047 JUMP JUMPDEST SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP POP DUP2 ISZERO PUSH2 0x1B05 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1ABE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1B03 JUMPI PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x2C7A964CA3DE5EC1D42D9822F9BBD0EB142A59CC9F855E9D93813B773192C7A3 SWAP1 PUSH1 0x0 SWAP1 LOG3 JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP12 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP16 DUP16 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC2FA4813 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP5 DUP15 DUP12 DUP11 DUP8 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH2 0x1C31 DUP3 DUP3 PUSH2 0x2AFA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1C58 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C89 DUP6 PUSH2 0x2047 JUMP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP4 PUSH2 0xFFFF AND PUSH1 0x2 SUB PUSH2 0x1D15 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 GT ISZERO PUSH2 0x1D08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206473744E6174697665416D7420746F6F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3630B933B29 PUSH1 0xD5 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x1D12 DUP3 DUP3 PUSH2 0x2995 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1D36 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2995 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D53 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2D9B JUMP JUMPDEST SWAP1 POP PUSH2 0x1D5F DUP2 DUP4 PUSH2 0x2995 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP3 POP PUSH1 0x0 SWAP1 PUSH5 0x2540BE400 SWAP1 PUSH2 0x1D82 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 PUSH2 0x2D9B JUMP JUMPDEST PUSH2 0x1D8C SWAP2 SWAP1 PUSH2 0x2DC8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH5 0x2540BE400 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP3 PUSH2 0x1DCF SWAP3 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND PUSH2 0x2DDC JUMP JUMPDEST PUSH2 0x1DD9 SWAP2 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST PUSH2 0x1DE3 SWAP2 SWAP1 PUSH2 0x2E07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP PUSH2 0x1DF8 DUP2 DUP12 PUSH2 0x2D9B JUMP JUMPDEST PUSH2 0x1E02 SWAP1 DUP4 PUSH2 0x2995 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E24 JUMPI POP PUSH1 0x4 SLOAD PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x1E35 DUP5 DUP7 PUSH2 0x2995 JUMP JUMPDEST PUSH2 0x1E3F SWAP2 SWAP1 PUSH2 0x2D9B JUMP JUMPDEST PUSH2 0x1E49 SWAP2 SWAP1 PUSH2 0x2DC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x8ED JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1E73 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x7C6 JUMPI DUP1 SLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH2 0x1E9E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1EAE JUMPI PUSH2 0x1EAE PUSH2 0x2BCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x1F07 SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F33 SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F80 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F55 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F80 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F63 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1D3567 DUP7 DUP7 DUP7 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FCA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E2D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 DUP1 SLOAD DUP1 PUSH2 0x200C JUMPI PUSH2 0x200C PUSH2 0x2E78 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x2 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 SSTORE SWAP1 PUSH2 0x203D PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0x2166 JUMP JUMPDEST POP POP SWAP1 SSTORE POP PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x22 EQ DUP1 PUSH2 0x205E JUMPI POP PUSH1 0x42 DUP6 MLOAD GT JUMPDEST PUSH2 0x20A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646170746572506172616D73 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD MLOAD SWAP4 POP PUSH1 0x22 DUP6 ADD MLOAD SWAP3 POP DUP4 PUSH2 0xFFFF AND PUSH1 0x1 EQ DUP1 PUSH2 0x20C7 JUMPI POP DUP4 PUSH2 0xFFFF AND PUSH1 0x2 EQ JUMPDEST PUSH2 0x2108 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x556E737570706F7274656420747854797065 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x2146 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x47617320746F6F206C6F77 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST DUP4 PUSH2 0xFFFF AND PUSH1 0x2 SUB PUSH2 0x215F JUMPI POP POP PUSH1 0x42 DUP4 ADD MLOAD PUSH1 0x56 DUP5 ADD MLOAD JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2172 SWAP1 PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2182 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x21B0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x219C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8ED DUP3 PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x220D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8ED DUP2 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x222A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x227E DUP5 PUSH2 0x21B4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22A5 DUP7 DUP3 DUP8 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x22F3 JUMPI PUSH2 0x22F3 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x231B JUMPI PUSH2 0x231B PUSH2 0x22B2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2372 DUP5 PUSH2 0x21B4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x238D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2399 DUP7 DUP3 DUP8 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23D0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x23B4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2423 SWAP1 DUP4 ADD DUP5 PUSH2 0x23AA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x243F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x8ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23AA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24B0 DUP7 PUSH2 0x2461 JUMP JUMPDEST SWAP5 POP PUSH2 0x24BE PUSH1 0x20 DUP8 ADD PUSH2 0x2461 JUMP JUMPDEST SWAP4 POP PUSH2 0x24CC PUSH1 0x40 DUP8 ADD PUSH2 0x2461 JUMP JUMPDEST SWAP3 POP PUSH2 0x24DA PUSH1 0x60 DUP8 ADD PUSH2 0x2478 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E8 PUSH1 0x80 DUP8 ADD PUSH2 0x2478 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x250C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2515 DUP7 PUSH2 0x21B4 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2525 DUP2 PUSH2 0x21E6 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x254D DUP10 DUP4 DUP11 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP2 ISZERO ISZERO DUP3 EQ PUSH2 0x2564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x257A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2587 DUP9 DUP3 DUP10 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25B0 DUP4 PUSH2 0x21B4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x25CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25D7 DUP6 DUP3 DUP7 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25FD DUP4 PUSH2 0x21B4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x260D DUP2 PUSH2 0x21E6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2639 DUP7 PUSH2 0x21B4 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2661 DUP10 DUP4 DUP11 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x267A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2687 DUP9 DUP3 DUP10 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x25FD DUP2 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x26EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F4 DUP10 PUSH2 0x21B4 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x271C DUP13 DUP4 DUP14 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2731 DUP3 PUSH2 0x21E6 JUMP JUMPDEST DUP2 SWAP7 POP PUSH2 0x2740 PUSH1 0x60 DUP13 ADD PUSH2 0x2478 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x275D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276A DUP12 DUP3 DUP13 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27A2 DUP9 PUSH2 0x21B4 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x27BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27CA DUP12 DUP4 DUP13 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27EC DUP12 DUP4 DUP13 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2801 DUP3 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP1 PUSH2 0x2813 DUP3 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2836 DUP11 DUP3 DUP12 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x285B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2864 DUP6 PUSH2 0x21B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2872 PUSH1 0x20 DUP7 ADD PUSH2 0x21B4 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28A0 DUP8 DUP3 DUP9 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x28C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28CB DUP6 PUSH2 0x21B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x28D9 PUSH1 0x20 DUP7 ADD PUSH2 0x21B4 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x28E9 DUP2 PUSH2 0x21E6 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x290B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x292D DUP5 DUP3 DUP6 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2959 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2979 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xCF7 JUMPI PUSH2 0xCF7 PUSH2 0x297F JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2423 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x29A8 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2A0D PUSH1 0x80 DUP4 ADD DUP8 DUP10 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2A2F DUP2 DUP6 DUP8 PUSH2 0x29A8 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2A5A PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x2AA1 JUMPI PUSH2 0x2AA1 PUSH2 0x297F JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2AF5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2AD2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2AF1 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2ADE JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B13 JUMPI PUSH2 0x2B13 PUSH2 0x22B2 JUMP JUMPDEST PUSH2 0x2B27 DUP2 PUSH2 0x2B21 DUP5 SLOAD PUSH2 0x2945 JUMP JUMPDEST DUP5 PUSH2 0x2AAB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B5C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2B44 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2AF1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B8B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2B6C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2BA9 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xCF7 JUMPI PUSH2 0xCF7 PUSH2 0x297F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB PUSH2 0x2BED JUMPI POP POP JUMP JUMPDEST PUSH2 0x2BF7 DUP3 SLOAD PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C0E JUMPI PUSH2 0x2C0E PUSH2 0x22B2 JUMP JUMPDEST PUSH2 0x2C1C DUP2 PUSH2 0x2B21 DUP5 SLOAD PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C50 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x2C38 JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2CB5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C8A JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x2C6A JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x2CA8 JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP PUSH1 0x1 DUP4 PUSH1 0x1 SHL ADD DUP5 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2CCE JUMPI PUSH2 0x2CCE PUSH2 0x297F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP10 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2CF3 PUSH1 0xC0 DUP4 ADD DUP10 DUP12 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2D24 DUP2 DUP7 DUP9 PUSH2 0x29A8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2D38 DUP2 DUP6 PUSH2 0x23AA JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2D64 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x23AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2A2F DUP2 DUP6 PUSH2 0x23AA JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xCF7 JUMPI PUSH2 0xCF7 PUSH2 0x297F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2DD7 JUMPI PUSH2 0x2DD7 PUSH2 0x2DB2 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x2DFF JUMPI PUSH2 0x2DFF PUSH2 0x297F JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x2E21 JUMPI PUSH2 0x2E21 PUSH2 0x2DB2 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2E4B PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2E6C DUP2 DUP6 PUSH2 0x23AA JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0xD7 0xBA 0x2C PUSH20 0xA398675676DC636F7D9FCD1F0C0FED865A358DAD DUP11 0xE7 0xAA 0xB1 DUP5 0xE2 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"812:15736:10:-:0;;;1945:38;;;-1:-1:-1;;1989:41:10;;;;;3374:530;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3413:11;:22;;-1:-1:-1;;3413:22:10;;;;;;;3488:222;;;;;;;;3534:4;3488:222;;;;;;;;;;;3642:4;3488:222;;;;3669:3;3488:222;;;;;;;;;;;;3469:241;:16;:241;;;;3740:49;;;;;;;;3767:4;3740:49;;;3783:4;3740:49;;;;;;;3720:17;:69;;;;;;3821:4;3809:9;:16;3858:39;3890:6;1114:35:9;;;-1:-1:-1;;;1114:35:9;;;3165:51:11;3232:11;;;;3225:27;;;;1114:35:9;;;;;;;;;;3268:12:11;;1114:35:9;;;918:238;3858:39:10;3835:20;;:62;;:20;:62;:::i;:::-;;3374:530;812:15736;;14:276:11;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;184:9;178:16;234:6;227:5;223:18;216:5;213:29;203:57;;256:1;253;246:12;203:57;279:5;14:276;-1:-1:-1;;;14:276:11:o;295:127::-;356:10;351:3;347:20;344:1;337:31;387:4;384:1;377:15;411:4;408:1;401:15;427:380;506:1;502:12;;;;549;;;570:61;;624:4;616:6;612:17;602:27;;570:61;677:2;669:6;666:14;646:18;643:38;640:161;;723:10;718:3;714:20;711:1;704:31;758:4;755:1;748:15;786:4;783:1;776:15;640:161;;427:380;;;:::o;937:544::-;1038:2;1033:3;1030:11;1027:448;;;1074:1;1099:5;1095:2;1088:17;1144:4;1140:2;1130:19;1214:2;1202:10;1198:19;1195:1;1191:27;1185:4;1181:38;1250:4;1238:10;1235:20;1232:47;;;-1:-1:-1;1273:4:11;1232:47;1328:2;1323:3;1319:12;1316:1;1312:20;1306:4;1302:31;1292:41;;1383:82;1401:2;1394:5;1391:13;1383:82;;;1446:17;;;1427:1;1416:13;1383:82;;;1387:3;;;1027:448;937:544;;;:::o;1657:1348::-;1775:10;;-1:-1:-1;;;;;1797:30:11;;1794:56;;;1830:18;;:::i;:::-;1859:96;1948:6;1908:38;1940:4;1934:11;1908:38;:::i;:::-;1902:4;1859:96;:::i;:::-;2010:4;;2074:2;2063:14;;2091:1;2086:662;;;;2792:1;2809:6;2806:89;;;-1:-1:-1;2861:19:11;;;2855:26;2806:89;-1:-1:-1;;1614:1:11;1610:11;;;1606:24;1602:29;1592:40;1638:1;1634:11;;;1589:57;2908:81;;2056:943;;2086:662;884:1;877:14;;;921:4;908:18;;-1:-1:-1;;2122:20:11;;;2239:236;2253:7;2250:1;2247:14;2239:236;;;2342:19;;;2336:26;2321:42;;2434:27;;;;2402:1;2390:14;;;;2269:19;;2239:236;;;2243:3;2503:6;2494:7;2491:19;2488:201;;;2564:19;;;2558:26;-1:-1:-1;;2647:1:11;2643:14;;;2659:3;2639:24;2635:37;2631:42;2616:58;2601:74;;2488:201;-1:-1:-1;;;;;2735:1:11;2719:14;;;2715:22;2702:36;;-1:-1:-1;1657:1348:11:o;3010:276::-;812:15736:10;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_clearMsgQue_2961":{"entryPoint":7760,"id":2961,"parameterSlots":3,"returnSlots":0},"@_getProtocolFees_2991":{"entryPoint":7699,"id":2991,"parameterSlots":3,"returnSlots":1},"@_getRelayerFee_3087":{"entryPoint":7290,"id":3087,"parameterSlots":5,"returnSlots":1},"@blockNextMsg_2810":{"entryPoint":null,"id":2810,"parameterSlots":0,"returnSlots":0},"@decodeAdapterParams_1731":{"entryPoint":8263,"id":1731,"parameterSlots":1,"returnSlots":4},"@defaultAdapterParams_1802":{"entryPoint":2545,"id":1802,"parameterSlots":0,"returnSlots":0},"@estimateFees_2459":{"entryPoint":2687,"id":2459,"parameterSlots":5,"returnSlots":2},"@forceResumeReceive_2785":{"entryPoint":2942,"id":2785,"parameterSlots":3,"returnSlots":0},"@getChainId_2468":{"entryPoint":null,"id":2468,"parameterSlots":0,"returnSlots":1},"@getConfig_2664":{"entryPoint":null,"id":2664,"parameterSlots":4,"returnSlots":1},"@getInboundNonce_2377":{"entryPoint":7221,"id":2377,"parameterSlots":3,"returnSlots":1},"@getLengthOfQueue_2802":{"entryPoint":3325,"id":2802,"parameterSlots":3,"returnSlots":1},"@getOutboundNonce_2394":{"entryPoint":3269,"id":2394,"parameterSlots":2,"returnSlots":1},"@getReceiveLibraryAddress_2625":{"entryPoint":null,"id":2625,"parameterSlots":1,"returnSlots":1},"@getReceiveVersion_2686":{"entryPoint":null,"id":2686,"parameterSlots":1,"returnSlots":1},"@getSendLibraryAddress_2611":{"entryPoint":null,"id":2611,"parameterSlots":1,"returnSlots":1},"@getSendVersion_2675":{"entryPoint":null,"id":2675,"parameterSlots":1,"returnSlots":1},"@hasStoredPayload_2597":{"entryPoint":2222,"id":2597,"parameterSlots":3,"returnSlots":1},"@inboundNonce_1808":{"entryPoint":null,"id":1808,"parameterSlots":0,"returnSlots":0},"@isReceivingPayload_2647":{"entryPoint":null,"id":2647,"parameterSlots":0,"returnSlots":1},"@isSendingPayload_2636":{"entryPoint":null,"id":2636,"parameterSlots":0,"returnSlots":1},"@lzEndpointLookup_1788":{"entryPoint":null,"id":1788,"parameterSlots":0,"returnSlots":0},"@mockChainId_1790":{"entryPoint":null,"id":1790,"parameterSlots":0,"returnSlots":0},"@msgsToDeliver_1829":{"entryPoint":2292,"id":1829,"parameterSlots":0,"returnSlots":0},"@nextMsgBlocked_1792":{"entryPoint":null,"id":1792,"parameterSlots":0,"returnSlots":0},"@oracleFee_1800":{"entryPoint":null,"id":1800,"parameterSlots":0,"returnSlots":0},"@outboundNonce_1814":{"entryPoint":null,"id":1814,"parameterSlots":0,"returnSlots":0},"@protocolFeeConfig_1798":{"entryPoint":null,"id":1798,"parameterSlots":0,"returnSlots":0},"@receivePayload_2360":{"entryPoint":3919,"id":2360,"parameterSlots":8,"returnSlots":0},"@relayerFeeConfig_1795":{"entryPoint":null,"id":1795,"parameterSlots":0,"returnSlots":0},"@retryPayload_2569":{"entryPoint":3385,"id":2569,"parameterSlots":5,"returnSlots":0},"@send_2153":{"entryPoint":5770,"id":2153,"parameterSlots":7,"returnSlots":0},"@setConfig_2699":{"entryPoint":null,"id":2699,"parameterSlots":4,"returnSlots":0},"@setDefaultAdapterParams_2908":{"entryPoint":7205,"id":2908,"parameterSlots":1,"returnSlots":0},"@setDestLzEndpoint_2824":{"entryPoint":null,"id":2824,"parameterSlots":2,"returnSlots":0},"@setOracleFee_2898":{"entryPoint":null,"id":2898,"parameterSlots":1,"returnSlots":0},"@setProtocolFee_2888":{"entryPoint":null,"id":2888,"parameterSlots":2,"returnSlots":0},"@setReceiveVersion_2713":{"entryPoint":null,"id":2713,"parameterSlots":1,"returnSlots":0},"@setRelayerPrice_2868":{"entryPoint":null,"id":2868,"parameterSlots":5,"returnSlots":0},"@setSendVersion_2706":{"entryPoint":null,"id":2706,"parameterSlots":1,"returnSlots":0},"@storedPayload_1821":{"entryPoint":null,"id":1821,"parameterSlots":0,"returnSlots":0},"abi_decode_bytes":{"entryPoint":8904,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":8728,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":8699,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9905,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":10489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint128t_uint128t_uint128t_uint64t_uint64":{"entryPoint":9359,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint16":{"entryPoint":8651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint16t_address":{"entryPoint":9697,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_addresst_bytes_memory_ptrt_boolt_bytes_memory_ptr":{"entryPoint":9460,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint16t_bytes_calldata_ptr":{"entryPoint":8800,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_addresst_uint64t_uint256t_bytes_calldata_ptr":{"entryPoint":9935,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":9752,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint16t_bytes_memory_ptr":{"entryPoint":9620,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_bytes_calldata_ptrt_address_payablet_addresst_bytes_memory_ptr":{"entryPoint":10110,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint256":{"entryPoint":9044,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256":{"entryPoint":10412,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_memory_ptr":{"entryPoint":10309,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":9880,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":9260,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint128":{"entryPoint":9313,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint16":{"entryPoint":8628,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint64":{"entryPoint":9336,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes":{"entryPoint":9130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":10664,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10549,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint64_t_bytes_memory_ptr__to_t_address_t_uint64_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9200,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_03f2c372695dfb7017d0d1b5b039a7a7c563c382ff38f9563e77eedca785e4df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1d7a441e6351efbe3589b780f6d9098a5373ce9246e759367f3fb559adf16b4a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3967011d6285a9dce57c3ff82ee9dd83446fd39eaaeb6fa26af022508e44801b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d0b005579c4d5f607baec096f4a22c77289f237586c7362a7902ea2a3c322fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_73b1d6d5ba54cd5e4e2ebace0c8623f647e51a2b5e72af7e7df83d716224bbcb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_82caa7769a2a1defb5e8d4082900c39c0f04eedfd5e921c1e3bf1d16730a12ab__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9ed68b89a8d51980886c19b98768f5848012f002a5537f0951f8528791f91206__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a84f16779931db7ec618d2bd334bd656888d24e7e320bdf2dd7a0a0862d1916b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cfe15a20060cae4027edaeadac99a28b9a581999e01bac9619e7f52b82ee25ac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dcfb2fb846bf29eed16ab1966cc303d2b0cbdcaede7d9e78ee4c30c1a8119790__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint128_t_uint128_t_uint128_t_uint64_t_uint64__to_t_uint128_t_uint128_t_uint128_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10705,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_address_t_uint64_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11477,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_address__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_address__fromStack_reversed":{"entryPoint":10812,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10735,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11821,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_uint256_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11591,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64_t_address_t_bytes32__to_t_uint64_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10645,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint128":{"entryPoint":11783,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11720,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint128":{"entryPoint":11740,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11675,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11193,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":10923,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":11002,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_storage_to_t_bytes_storage":{"entryPoint":11234,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10565,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":11452,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":10885,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10623,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11698,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":11896,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11212,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8882,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":8678,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:29891:11","statements":[{"nodeType":"YulBlock","src":"6:3:11","statements":[]},{"body":{"nodeType":"YulBlock","src":"143:119:11","statements":[{"nodeType":"YulAssignment","src":"153:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"165:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"176:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"161:3:11"},"nodeType":"YulFunctionCall","src":"161:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"153:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"195:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"206:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"188:6:11"},"nodeType":"YulFunctionCall","src":"188:25:11"},"nodeType":"YulExpressionStatement","src":"188:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"233:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"244:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"229:3:11"},"nodeType":"YulFunctionCall","src":"229:18:11"},{"name":"value1","nodeType":"YulIdentifier","src":"249:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"222:6:11"},"nodeType":"YulFunctionCall","src":"222:34:11"},"nodeType":"YulExpressionStatement","src":"222:34:11"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"115:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"123:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"134:4:11","type":""}],"src":"14:248:11"},{"body":{"nodeType":"YulBlock","src":"315:111:11","statements":[{"nodeType":"YulAssignment","src":"325:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"347:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"334:12:11"},"nodeType":"YulFunctionCall","src":"334:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"325:5:11"}]},{"body":{"nodeType":"YulBlock","src":"404:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"413:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"416:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"406:6:11"},"nodeType":"YulFunctionCall","src":"406:12:11"},"nodeType":"YulExpressionStatement","src":"406:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"376:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"387:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"394:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"383:3:11"},"nodeType":"YulFunctionCall","src":"383:18:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"373:2:11"},"nodeType":"YulFunctionCall","src":"373:29:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"366:6:11"},"nodeType":"YulFunctionCall","src":"366:37:11"},"nodeType":"YulIf","src":"363:57:11"}]},"name":"abi_decode_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"294:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"305:5:11","type":""}],"src":"267:159:11"},{"body":{"nodeType":"YulBlock","src":"500:115:11","statements":[{"body":{"nodeType":"YulBlock","src":"546:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"555:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"558:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"548:6:11"},"nodeType":"YulFunctionCall","src":"548:12:11"},"nodeType":"YulExpressionStatement","src":"548:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"521:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"530:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"517:3:11"},"nodeType":"YulFunctionCall","src":"517:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"542:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"513:3:11"},"nodeType":"YulFunctionCall","src":"513:32:11"},"nodeType":"YulIf","src":"510:52:11"},{"nodeType":"YulAssignment","src":"571:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"599:9:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"581:17:11"},"nodeType":"YulFunctionCall","src":"581:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"571:6:11"}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"466:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"477:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"489:6:11","type":""}],"src":"431:184:11"},{"body":{"nodeType":"YulBlock","src":"665:86:11","statements":[{"body":{"nodeType":"YulBlock","src":"729:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"738:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"741:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"731:6:11"},"nodeType":"YulFunctionCall","src":"731:12:11"},"nodeType":"YulExpressionStatement","src":"731:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"699:5:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"714:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"719:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"710:3:11"},"nodeType":"YulFunctionCall","src":"710:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"723:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"706:3:11"},"nodeType":"YulFunctionCall","src":"706:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"695:3:11"},"nodeType":"YulFunctionCall","src":"695:31:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"685:2:11"},"nodeType":"YulFunctionCall","src":"685:42:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"678:6:11"},"nodeType":"YulFunctionCall","src":"678:50:11"},"nodeType":"YulIf","src":"675:70:11"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"654:5:11","type":""}],"src":"620:131:11"},{"body":{"nodeType":"YulBlock","src":"826:177:11","statements":[{"body":{"nodeType":"YulBlock","src":"872:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"881:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"884:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"874:6:11"},"nodeType":"YulFunctionCall","src":"874:12:11"},"nodeType":"YulExpressionStatement","src":"874:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"847:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"856:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"843:3:11"},"nodeType":"YulFunctionCall","src":"843:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"868:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"839:3:11"},"nodeType":"YulFunctionCall","src":"839:32:11"},"nodeType":"YulIf","src":"836:52:11"},{"nodeType":"YulVariableDeclaration","src":"897:36:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"923:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"910:12:11"},"nodeType":"YulFunctionCall","src":"910:23:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"901:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"967:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"942:24:11"},"nodeType":"YulFunctionCall","src":"942:31:11"},"nodeType":"YulExpressionStatement","src":"942:31:11"},{"nodeType":"YulAssignment","src":"982:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"992:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"982:6:11"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"792:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"803:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"815:6:11","type":""}],"src":"756:247:11"},{"body":{"nodeType":"YulBlock","src":"1107:89:11","statements":[{"nodeType":"YulAssignment","src":"1117:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1129:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1140:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1125:3:11"},"nodeType":"YulFunctionCall","src":"1125:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1117:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1159:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1174:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1182:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1170:3:11"},"nodeType":"YulFunctionCall","src":"1170:19:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1152:6:11"},"nodeType":"YulFunctionCall","src":"1152:38:11"},"nodeType":"YulExpressionStatement","src":"1152:38:11"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1076:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1087:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1098:4:11","type":""}],"src":"1008:188:11"},{"body":{"nodeType":"YulBlock","src":"1273:275:11","statements":[{"body":{"nodeType":"YulBlock","src":"1322:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1331:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1334:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1324:6:11"},"nodeType":"YulFunctionCall","src":"1324:12:11"},"nodeType":"YulExpressionStatement","src":"1324:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1301:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1309:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1297:3:11"},"nodeType":"YulFunctionCall","src":"1297:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"1316:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:11"},"nodeType":"YulFunctionCall","src":"1293:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1286:6:11"},"nodeType":"YulFunctionCall","src":"1286:35:11"},"nodeType":"YulIf","src":"1283:55:11"},{"nodeType":"YulAssignment","src":"1347:30:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1370:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1357:12:11"},"nodeType":"YulFunctionCall","src":"1357:20:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1347:6:11"}]},{"body":{"nodeType":"YulBlock","src":"1420:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1429:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1432:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1422:6:11"},"nodeType":"YulFunctionCall","src":"1422:12:11"},"nodeType":"YulExpressionStatement","src":"1422:12:11"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1392:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1400:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1389:2:11"},"nodeType":"YulFunctionCall","src":"1389:30:11"},"nodeType":"YulIf","src":"1386:50:11"},{"nodeType":"YulAssignment","src":"1445:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1461:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1469:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1457:3:11"},"nodeType":"YulFunctionCall","src":"1457:17:11"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1445:8:11"}]},{"body":{"nodeType":"YulBlock","src":"1526:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1535:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1538:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1528:6:11"},"nodeType":"YulFunctionCall","src":"1528:12:11"},"nodeType":"YulExpressionStatement","src":"1528:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1497:6:11"},{"name":"length","nodeType":"YulIdentifier","src":"1505:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1493:3:11"},"nodeType":"YulFunctionCall","src":"1493:19:11"},{"kind":"number","nodeType":"YulLiteral","src":"1514:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1489:3:11"},"nodeType":"YulFunctionCall","src":"1489:30:11"},{"name":"end","nodeType":"YulIdentifier","src":"1521:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1486:2:11"},"nodeType":"YulFunctionCall","src":"1486:39:11"},"nodeType":"YulIf","src":"1483:59:11"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1236:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"1244:3:11","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1252:8:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"1262:6:11","type":""}],"src":"1201:347:11"},{"body":{"nodeType":"YulBlock","src":"1658:376:11","statements":[{"body":{"nodeType":"YulBlock","src":"1704:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1713:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1716:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1706:6:11"},"nodeType":"YulFunctionCall","src":"1706:12:11"},"nodeType":"YulExpressionStatement","src":"1706:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1679:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"1688:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1675:3:11"},"nodeType":"YulFunctionCall","src":"1675:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"1700:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1671:3:11"},"nodeType":"YulFunctionCall","src":"1671:32:11"},"nodeType":"YulIf","src":"1668:52:11"},{"nodeType":"YulAssignment","src":"1729:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1757:9:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"1739:17:11"},"nodeType":"YulFunctionCall","src":"1739:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1729:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"1776:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1807:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"1818:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1803:3:11"},"nodeType":"YulFunctionCall","src":"1803:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1790:12:11"},"nodeType":"YulFunctionCall","src":"1790:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1780:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"1865:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1874:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1877:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1867:6:11"},"nodeType":"YulFunctionCall","src":"1867:12:11"},"nodeType":"YulExpressionStatement","src":"1867:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1837:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"1845:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1834:2:11"},"nodeType":"YulFunctionCall","src":"1834:30:11"},"nodeType":"YulIf","src":"1831:50:11"},{"nodeType":"YulVariableDeclaration","src":"1890:84:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1946:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"1957:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1942:3:11"},"nodeType":"YulFunctionCall","src":"1942:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1966:7:11"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1916:25:11"},"nodeType":"YulFunctionCall","src":"1916:58:11"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"1894:8:11","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"1904:8:11","type":""}]},{"nodeType":"YulAssignment","src":"1983:18:11","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1993:8:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1983:6:11"}]},{"nodeType":"YulAssignment","src":"2010:18:11","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"2020:8:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2010:6:11"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1608:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1619:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1631:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1639:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1647:6:11","type":""}],"src":"1553:481:11"},{"body":{"nodeType":"YulBlock","src":"2134:92:11","statements":[{"nodeType":"YulAssignment","src":"2144:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2156:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2167:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:11"},"nodeType":"YulFunctionCall","src":"2152:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2144:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2186:9:11"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2211:6:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2204:6:11"},"nodeType":"YulFunctionCall","src":"2204:14:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2197:6:11"},"nodeType":"YulFunctionCall","src":"2197:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2179:6:11"},"nodeType":"YulFunctionCall","src":"2179:41:11"},"nodeType":"YulExpressionStatement","src":"2179:41:11"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2103:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2114:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2125:4:11","type":""}],"src":"2039:187:11"},{"body":{"nodeType":"YulBlock","src":"2263:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2280:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2287:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2292:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2283:3:11"},"nodeType":"YulFunctionCall","src":"2283:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2273:6:11"},"nodeType":"YulFunctionCall","src":"2273:31:11"},"nodeType":"YulExpressionStatement","src":"2273:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2320:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2323:4:11","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2313:6:11"},"nodeType":"YulFunctionCall","src":"2313:15:11"},"nodeType":"YulExpressionStatement","src":"2313:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2344:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2347:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2337:6:11"},"nodeType":"YulFunctionCall","src":"2337:15:11"},"nodeType":"YulExpressionStatement","src":"2337:15:11"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2231:127:11"},{"body":{"nodeType":"YulBlock","src":"2415:666:11","statements":[{"body":{"nodeType":"YulBlock","src":"2464:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2473:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2476:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2466:6:11"},"nodeType":"YulFunctionCall","src":"2466:12:11"},"nodeType":"YulExpressionStatement","src":"2466:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2443:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2451:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2439:3:11"},"nodeType":"YulFunctionCall","src":"2439:17:11"},{"name":"end","nodeType":"YulIdentifier","src":"2458:3:11"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2435:3:11"},"nodeType":"YulFunctionCall","src":"2435:27:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2428:6:11"},"nodeType":"YulFunctionCall","src":"2428:35:11"},"nodeType":"YulIf","src":"2425:55:11"},{"nodeType":"YulVariableDeclaration","src":"2489:30:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2512:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2499:12:11"},"nodeType":"YulFunctionCall","src":"2499:20:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2493:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2528:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"2538:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2532:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2579:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2581:16:11"},"nodeType":"YulFunctionCall","src":"2581:18:11"},"nodeType":"YulExpressionStatement","src":"2581:18:11"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2571:2:11"},{"name":"_2","nodeType":"YulIdentifier","src":"2575:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2568:2:11"},"nodeType":"YulFunctionCall","src":"2568:10:11"},"nodeType":"YulIf","src":"2565:36:11"},{"nodeType":"YulVariableDeclaration","src":"2610:17:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2624:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2620:3:11"},"nodeType":"YulFunctionCall","src":"2620:7:11"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2614:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2636:23:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2656:2:11","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2650:5:11"},"nodeType":"YulFunctionCall","src":"2650:9:11"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2640:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2668:71:11","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2690:6:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2714:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"2718:4:11","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2710:3:11"},"nodeType":"YulFunctionCall","src":"2710:13:11"},{"name":"_3","nodeType":"YulIdentifier","src":"2725:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2706:3:11"},"nodeType":"YulFunctionCall","src":"2706:22:11"},{"kind":"number","nodeType":"YulLiteral","src":"2730:2:11","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2702:3:11"},"nodeType":"YulFunctionCall","src":"2702:31:11"},{"name":"_3","nodeType":"YulIdentifier","src":"2735:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2698:3:11"},"nodeType":"YulFunctionCall","src":"2698:40:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2686:3:11"},"nodeType":"YulFunctionCall","src":"2686:53:11"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2672:10:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"2798:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2800:16:11"},"nodeType":"YulFunctionCall","src":"2800:18:11"},"nodeType":"YulExpressionStatement","src":"2800:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2757:10:11"},{"name":"_2","nodeType":"YulIdentifier","src":"2769:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2754:2:11"},"nodeType":"YulFunctionCall","src":"2754:18:11"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2777:10:11"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2789:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2774:2:11"},"nodeType":"YulFunctionCall","src":"2774:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2751:2:11"},"nodeType":"YulFunctionCall","src":"2751:46:11"},"nodeType":"YulIf","src":"2748:72:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2836:2:11","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2840:10:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2829:6:11"},"nodeType":"YulFunctionCall","src":"2829:22:11"},"nodeType":"YulExpressionStatement","src":"2829:22:11"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2867:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"2875:2:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:11"},"nodeType":"YulFunctionCall","src":"2860:18:11"},"nodeType":"YulExpressionStatement","src":"2860:18:11"},{"body":{"nodeType":"YulBlock","src":"2926:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2935:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2938:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2928:6:11"},"nodeType":"YulFunctionCall","src":"2928:12:11"},"nodeType":"YulExpressionStatement","src":"2928:12:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2901:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"2909:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2897:3:11"},"nodeType":"YulFunctionCall","src":"2897:15:11"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2893:3:11"},"nodeType":"YulFunctionCall","src":"2893:26:11"},{"name":"end","nodeType":"YulIdentifier","src":"2921:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2890:2:11"},"nodeType":"YulFunctionCall","src":"2890:35:11"},"nodeType":"YulIf","src":"2887:55:11"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2968:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2976:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:11"},"nodeType":"YulFunctionCall","src":"2964:17:11"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2987:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"2995:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2983:3:11"},"nodeType":"YulFunctionCall","src":"2983:17:11"},{"name":"_1","nodeType":"YulIdentifier","src":"3002:2:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2951:12:11"},"nodeType":"YulFunctionCall","src":"2951:54:11"},"nodeType":"YulExpressionStatement","src":"2951:54:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3029:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"3037:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3025:3:11"},"nodeType":"YulFunctionCall","src":"3025:15:11"},{"kind":"number","nodeType":"YulLiteral","src":"3042:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3021:3:11"},"nodeType":"YulFunctionCall","src":"3021:26:11"},{"kind":"number","nodeType":"YulLiteral","src":"3049:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3014:6:11"},"nodeType":"YulFunctionCall","src":"3014:37:11"},"nodeType":"YulExpressionStatement","src":"3014:37:11"},{"nodeType":"YulAssignment","src":"3060:15:11","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3069:6:11"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3060:5:11"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2389:6:11","type":""},{"name":"end","nodeType":"YulTypedName","src":"2397:3:11","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2405:5:11","type":""}],"src":"2363:718:11"},{"body":{"nodeType":"YulBlock","src":"3198:348:11","statements":[{"body":{"nodeType":"YulBlock","src":"3244:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3253:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3256:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3246:6:11"},"nodeType":"YulFunctionCall","src":"3246:12:11"},"nodeType":"YulExpressionStatement","src":"3246:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3219:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"3228:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3215:3:11"},"nodeType":"YulFunctionCall","src":"3215:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"3240:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3211:3:11"},"nodeType":"YulFunctionCall","src":"3211:32:11"},"nodeType":"YulIf","src":"3208:52:11"},{"nodeType":"YulAssignment","src":"3269:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3297:9:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"3279:17:11"},"nodeType":"YulFunctionCall","src":"3279:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3269:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"3316:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3347:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3358:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3343:3:11"},"nodeType":"YulFunctionCall","src":"3343:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3330:12:11"},"nodeType":"YulFunctionCall","src":"3330:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3320:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3405:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3414:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3417:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3407:6:11"},"nodeType":"YulFunctionCall","src":"3407:12:11"},"nodeType":"YulExpressionStatement","src":"3407:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3377:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3385:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3374:2:11"},"nodeType":"YulFunctionCall","src":"3374:30:11"},"nodeType":"YulIf","src":"3371:50:11"},{"nodeType":"YulAssignment","src":"3430:59:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3461:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"3472:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3457:3:11"},"nodeType":"YulFunctionCall","src":"3457:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3481:7:11"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"3440:16:11"},"nodeType":"YulFunctionCall","src":"3440:49:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3430:6:11"}]},{"nodeType":"YulAssignment","src":"3498:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3525:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"3536:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3521:3:11"},"nodeType":"YulFunctionCall","src":"3521:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3508:12:11"},"nodeType":"YulFunctionCall","src":"3508:32:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3498:6:11"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3148:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3159:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3171:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3179:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3187:6:11","type":""}],"src":"3086:460:11"},{"body":{"nodeType":"YulBlock","src":"3600:373:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3610:26:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3630:5:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3624:5:11"},"nodeType":"YulFunctionCall","src":"3624:12:11"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3614:6:11","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3652:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3657:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3645:6:11"},"nodeType":"YulFunctionCall","src":"3645:19:11"},"nodeType":"YulExpressionStatement","src":"3645:19:11"},{"nodeType":"YulVariableDeclaration","src":"3673:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3682:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3677:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"3744:110:11","statements":[{"nodeType":"YulVariableDeclaration","src":"3758:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"3768:4:11","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3762:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3800:3:11"},{"name":"i","nodeType":"YulIdentifier","src":"3805:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3796:3:11"},"nodeType":"YulFunctionCall","src":"3796:11:11"},{"name":"_1","nodeType":"YulIdentifier","src":"3809:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3792:3:11"},"nodeType":"YulFunctionCall","src":"3792:20:11"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3828:5:11"},{"name":"i","nodeType":"YulIdentifier","src":"3835:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3824:3:11"},"nodeType":"YulFunctionCall","src":"3824:13:11"},{"name":"_1","nodeType":"YulIdentifier","src":"3839:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3820:3:11"},"nodeType":"YulFunctionCall","src":"3820:22:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3814:5:11"},"nodeType":"YulFunctionCall","src":"3814:29:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3785:6:11"},"nodeType":"YulFunctionCall","src":"3785:59:11"},"nodeType":"YulExpressionStatement","src":"3785:59:11"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3703:1:11"},{"name":"length","nodeType":"YulIdentifier","src":"3706:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3700:2:11"},"nodeType":"YulFunctionCall","src":"3700:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3714:21:11","statements":[{"nodeType":"YulAssignment","src":"3716:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3725:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"3728:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3721:3:11"},"nodeType":"YulFunctionCall","src":"3721:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3716:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"3696:3:11","statements":[]},"src":"3692:162:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3878:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"3883:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3874:3:11"},"nodeType":"YulFunctionCall","src":"3874:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"3892:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3870:3:11"},"nodeType":"YulFunctionCall","src":"3870:27:11"},{"kind":"number","nodeType":"YulLiteral","src":"3899:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3863:6:11"},"nodeType":"YulFunctionCall","src":"3863:38:11"},"nodeType":"YulExpressionStatement","src":"3863:38:11"},{"nodeType":"YulAssignment","src":"3910:57:11","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3925:3:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3938:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"3946:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3934:3:11"},"nodeType":"YulFunctionCall","src":"3934:15:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3955:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3951:3:11"},"nodeType":"YulFunctionCall","src":"3951:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3930:3:11"},"nodeType":"YulFunctionCall","src":"3930:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3921:3:11"},"nodeType":"YulFunctionCall","src":"3921:39:11"},{"kind":"number","nodeType":"YulLiteral","src":"3962:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3917:3:11"},"nodeType":"YulFunctionCall","src":"3917:50:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3910:3:11"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3577:5:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3584:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3592:3:11","type":""}],"src":"3551:422:11"},{"body":{"nodeType":"YulBlock","src":"4151:235:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4168:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4183:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4199:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4204:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4195:3:11"},"nodeType":"YulFunctionCall","src":"4195:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"4208:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4191:3:11"},"nodeType":"YulFunctionCall","src":"4191:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4179:3:11"},"nodeType":"YulFunctionCall","src":"4179:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4161:6:11"},"nodeType":"YulFunctionCall","src":"4161:51:11"},"nodeType":"YulExpressionStatement","src":"4161:51:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4232:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4243:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4228:3:11"},"nodeType":"YulFunctionCall","src":"4228:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4252:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"4260:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4248:3:11"},"nodeType":"YulFunctionCall","src":"4248:31:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4221:6:11"},"nodeType":"YulFunctionCall","src":"4221:59:11"},"nodeType":"YulExpressionStatement","src":"4221:59:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4300:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4311:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4296:3:11"},"nodeType":"YulFunctionCall","src":"4296:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"4316:2:11","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4289:6:11"},"nodeType":"YulFunctionCall","src":"4289:30:11"},"nodeType":"YulExpressionStatement","src":"4289:30:11"},{"nodeType":"YulAssignment","src":"4328:52:11","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4353:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4365:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4376:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4361:3:11"},"nodeType":"YulFunctionCall","src":"4361:18:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"4336:16:11"},"nodeType":"YulFunctionCall","src":"4336:44:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4328:4:11"}]}]},"name":"abi_encode_tuple_t_address_t_uint64_t_bytes_memory_ptr__to_t_address_t_uint64_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4104:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4115:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4123:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4131:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4142:4:11","type":""}],"src":"3978:408:11"},{"body":{"nodeType":"YulBlock","src":"4478:161:11","statements":[{"body":{"nodeType":"YulBlock","src":"4524:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4533:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4536:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4526:6:11"},"nodeType":"YulFunctionCall","src":"4526:12:11"},"nodeType":"YulExpressionStatement","src":"4526:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4499:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"4508:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4495:3:11"},"nodeType":"YulFunctionCall","src":"4495:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"4520:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4491:3:11"},"nodeType":"YulFunctionCall","src":"4491:32:11"},"nodeType":"YulIf","src":"4488:52:11"},{"nodeType":"YulAssignment","src":"4549:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4572:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4559:12:11"},"nodeType":"YulFunctionCall","src":"4559:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4549:6:11"}]},{"nodeType":"YulAssignment","src":"4591:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4618:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4629:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4614:3:11"},"nodeType":"YulFunctionCall","src":"4614:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4601:12:11"},"nodeType":"YulFunctionCall","src":"4601:32:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4591:6:11"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4436:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4447:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4459:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4467:6:11","type":""}],"src":"4391:248:11"},{"body":{"nodeType":"YulBlock","src":"4763:98:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4780:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4791:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4773:6:11"},"nodeType":"YulFunctionCall","src":"4773:21:11"},"nodeType":"YulExpressionStatement","src":"4773:21:11"},{"nodeType":"YulAssignment","src":"4803:52:11","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4828:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4840:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"4851:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4836:3:11"},"nodeType":"YulFunctionCall","src":"4836:18:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"4811:16:11"},"nodeType":"YulFunctionCall","src":"4811:44:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4803:4:11"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4732:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4743:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4754:4:11","type":""}],"src":"4644:217:11"},{"body":{"nodeType":"YulBlock","src":"4915:139:11","statements":[{"nodeType":"YulAssignment","src":"4925:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4947:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4934:12:11"},"nodeType":"YulFunctionCall","src":"4934:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4925:5:11"}]},{"body":{"nodeType":"YulBlock","src":"5032:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5041:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5044:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5034:6:11"},"nodeType":"YulFunctionCall","src":"5034:12:11"},"nodeType":"YulExpressionStatement","src":"5034:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4976:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4987:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"4994:34:11","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4983:3:11"},"nodeType":"YulFunctionCall","src":"4983:46:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4973:2:11"},"nodeType":"YulFunctionCall","src":"4973:57:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4966:6:11"},"nodeType":"YulFunctionCall","src":"4966:65:11"},"nodeType":"YulIf","src":"4963:85:11"}]},"name":"abi_decode_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4894:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4905:5:11","type":""}],"src":"4866:188:11"},{"body":{"nodeType":"YulBlock","src":"5107:123:11","statements":[{"nodeType":"YulAssignment","src":"5117:29:11","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5139:6:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5126:12:11"},"nodeType":"YulFunctionCall","src":"5126:20:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5117:5:11"}]},{"body":{"nodeType":"YulBlock","src":"5208:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5217:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5220:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5210:6:11"},"nodeType":"YulFunctionCall","src":"5210:12:11"},"nodeType":"YulExpressionStatement","src":"5210:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5168:5:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5179:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"5186:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5175:3:11"},"nodeType":"YulFunctionCall","src":"5175:30:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5165:2:11"},"nodeType":"YulFunctionCall","src":"5165:41:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5158:6:11"},"nodeType":"YulFunctionCall","src":"5158:49:11"},"nodeType":"YulIf","src":"5155:69:11"}]},"name":"abi_decode_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5086:6:11","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5097:5:11","type":""}],"src":"5059:171:11"},{"body":{"nodeType":"YulBlock","src":"5371:344:11","statements":[{"body":{"nodeType":"YulBlock","src":"5418:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5427:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5430:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5420:6:11"},"nodeType":"YulFunctionCall","src":"5420:12:11"},"nodeType":"YulExpressionStatement","src":"5420:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5392:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5401:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5388:3:11"},"nodeType":"YulFunctionCall","src":"5388:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5413:3:11","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5384:3:11"},"nodeType":"YulFunctionCall","src":"5384:33:11"},"nodeType":"YulIf","src":"5381:53:11"},{"nodeType":"YulAssignment","src":"5443:39:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5472:9:11"}],"functionName":{"name":"abi_decode_uint128","nodeType":"YulIdentifier","src":"5453:18:11"},"nodeType":"YulFunctionCall","src":"5453:29:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5443:6:11"}]},{"nodeType":"YulAssignment","src":"5491:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5524:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5535:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5520:3:11"},"nodeType":"YulFunctionCall","src":"5520:18:11"}],"functionName":{"name":"abi_decode_uint128","nodeType":"YulIdentifier","src":"5501:18:11"},"nodeType":"YulFunctionCall","src":"5501:38:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5491:6:11"}]},{"nodeType":"YulAssignment","src":"5548:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5581:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5592:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5577:3:11"},"nodeType":"YulFunctionCall","src":"5577:18:11"}],"functionName":{"name":"abi_decode_uint128","nodeType":"YulIdentifier","src":"5558:18:11"},"nodeType":"YulFunctionCall","src":"5558:38:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5548:6:11"}]},{"nodeType":"YulAssignment","src":"5605:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5637:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5648:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5633:3:11"},"nodeType":"YulFunctionCall","src":"5633:18:11"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"5615:17:11"},"nodeType":"YulFunctionCall","src":"5615:37:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5605:6:11"}]},{"nodeType":"YulAssignment","src":"5661:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5693:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"5704:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5689:3:11"},"nodeType":"YulFunctionCall","src":"5689:19:11"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"5671:17:11"},"nodeType":"YulFunctionCall","src":"5671:38:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5661:6:11"}]}]},"name":"abi_decode_tuple_t_uint128t_uint128t_uint128t_uint64t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5305:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5316:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5328:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5336:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5344:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5352:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5360:6:11","type":""}],"src":"5235:480:11"},{"body":{"nodeType":"YulBlock","src":"5872:765:11","statements":[{"body":{"nodeType":"YulBlock","src":"5919:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5928:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5931:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5921:6:11"},"nodeType":"YulFunctionCall","src":"5921:12:11"},"nodeType":"YulExpressionStatement","src":"5921:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5893:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"5902:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5889:3:11"},"nodeType":"YulFunctionCall","src":"5889:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"5914:3:11","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5885:3:11"},"nodeType":"YulFunctionCall","src":"5885:33:11"},"nodeType":"YulIf","src":"5882:53:11"},{"nodeType":"YulAssignment","src":"5944:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5972:9:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"5954:17:11"},"nodeType":"YulFunctionCall","src":"5954:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5944:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"5991:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6021:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6032:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6017:3:11"},"nodeType":"YulFunctionCall","src":"6017:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6004:12:11"},"nodeType":"YulFunctionCall","src":"6004:32:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5995:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6070:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6045:24:11"},"nodeType":"YulFunctionCall","src":"6045:31:11"},"nodeType":"YulExpressionStatement","src":"6045:31:11"},{"nodeType":"YulAssignment","src":"6085:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"6095:5:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6085:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"6109:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6140:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6151:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6136:3:11"},"nodeType":"YulFunctionCall","src":"6136:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6123:12:11"},"nodeType":"YulFunctionCall","src":"6123:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6113:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6164:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"6174:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6168:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6219:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6228:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6231:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6221:6:11"},"nodeType":"YulFunctionCall","src":"6221:12:11"},"nodeType":"YulExpressionStatement","src":"6221:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6207:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6215:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6204:2:11"},"nodeType":"YulFunctionCall","src":"6204:14:11"},"nodeType":"YulIf","src":"6201:34:11"},{"nodeType":"YulAssignment","src":"6244:59:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6275:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"6286:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6271:3:11"},"nodeType":"YulFunctionCall","src":"6271:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6295:7:11"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6254:16:11"},"nodeType":"YulFunctionCall","src":"6254:49:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6244:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"6312:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6344:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6355:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6340:3:11"},"nodeType":"YulFunctionCall","src":"6340:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6327:12:11"},"nodeType":"YulFunctionCall","src":"6327:32:11"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6316:7:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6416:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6425:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6428:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6418:6:11"},"nodeType":"YulFunctionCall","src":"6418:12:11"},"nodeType":"YulExpressionStatement","src":"6418:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6381:7:11"},{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6404:7:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6397:6:11"},"nodeType":"YulFunctionCall","src":"6397:15:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6390:6:11"},"nodeType":"YulFunctionCall","src":"6390:23:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6378:2:11"},"nodeType":"YulFunctionCall","src":"6378:36:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6371:6:11"},"nodeType":"YulFunctionCall","src":"6371:44:11"},"nodeType":"YulIf","src":"6368:64:11"},{"nodeType":"YulAssignment","src":"6441:17:11","value":{"name":"value_1","nodeType":"YulIdentifier","src":"6451:7:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6441:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"6467:49:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6500:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6511:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6496:3:11"},"nodeType":"YulFunctionCall","src":"6496:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6483:12:11"},"nodeType":"YulFunctionCall","src":"6483:33:11"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6471:8:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"6545:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6554:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6557:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6547:6:11"},"nodeType":"YulFunctionCall","src":"6547:12:11"},"nodeType":"YulExpressionStatement","src":"6547:12:11"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6531:8:11"},{"name":"_1","nodeType":"YulIdentifier","src":"6541:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6528:2:11"},"nodeType":"YulFunctionCall","src":"6528:16:11"},"nodeType":"YulIf","src":"6525:36:11"},{"nodeType":"YulAssignment","src":"6570:61:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6601:9:11"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6612:8:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6597:3:11"},"nodeType":"YulFunctionCall","src":"6597:24:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6623:7:11"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6580:16:11"},"nodeType":"YulFunctionCall","src":"6580:51:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6570:6:11"}]}]},"name":"abi_decode_tuple_t_uint16t_addresst_bytes_memory_ptrt_boolt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5806:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5817:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5829:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5837:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5845:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5853:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5861:6:11","type":""}],"src":"5720:917:11"},{"body":{"nodeType":"YulBlock","src":"6743:102:11","statements":[{"nodeType":"YulAssignment","src":"6753:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6765:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"6776:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6761:3:11"},"nodeType":"YulFunctionCall","src":"6761:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6753:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6795:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6810:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6826:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6831:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6822:3:11"},"nodeType":"YulFunctionCall","src":"6822:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"6835:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6818:3:11"},"nodeType":"YulFunctionCall","src":"6818:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6806:3:11"},"nodeType":"YulFunctionCall","src":"6806:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6788:6:11"},"nodeType":"YulFunctionCall","src":"6788:51:11"},"nodeType":"YulExpressionStatement","src":"6788:51:11"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6712:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6723:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6734:4:11","type":""}],"src":"6642:203:11"},{"body":{"nodeType":"YulBlock","src":"6945:297:11","statements":[{"body":{"nodeType":"YulBlock","src":"6991:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7000:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7003:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6993:6:11"},"nodeType":"YulFunctionCall","src":"6993:12:11"},"nodeType":"YulExpressionStatement","src":"6993:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6966:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"6975:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6962:3:11"},"nodeType":"YulFunctionCall","src":"6962:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"6987:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6958:3:11"},"nodeType":"YulFunctionCall","src":"6958:32:11"},"nodeType":"YulIf","src":"6955:52:11"},{"nodeType":"YulAssignment","src":"7016:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7044:9:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7026:17:11"},"nodeType":"YulFunctionCall","src":"7026:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7016:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"7063:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7094:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7105:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7090:3:11"},"nodeType":"YulFunctionCall","src":"7090:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7077:12:11"},"nodeType":"YulFunctionCall","src":"7077:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7067:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"7152:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7161:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7164:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7154:6:11"},"nodeType":"YulFunctionCall","src":"7154:12:11"},"nodeType":"YulExpressionStatement","src":"7154:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7124:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7132:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7121:2:11"},"nodeType":"YulFunctionCall","src":"7121:30:11"},"nodeType":"YulIf","src":"7118:50:11"},{"nodeType":"YulAssignment","src":"7177:59:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7208:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"7219:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7204:3:11"},"nodeType":"YulFunctionCall","src":"7204:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7228:7:11"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"7187:16:11"},"nodeType":"YulFunctionCall","src":"7187:49:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7177:6:11"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6903:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6914:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6926:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6934:6:11","type":""}],"src":"6850:392:11"},{"body":{"nodeType":"YulBlock","src":"7402:213:11","statements":[{"nodeType":"YulAssignment","src":"7412:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7424:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7435:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7420:3:11"},"nodeType":"YulFunctionCall","src":"7420:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7454:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7469:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"7477:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7465:3:11"},"nodeType":"YulFunctionCall","src":"7465:31:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7447:6:11"},"nodeType":"YulFunctionCall","src":"7447:50:11"},"nodeType":"YulExpressionStatement","src":"7447:50:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7517:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7528:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7513:3:11"},"nodeType":"YulFunctionCall","src":"7513:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7537:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7553:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7558:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7549:3:11"},"nodeType":"YulFunctionCall","src":"7549:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"7562:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7545:3:11"},"nodeType":"YulFunctionCall","src":"7545:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7533:3:11"},"nodeType":"YulFunctionCall","src":"7533:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7506:6:11"},"nodeType":"YulFunctionCall","src":"7506:60:11"},"nodeType":"YulExpressionStatement","src":"7506:60:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7586:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7597:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7582:3:11"},"nodeType":"YulFunctionCall","src":"7582:18:11"},{"name":"value2","nodeType":"YulIdentifier","src":"7602:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7575:6:11"},"nodeType":"YulFunctionCall","src":"7575:34:11"},"nodeType":"YulExpressionStatement","src":"7575:34:11"}]},"name":"abi_encode_tuple_t_uint64_t_address_t_bytes32__to_t_uint64_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7355:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7366:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7374:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7382:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7393:4:11","type":""}],"src":"7247:368:11"},{"body":{"nodeType":"YulBlock","src":"7706:233:11","statements":[{"body":{"nodeType":"YulBlock","src":"7752:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7761:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7764:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7754:6:11"},"nodeType":"YulFunctionCall","src":"7754:12:11"},"nodeType":"YulExpressionStatement","src":"7754:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7727:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"7736:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7723:3:11"},"nodeType":"YulFunctionCall","src":"7723:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"7748:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7719:3:11"},"nodeType":"YulFunctionCall","src":"7719:32:11"},"nodeType":"YulIf","src":"7716:52:11"},{"nodeType":"YulAssignment","src":"7777:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7805:9:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"7787:17:11"},"nodeType":"YulFunctionCall","src":"7787:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7777:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"7824:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7854:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"7865:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7850:3:11"},"nodeType":"YulFunctionCall","src":"7850:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7837:12:11"},"nodeType":"YulFunctionCall","src":"7837:32:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7828:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7903:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7878:24:11"},"nodeType":"YulFunctionCall","src":"7878:31:11"},"nodeType":"YulExpressionStatement","src":"7878:31:11"},{"nodeType":"YulAssignment","src":"7918:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"7928:5:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7918:6:11"}]}]},"name":"abi_decode_tuple_t_uint16t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7664:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7675:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7687:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7695:6:11","type":""}],"src":"7620:319:11"},{"body":{"nodeType":"YulBlock","src":"8043:101:11","statements":[{"nodeType":"YulAssignment","src":"8053:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8065:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8076:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8061:3:11"},"nodeType":"YulFunctionCall","src":"8061:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8053:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8095:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8110:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"8118:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8106:3:11"},"nodeType":"YulFunctionCall","src":"8106:31:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8088:6:11"},"nodeType":"YulFunctionCall","src":"8088:50:11"},"nodeType":"YulExpressionStatement","src":"8088:50:11"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8012:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8023:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8034:4:11","type":""}],"src":"7944:200:11"},{"body":{"nodeType":"YulBlock","src":"8250:76:11","statements":[{"nodeType":"YulAssignment","src":"8260:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8272:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8283:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8268:3:11"},"nodeType":"YulFunctionCall","src":"8268:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8260:4:11"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8302:9:11"},{"name":"value0","nodeType":"YulIdentifier","src":"8313:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8295:6:11"},"nodeType":"YulFunctionCall","src":"8295:25:11"},"nodeType":"YulExpressionStatement","src":"8295:25:11"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8219:9:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8230:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8241:4:11","type":""}],"src":"8149:177:11"},{"body":{"nodeType":"YulBlock","src":"8540:385:11","statements":[{"nodeType":"YulAssignment","src":"8550:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8562:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8573:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8558:3:11"},"nodeType":"YulFunctionCall","src":"8558:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8550:4:11"}]},{"nodeType":"YulVariableDeclaration","src":"8586:44:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8596:34:11","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8590:2:11","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8646:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8661:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"8669:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8657:3:11"},"nodeType":"YulFunctionCall","src":"8657:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8639:6:11"},"nodeType":"YulFunctionCall","src":"8639:34:11"},"nodeType":"YulExpressionStatement","src":"8639:34:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8693:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8704:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8689:3:11"},"nodeType":"YulFunctionCall","src":"8689:18:11"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8713:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"8721:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8709:3:11"},"nodeType":"YulFunctionCall","src":"8709:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8682:6:11"},"nodeType":"YulFunctionCall","src":"8682:43:11"},"nodeType":"YulExpressionStatement","src":"8682:43:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8745:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8756:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8741:3:11"},"nodeType":"YulFunctionCall","src":"8741:18:11"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8765:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"8773:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8761:3:11"},"nodeType":"YulFunctionCall","src":"8761:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8734:6:11"},"nodeType":"YulFunctionCall","src":"8734:43:11"},"nodeType":"YulExpressionStatement","src":"8734:43:11"},{"nodeType":"YulVariableDeclaration","src":"8786:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"8796:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8790:2:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8834:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8845:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8830:3:11"},"nodeType":"YulFunctionCall","src":"8830:18:11"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8854:6:11"},{"name":"_2","nodeType":"YulIdentifier","src":"8862:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8850:3:11"},"nodeType":"YulFunctionCall","src":"8850:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8823:6:11"},"nodeType":"YulFunctionCall","src":"8823:43:11"},"nodeType":"YulExpressionStatement","src":"8823:43:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8886:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"8897:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8882:3:11"},"nodeType":"YulFunctionCall","src":"8882:19:11"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8907:6:11"},{"name":"_2","nodeType":"YulIdentifier","src":"8915:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8903:3:11"},"nodeType":"YulFunctionCall","src":"8903:15:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8875:6:11"},"nodeType":"YulFunctionCall","src":"8875:44:11"},"nodeType":"YulExpressionStatement","src":"8875:44:11"}]},"name":"abi_encode_tuple_t_uint128_t_uint128_t_uint128_t_uint64_t_uint64__to_t_uint128_t_uint128_t_uint128_t_uint64_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8477:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8488:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8496:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8504:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8512:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8520:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8531:4:11","type":""}],"src":"8331:594:11"},{"body":{"nodeType":"YulBlock","src":"9071:648:11","statements":[{"body":{"nodeType":"YulBlock","src":"9117:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9126:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9129:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9119:6:11"},"nodeType":"YulFunctionCall","src":"9119:12:11"},"nodeType":"YulExpressionStatement","src":"9119:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9092:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9101:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9088:3:11"},"nodeType":"YulFunctionCall","src":"9088:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"9113:2:11","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9084:3:11"},"nodeType":"YulFunctionCall","src":"9084:32:11"},"nodeType":"YulIf","src":"9081:52:11"},{"nodeType":"YulAssignment","src":"9142:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9170:9:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"9152:17:11"},"nodeType":"YulFunctionCall","src":"9152:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9142:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"9189:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9220:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9231:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9216:3:11"},"nodeType":"YulFunctionCall","src":"9216:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9203:12:11"},"nodeType":"YulFunctionCall","src":"9203:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9193:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9244:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"9254:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9248:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"9299:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9308:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9311:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9301:6:11"},"nodeType":"YulFunctionCall","src":"9301:12:11"},"nodeType":"YulExpressionStatement","src":"9301:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9287:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"9295:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9284:2:11"},"nodeType":"YulFunctionCall","src":"9284:14:11"},"nodeType":"YulIf","src":"9281:34:11"},{"nodeType":"YulVariableDeclaration","src":"9324:84:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9380:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"9391:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9376:3:11"},"nodeType":"YulFunctionCall","src":"9376:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9400:7:11"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"9350:25:11"},"nodeType":"YulFunctionCall","src":"9350:58:11"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"9328:8:11","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"9338:8:11","type":""}]},{"nodeType":"YulAssignment","src":"9417:18:11","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"9427:8:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9417:6:11"}]},{"nodeType":"YulAssignment","src":"9444:18:11","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"9454:8:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9444:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"9471:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9504:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"9515:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9500:3:11"},"nodeType":"YulFunctionCall","src":"9500:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9487:12:11"},"nodeType":"YulFunctionCall","src":"9487:32:11"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"9475:8:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"9548:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9557:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9560:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9550:6:11"},"nodeType":"YulFunctionCall","src":"9550:12:11"},"nodeType":"YulExpressionStatement","src":"9550:12:11"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"9534:8:11"},{"name":"_1","nodeType":"YulIdentifier","src":"9544:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9531:2:11"},"nodeType":"YulFunctionCall","src":"9531:16:11"},"nodeType":"YulIf","src":"9528:36:11"},{"nodeType":"YulVariableDeclaration","src":"9573:86:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9629:9:11"},{"name":"offset_1","nodeType":"YulIdentifier","src":"9640:8:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9625:3:11"},"nodeType":"YulFunctionCall","src":"9625:24:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9651:7:11"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"9599:25:11"},"nodeType":"YulFunctionCall","src":"9599:60:11"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"9577:8:11","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"9587:8:11","type":""}]},{"nodeType":"YulAssignment","src":"9668:18:11","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"9678:8:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9668:6:11"}]},{"nodeType":"YulAssignment","src":"9695:18:11","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"9705:8:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9695:6:11"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9005:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9016:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9028:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9036:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9044:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9052:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9060:6:11","type":""}],"src":"8930:789:11"},{"body":{"nodeType":"YulBlock","src":"9794:110:11","statements":[{"body":{"nodeType":"YulBlock","src":"9840:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9849:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9852:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9842:6:11"},"nodeType":"YulFunctionCall","src":"9842:12:11"},"nodeType":"YulExpressionStatement","src":"9842:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9815:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"9824:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9811:3:11"},"nodeType":"YulFunctionCall","src":"9811:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"9836:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9807:3:11"},"nodeType":"YulFunctionCall","src":"9807:32:11"},"nodeType":"YulIf","src":"9804:52:11"},{"nodeType":"YulAssignment","src":"9865:33:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9888:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9875:12:11"},"nodeType":"YulFunctionCall","src":"9875:23:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9865:6:11"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9760:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9771:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9783:6:11","type":""}],"src":"9724:180:11"},{"body":{"nodeType":"YulBlock","src":"9996:301:11","statements":[{"body":{"nodeType":"YulBlock","src":"10042:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10051:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10054:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10044:6:11"},"nodeType":"YulFunctionCall","src":"10044:12:11"},"nodeType":"YulExpressionStatement","src":"10044:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10017:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10026:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10013:3:11"},"nodeType":"YulFunctionCall","src":"10013:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"10038:2:11","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10009:3:11"},"nodeType":"YulFunctionCall","src":"10009:32:11"},"nodeType":"YulIf","src":"10006:52:11"},{"nodeType":"YulVariableDeclaration","src":"10067:36:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10093:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10080:12:11"},"nodeType":"YulFunctionCall","src":"10080:23:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10071:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10137:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10112:24:11"},"nodeType":"YulFunctionCall","src":"10112:31:11"},"nodeType":"YulExpressionStatement","src":"10112:31:11"},{"nodeType":"YulAssignment","src":"10152:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"10162:5:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10152:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"10176:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10208:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10219:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10204:3:11"},"nodeType":"YulFunctionCall","src":"10204:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10191:12:11"},"nodeType":"YulFunctionCall","src":"10191:32:11"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"10180:7:11","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"10257:7:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10232:24:11"},"nodeType":"YulFunctionCall","src":"10232:33:11"},"nodeType":"YulExpressionStatement","src":"10232:33:11"},{"nodeType":"YulAssignment","src":"10274:17:11","value":{"name":"value_1","nodeType":"YulIdentifier","src":"10284:7:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10274:6:11"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9954:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9965:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9977:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9985:6:11","type":""}],"src":"9909:388:11"},{"body":{"nodeType":"YulBlock","src":"10493:876:11","statements":[{"body":{"nodeType":"YulBlock","src":"10540:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10549:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10552:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10542:6:11"},"nodeType":"YulFunctionCall","src":"10542:12:11"},"nodeType":"YulExpressionStatement","src":"10542:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10514:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"10523:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10510:3:11"},"nodeType":"YulFunctionCall","src":"10510:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"10535:3:11","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10506:3:11"},"nodeType":"YulFunctionCall","src":"10506:33:11"},"nodeType":"YulIf","src":"10503:53:11"},{"nodeType":"YulAssignment","src":"10565:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10593:9:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"10575:17:11"},"nodeType":"YulFunctionCall","src":"10575:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10565:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"10612:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10643:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10654:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10639:3:11"},"nodeType":"YulFunctionCall","src":"10639:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10626:12:11"},"nodeType":"YulFunctionCall","src":"10626:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10616:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10667:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"10677:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10671:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"10722:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10731:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10734:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10724:6:11"},"nodeType":"YulFunctionCall","src":"10724:12:11"},"nodeType":"YulExpressionStatement","src":"10724:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10710:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"10718:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10707:2:11"},"nodeType":"YulFunctionCall","src":"10707:14:11"},"nodeType":"YulIf","src":"10704:34:11"},{"nodeType":"YulVariableDeclaration","src":"10747:84:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10803:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"10814:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10799:3:11"},"nodeType":"YulFunctionCall","src":"10799:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10823:7:11"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"10773:25:11"},"nodeType":"YulFunctionCall","src":"10773:58:11"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"10751:8:11","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"10761:8:11","type":""}]},{"nodeType":"YulAssignment","src":"10840:18:11","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"10850:8:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10840:6:11"}]},{"nodeType":"YulAssignment","src":"10867:18:11","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"10877:8:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10867:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"10894:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10924:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"10935:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10920:3:11"},"nodeType":"YulFunctionCall","src":"10920:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10907:12:11"},"nodeType":"YulFunctionCall","src":"10907:32:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10898:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10973:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10948:24:11"},"nodeType":"YulFunctionCall","src":"10948:31:11"},"nodeType":"YulExpressionStatement","src":"10948:31:11"},{"nodeType":"YulAssignment","src":"10988:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"10998:5:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10988:6:11"}]},{"nodeType":"YulAssignment","src":"11012:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11044:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11055:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11040:3:11"},"nodeType":"YulFunctionCall","src":"11040:18:11"}],"functionName":{"name":"abi_decode_uint64","nodeType":"YulIdentifier","src":"11022:17:11"},"nodeType":"YulFunctionCall","src":"11022:37:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11012:6:11"}]},{"nodeType":"YulAssignment","src":"11068:43:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11095:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11106:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11091:3:11"},"nodeType":"YulFunctionCall","src":"11091:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11078:12:11"},"nodeType":"YulFunctionCall","src":"11078:33:11"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"11068:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"11120:49:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11153:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11164:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11149:3:11"},"nodeType":"YulFunctionCall","src":"11149:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11136:12:11"},"nodeType":"YulFunctionCall","src":"11136:33:11"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"11124:8:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11198:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11207:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11210:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11200:6:11"},"nodeType":"YulFunctionCall","src":"11200:12:11"},"nodeType":"YulExpressionStatement","src":"11200:12:11"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"11184:8:11"},{"name":"_1","nodeType":"YulIdentifier","src":"11194:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11181:2:11"},"nodeType":"YulFunctionCall","src":"11181:16:11"},"nodeType":"YulIf","src":"11178:36:11"},{"nodeType":"YulVariableDeclaration","src":"11223:86:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11279:9:11"},{"name":"offset_1","nodeType":"YulIdentifier","src":"11290:8:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11275:3:11"},"nodeType":"YulFunctionCall","src":"11275:24:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11301:7:11"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"11249:25:11"},"nodeType":"YulFunctionCall","src":"11249:60:11"},"variables":[{"name":"value6_1","nodeType":"YulTypedName","src":"11227:8:11","type":""},{"name":"value7_1","nodeType":"YulTypedName","src":"11237:8:11","type":""}]},{"nodeType":"YulAssignment","src":"11318:18:11","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"11328:8:11"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"11318:6:11"}]},{"nodeType":"YulAssignment","src":"11345:18:11","value":{"name":"value7_1","nodeType":"YulIdentifier","src":"11355:8:11"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"11345:6:11"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_addresst_uint64t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10403:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10414:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10426:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10434:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10442:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10450:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10458:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10466:6:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10474:6:11","type":""},{"name":"value7","nodeType":"YulTypedName","src":"10482:6:11","type":""}],"src":"10302:1067:11"},{"body":{"nodeType":"YulBlock","src":"11573:986:11","statements":[{"body":{"nodeType":"YulBlock","src":"11620:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11629:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11632:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11622:6:11"},"nodeType":"YulFunctionCall","src":"11622:12:11"},"nodeType":"YulExpressionStatement","src":"11622:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11594:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"11603:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11590:3:11"},"nodeType":"YulFunctionCall","src":"11590:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"11615:3:11","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11586:3:11"},"nodeType":"YulFunctionCall","src":"11586:33:11"},"nodeType":"YulIf","src":"11583:53:11"},{"nodeType":"YulAssignment","src":"11645:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11673:9:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"11655:17:11"},"nodeType":"YulFunctionCall","src":"11655:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11645:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"11692:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11723:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11734:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11719:3:11"},"nodeType":"YulFunctionCall","src":"11719:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11706:12:11"},"nodeType":"YulFunctionCall","src":"11706:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11696:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11747:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"11757:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11751:2:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11802:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11811:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11814:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11804:6:11"},"nodeType":"YulFunctionCall","src":"11804:12:11"},"nodeType":"YulExpressionStatement","src":"11804:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11790:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"11798:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11787:2:11"},"nodeType":"YulFunctionCall","src":"11787:14:11"},"nodeType":"YulIf","src":"11784:34:11"},{"nodeType":"YulAssignment","src":"11827:59:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11858:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"11869:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11854:3:11"},"nodeType":"YulFunctionCall","src":"11854:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11878:7:11"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"11837:16:11"},"nodeType":"YulFunctionCall","src":"11837:49:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11827:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"11895:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11928:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"11939:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11924:3:11"},"nodeType":"YulFunctionCall","src":"11924:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11911:12:11"},"nodeType":"YulFunctionCall","src":"11911:32:11"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"11899:8:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"11972:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11981:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11984:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11974:6:11"},"nodeType":"YulFunctionCall","src":"11974:12:11"},"nodeType":"YulExpressionStatement","src":"11974:12:11"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"11958:8:11"},{"name":"_1","nodeType":"YulIdentifier","src":"11968:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11955:2:11"},"nodeType":"YulFunctionCall","src":"11955:16:11"},"nodeType":"YulIf","src":"11952:36:11"},{"nodeType":"YulVariableDeclaration","src":"11997:86:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12053:9:11"},{"name":"offset_1","nodeType":"YulIdentifier","src":"12064:8:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12049:3:11"},"nodeType":"YulFunctionCall","src":"12049:24:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12075:7:11"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"12023:25:11"},"nodeType":"YulFunctionCall","src":"12023:60:11"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"12001:8:11","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"12011:8:11","type":""}]},{"nodeType":"YulAssignment","src":"12092:18:11","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"12102:8:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12092:6:11"}]},{"nodeType":"YulAssignment","src":"12119:18:11","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"12129:8:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12119:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"12146:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12176:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12187:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12172:3:11"},"nodeType":"YulFunctionCall","src":"12172:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12159:12:11"},"nodeType":"YulFunctionCall","src":"12159:32:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12150:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12225:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12200:24:11"},"nodeType":"YulFunctionCall","src":"12200:31:11"},"nodeType":"YulExpressionStatement","src":"12200:31:11"},{"nodeType":"YulAssignment","src":"12240:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"12250:5:11"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12240:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"12264:48:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12296:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12307:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12292:3:11"},"nodeType":"YulFunctionCall","src":"12292:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12279:12:11"},"nodeType":"YulFunctionCall","src":"12279:33:11"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"12268:7:11","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"12346:7:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"12321:24:11"},"nodeType":"YulFunctionCall","src":"12321:33:11"},"nodeType":"YulExpressionStatement","src":"12321:33:11"},{"nodeType":"YulAssignment","src":"12363:17:11","value":{"name":"value_1","nodeType":"YulIdentifier","src":"12373:7:11"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"12363:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"12389:49:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12422:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12433:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12418:3:11"},"nodeType":"YulFunctionCall","src":"12418:19:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12405:12:11"},"nodeType":"YulFunctionCall","src":"12405:33:11"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"12393:8:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"12467:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12476:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12479:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12469:6:11"},"nodeType":"YulFunctionCall","src":"12469:12:11"},"nodeType":"YulExpressionStatement","src":"12469:12:11"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"12453:8:11"},{"name":"_1","nodeType":"YulIdentifier","src":"12463:2:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12450:2:11"},"nodeType":"YulFunctionCall","src":"12450:16:11"},"nodeType":"YulIf","src":"12447:36:11"},{"nodeType":"YulAssignment","src":"12492:61:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12523:9:11"},{"name":"offset_2","nodeType":"YulIdentifier","src":"12534:8:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12519:3:11"},"nodeType":"YulFunctionCall","src":"12519:24:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12545:7:11"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"12502:16:11"},"nodeType":"YulFunctionCall","src":"12502:51:11"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"12492:6:11"}]}]},"name":"abi_decode_tuple_t_uint16t_bytes_memory_ptrt_bytes_calldata_ptrt_address_payablet_addresst_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11491:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11502:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11514:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11522:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11530:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11538:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11546:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11554:6:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11562:6:11","type":""}],"src":"11374:1185:11"},{"body":{"nodeType":"YulBlock","src":"12692:405:11","statements":[{"body":{"nodeType":"YulBlock","src":"12739:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12748:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12751:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12741:6:11"},"nodeType":"YulFunctionCall","src":"12741:12:11"},"nodeType":"YulExpressionStatement","src":"12741:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12713:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"12722:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12709:3:11"},"nodeType":"YulFunctionCall","src":"12709:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"12734:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12705:3:11"},"nodeType":"YulFunctionCall","src":"12705:33:11"},"nodeType":"YulIf","src":"12702:53:11"},{"nodeType":"YulAssignment","src":"12764:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12792:9:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"12774:17:11"},"nodeType":"YulFunctionCall","src":"12774:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12764:6:11"}]},{"nodeType":"YulAssignment","src":"12811:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12843:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12854:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12839:3:11"},"nodeType":"YulFunctionCall","src":"12839:18:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"12821:17:11"},"nodeType":"YulFunctionCall","src":"12821:37:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12811:6:11"}]},{"nodeType":"YulAssignment","src":"12867:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12894:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12905:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12890:3:11"},"nodeType":"YulFunctionCall","src":"12890:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12877:12:11"},"nodeType":"YulFunctionCall","src":"12877:32:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12867:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"12918:46:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12949:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"12960:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12945:3:11"},"nodeType":"YulFunctionCall","src":"12945:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12932:12:11"},"nodeType":"YulFunctionCall","src":"12932:32:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12922:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"13007:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13016:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13019:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13009:6:11"},"nodeType":"YulFunctionCall","src":"13009:12:11"},"nodeType":"YulExpressionStatement","src":"13009:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12979:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"12987:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12976:2:11"},"nodeType":"YulFunctionCall","src":"12976:30:11"},"nodeType":"YulIf","src":"12973:50:11"},{"nodeType":"YulAssignment","src":"13032:59:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13063:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"13074:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13059:3:11"},"nodeType":"YulFunctionCall","src":"13059:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13083:7:11"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"13042:16:11"},"nodeType":"YulFunctionCall","src":"13042:49:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13032:6:11"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12634:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12645:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12657:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12665:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12673:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12681:6:11","type":""}],"src":"12564:533:11"},{"body":{"nodeType":"YulBlock","src":"13221:341:11","statements":[{"body":{"nodeType":"YulBlock","src":"13268:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13277:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13280:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13270:6:11"},"nodeType":"YulFunctionCall","src":"13270:12:11"},"nodeType":"YulExpressionStatement","src":"13270:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13242:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13251:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13238:3:11"},"nodeType":"YulFunctionCall","src":"13238:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"13263:3:11","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13234:3:11"},"nodeType":"YulFunctionCall","src":"13234:33:11"},"nodeType":"YulIf","src":"13231:53:11"},{"nodeType":"YulAssignment","src":"13293:38:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13321:9:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"13303:17:11"},"nodeType":"YulFunctionCall","src":"13303:28:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13293:6:11"}]},{"nodeType":"YulAssignment","src":"13340:47:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13372:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13383:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13368:3:11"},"nodeType":"YulFunctionCall","src":"13368:18:11"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"13350:17:11"},"nodeType":"YulFunctionCall","src":"13350:37:11"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13340:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"13396:45:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13426:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13437:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13422:3:11"},"nodeType":"YulFunctionCall","src":"13422:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13409:12:11"},"nodeType":"YulFunctionCall","src":"13409:32:11"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13400:5:11","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13475:5:11"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13450:24:11"},"nodeType":"YulFunctionCall","src":"13450:31:11"},"nodeType":"YulExpressionStatement","src":"13450:31:11"},{"nodeType":"YulAssignment","src":"13490:15:11","value":{"name":"value","nodeType":"YulIdentifier","src":"13500:5:11"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"13490:6:11"}]},{"nodeType":"YulAssignment","src":"13514:42:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13541:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"13552:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13537:3:11"},"nodeType":"YulFunctionCall","src":"13537:18:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13524:12:11"},"nodeType":"YulFunctionCall","src":"13524:32:11"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13514:6:11"}]}]},"name":"abi_decode_tuple_t_uint16t_uint16t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13163:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13174:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13186:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13194:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13202:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13210:6:11","type":""}],"src":"13102:460:11"},{"body":{"nodeType":"YulBlock","src":"13646:241:11","statements":[{"body":{"nodeType":"YulBlock","src":"13692:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13701:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13704:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13694:6:11"},"nodeType":"YulFunctionCall","src":"13694:12:11"},"nodeType":"YulExpressionStatement","src":"13694:12:11"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13667:7:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"13676:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13663:3:11"},"nodeType":"YulFunctionCall","src":"13663:23:11"},{"kind":"number","nodeType":"YulLiteral","src":"13688:2:11","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13659:3:11"},"nodeType":"YulFunctionCall","src":"13659:32:11"},"nodeType":"YulIf","src":"13656:52:11"},{"nodeType":"YulVariableDeclaration","src":"13717:37:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13744:9:11"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13731:12:11"},"nodeType":"YulFunctionCall","src":"13731:23:11"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13721:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"13797:16:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13806:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13809:1:11","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13799:6:11"},"nodeType":"YulFunctionCall","src":"13799:12:11"},"nodeType":"YulExpressionStatement","src":"13799:12:11"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13769:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"13777:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13766:2:11"},"nodeType":"YulFunctionCall","src":"13766:30:11"},"nodeType":"YulIf","src":"13763:50:11"},{"nodeType":"YulAssignment","src":"13822:59:11","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13853:9:11"},{"name":"offset","nodeType":"YulIdentifier","src":"13864:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13849:3:11"},"nodeType":"YulFunctionCall","src":"13849:22:11"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13873:7:11"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"13832:16:11"},"nodeType":"YulFunctionCall","src":"13832:49:11"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13822:6:11"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13612:9:11","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13623:7:11","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13635:6:11","type":""}],"src":"13567:320:11"},{"body":{"nodeType":"YulBlock","src":"14039:124:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14062:3:11"},{"name":"value0","nodeType":"YulIdentifier","src":"14067:6:11"},{"name":"value1","nodeType":"YulIdentifier","src":"14075:6:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14049:12:11"},"nodeType":"YulFunctionCall","src":"14049:33:11"},"nodeType":"YulExpressionStatement","src":"14049:33:11"},{"nodeType":"YulVariableDeclaration","src":"14091:26:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14105:3:11"},{"name":"value1","nodeType":"YulIdentifier","src":"14110:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14101:3:11"},"nodeType":"YulFunctionCall","src":"14101:16:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14095:2:11","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"14133:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"14137:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14126:6:11"},"nodeType":"YulFunctionCall","src":"14126:13:11"},"nodeType":"YulExpressionStatement","src":"14126:13:11"},{"nodeType":"YulAssignment","src":"14148:9:11","value":{"name":"_1","nodeType":"YulIdentifier","src":"14155:2:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14148:3:11"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14007:3:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14012:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14020:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14031:3:11","type":""}],"src":"13892:271:11"},{"body":{"nodeType":"YulBlock","src":"14223:325:11","statements":[{"nodeType":"YulAssignment","src":"14233:22:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14247:1:11","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"14250:4:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14243:3:11"},"nodeType":"YulFunctionCall","src":"14243:12:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14233:6:11"}]},{"nodeType":"YulVariableDeclaration","src":"14264:38:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14294:4:11"},{"kind":"number","nodeType":"YulLiteral","src":"14300:1:11","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14290:3:11"},"nodeType":"YulFunctionCall","src":"14290:12:11"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"14268:18:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"14341:31:11","statements":[{"nodeType":"YulAssignment","src":"14343:27:11","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14357:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14365:4:11","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14353:3:11"},"nodeType":"YulFunctionCall","src":"14353:17:11"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14343:6:11"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14321:18:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14314:6:11"},"nodeType":"YulFunctionCall","src":"14314:26:11"},"nodeType":"YulIf","src":"14311:61:11"},{"body":{"nodeType":"YulBlock","src":"14431:111:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14452:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14459:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14464:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14455:3:11"},"nodeType":"YulFunctionCall","src":"14455:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14445:6:11"},"nodeType":"YulFunctionCall","src":"14445:31:11"},"nodeType":"YulExpressionStatement","src":"14445:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14496:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14499:4:11","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14489:6:11"},"nodeType":"YulFunctionCall","src":"14489:15:11"},"nodeType":"YulExpressionStatement","src":"14489:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14524:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14527:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14517:6:11"},"nodeType":"YulFunctionCall","src":"14517:15:11"},"nodeType":"YulExpressionStatement","src":"14517:15:11"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14387:18:11"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14410:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"14418:2:11","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14407:2:11"},"nodeType":"YulFunctionCall","src":"14407:14:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14384:2:11"},"nodeType":"YulFunctionCall","src":"14384:38:11"},"nodeType":"YulIf","src":"14381:161:11"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14203:4:11","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14212:6:11","type":""}],"src":"14168:380:11"},{"body":{"nodeType":"YulBlock","src":"14585:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14602:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14609:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14614:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14605:3:11"},"nodeType":"YulFunctionCall","src":"14605:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14595:6:11"},"nodeType":"YulFunctionCall","src":"14595:31:11"},"nodeType":"YulExpressionStatement","src":"14595:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14642:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14645:4:11","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14635:6:11"},"nodeType":"YulFunctionCall","src":"14635:15:11"},"nodeType":"YulExpressionStatement","src":"14635:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14666:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14669:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14659:6:11"},"nodeType":"YulFunctionCall","src":"14659:15:11"},"nodeType":"YulExpressionStatement","src":"14659:15:11"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14553:127:11"},{"body":{"nodeType":"YulBlock","src":"14733:77:11","statements":[{"nodeType":"YulAssignment","src":"14743:16:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14754:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"14757:1:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14750:3:11"},"nodeType":"YulFunctionCall","src":"14750:9:11"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"14743:3:11"}]},{"body":{"nodeType":"YulBlock","src":"14782:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14784:16:11"},"nodeType":"YulFunctionCall","src":"14784:18:11"},"nodeType":"YulExpressionStatement","src":"14784:18:11"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14774:1:11"},{"name":"sum","nodeType":"YulIdentifier","src":"14777:3:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14771:2:11"},"nodeType":"YulFunctionCall","src":"14771:10:11"},"nodeType":"YulIf","src":"14768:36:11"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14716:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"14719:1:11","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"14725:3:11","type":""}],"src":"14685:125:11"},{"body":{"nodeType":"YulBlock","src":"14989:182:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15006:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15017:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14999:6:11"},"nodeType":"YulFunctionCall","src":"14999:21:11"},"nodeType":"YulExpressionStatement","src":"14999:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15040:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15051:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15036:3:11"},"nodeType":"YulFunctionCall","src":"15036:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"15056:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15029:6:11"},"nodeType":"YulFunctionCall","src":"15029:30:11"},"nodeType":"YulExpressionStatement","src":"15029:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15079:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15090:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15075:3:11"},"nodeType":"YulFunctionCall","src":"15075:18:11"},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2073746f726564207061796c6f6164","kind":"string","nodeType":"YulLiteral","src":"15095:34:11","type":"","value":"LayerZeroMock: no stored payload"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15068:6:11"},"nodeType":"YulFunctionCall","src":"15068:62:11"},"nodeType":"YulExpressionStatement","src":"15068:62:11"},{"nodeType":"YulAssignment","src":"15139:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15151:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15162:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15147:3:11"},"nodeType":"YulFunctionCall","src":"15147:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15139:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14966:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14980:4:11","type":""}],"src":"14815:356:11"},{"body":{"nodeType":"YulBlock","src":"15350:179:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15367:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15378:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15360:6:11"},"nodeType":"YulFunctionCall","src":"15360:21:11"},"nodeType":"YulExpressionStatement","src":"15360:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15401:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15412:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15397:3:11"},"nodeType":"YulFunctionCall","src":"15397:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"15417:2:11","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15390:6:11"},"nodeType":"YulFunctionCall","src":"15390:30:11"},"nodeType":"YulExpressionStatement","src":"15390:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15440:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15451:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15436:3:11"},"nodeType":"YulFunctionCall","src":"15436:18:11"},{"hexValue":"4c617965725a65726f4d6f636b3a20696e76616c69642063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"15456:31:11","type":"","value":"LayerZeroMock: invalid caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15429:6:11"},"nodeType":"YulFunctionCall","src":"15429:59:11"},"nodeType":"YulExpressionStatement","src":"15429:59:11"},{"nodeType":"YulAssignment","src":"15497:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15509:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"15520:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15505:3:11"},"nodeType":"YulFunctionCall","src":"15505:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15497:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_3967011d6285a9dce57c3ff82ee9dd83446fd39eaaeb6fa26af022508e44801b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15327:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15341:4:11","type":""}],"src":"15176:353:11"},{"body":{"nodeType":"YulBlock","src":"15600:200:11","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15617:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"15622:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15610:6:11"},"nodeType":"YulFunctionCall","src":"15610:19:11"},"nodeType":"YulExpressionStatement","src":"15610:19:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15655:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"15660:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15651:3:11"},"nodeType":"YulFunctionCall","src":"15651:14:11"},{"name":"start","nodeType":"YulIdentifier","src":"15667:5:11"},{"name":"length","nodeType":"YulIdentifier","src":"15674:6:11"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"15638:12:11"},"nodeType":"YulFunctionCall","src":"15638:43:11"},"nodeType":"YulExpressionStatement","src":"15638:43:11"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15705:3:11"},{"name":"length","nodeType":"YulIdentifier","src":"15710:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15701:3:11"},"nodeType":"YulFunctionCall","src":"15701:16:11"},{"kind":"number","nodeType":"YulLiteral","src":"15719:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15697:3:11"},"nodeType":"YulFunctionCall","src":"15697:27:11"},{"kind":"number","nodeType":"YulLiteral","src":"15726:1:11","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15690:6:11"},"nodeType":"YulFunctionCall","src":"15690:38:11"},"nodeType":"YulExpressionStatement","src":"15690:38:11"},{"nodeType":"YulAssignment","src":"15737:57:11","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15752:3:11"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15765:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"15773:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15761:3:11"},"nodeType":"YulFunctionCall","src":"15761:15:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15782:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15778:3:11"},"nodeType":"YulFunctionCall","src":"15778:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15757:3:11"},"nodeType":"YulFunctionCall","src":"15757:29:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15748:3:11"},"nodeType":"YulFunctionCall","src":"15748:39:11"},{"kind":"number","nodeType":"YulLiteral","src":"15789:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15744:3:11"},"nodeType":"YulFunctionCall","src":"15744:50:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15737:3:11"}]}]},"name":"abi_encode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"15569:5:11","type":""},{"name":"length","nodeType":"YulTypedName","src":"15576:6:11","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15584:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15592:3:11","type":""}],"src":"15534:266:11"},{"body":{"nodeType":"YulBlock","src":"15960:171:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15977:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15992:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16000:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15988:3:11"},"nodeType":"YulFunctionCall","src":"15988:19:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15970:6:11"},"nodeType":"YulFunctionCall","src":"15970:38:11"},"nodeType":"YulExpressionStatement","src":"15970:38:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16028:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16039:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16024:3:11"},"nodeType":"YulFunctionCall","src":"16024:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"16044:2:11","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16017:6:11"},"nodeType":"YulFunctionCall","src":"16017:30:11"},"nodeType":"YulExpressionStatement","src":"16017:30:11"},{"nodeType":"YulAssignment","src":"16056:69:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16090:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"16098:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16110:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16121:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16106:3:11"},"nodeType":"YulFunctionCall","src":"16106:18:11"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"16064:25:11"},"nodeType":"YulFunctionCall","src":"16064:61:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16056:4:11"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15913:9:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15924:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15932:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15940:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15951:4:11","type":""}],"src":"15805:326:11"},{"body":{"nodeType":"YulBlock","src":"16310:180:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16327:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16338:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16320:6:11"},"nodeType":"YulFunctionCall","src":"16320:21:11"},"nodeType":"YulExpressionStatement","src":"16320:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16361:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16372:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16357:3:11"},"nodeType":"YulFunctionCall","src":"16357:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"16377:2:11","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16350:6:11"},"nodeType":"YulFunctionCall","src":"16350:30:11"},"nodeType":"YulExpressionStatement","src":"16350:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16400:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16411:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16396:3:11"},"nodeType":"YulFunctionCall","src":"16396:18:11"},{"hexValue":"4c617965725a65726f4d6f636b3a20696e76616c6964207061796c6f6164","kind":"string","nodeType":"YulLiteral","src":"16416:32:11","type":"","value":"LayerZeroMock: invalid payload"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16389:6:11"},"nodeType":"YulFunctionCall","src":"16389:60:11"},"nodeType":"YulExpressionStatement","src":"16389:60:11"},{"nodeType":"YulAssignment","src":"16458:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16470:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16481:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16466:3:11"},"nodeType":"YulFunctionCall","src":"16466:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16458:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d0b005579c4d5f607baec096f4a22c77289f237586c7362a7902ea2a3c322fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16287:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16301:4:11","type":""}],"src":"16136:354:11"},{"body":{"nodeType":"YulBlock","src":"16732:372:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16749:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16764:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16772:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16760:3:11"},"nodeType":"YulFunctionCall","src":"16760:19:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16742:6:11"},"nodeType":"YulFunctionCall","src":"16742:38:11"},"nodeType":"YulExpressionStatement","src":"16742:38:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16800:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16811:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16796:3:11"},"nodeType":"YulFunctionCall","src":"16796:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"16816:3:11","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16789:6:11"},"nodeType":"YulFunctionCall","src":"16789:31:11"},"nodeType":"YulExpressionStatement","src":"16789:31:11"},{"nodeType":"YulVariableDeclaration","src":"16829:76:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16869:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"16877:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16889:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16900:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16885:3:11"},"nodeType":"YulFunctionCall","src":"16885:19:11"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"16843:25:11"},"nodeType":"YulFunctionCall","src":"16843:62:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"16833:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16925:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"16936:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16921:3:11"},"nodeType":"YulFunctionCall","src":"16921:18:11"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16945:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"16953:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16941:3:11"},"nodeType":"YulFunctionCall","src":"16941:31:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16914:6:11"},"nodeType":"YulFunctionCall","src":"16914:59:11"},"nodeType":"YulExpressionStatement","src":"16914:59:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16993:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17004:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16989:3:11"},"nodeType":"YulFunctionCall","src":"16989:18:11"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"17013:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"17021:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17009:3:11"},"nodeType":"YulFunctionCall","src":"17009:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16982:6:11"},"nodeType":"YulFunctionCall","src":"16982:50:11"},"nodeType":"YulExpressionStatement","src":"16982:50:11"},{"nodeType":"YulAssignment","src":"17041:57:11","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17075:6:11"},{"name":"value5","nodeType":"YulIdentifier","src":"17083:6:11"},{"name":"tail_1","nodeType":"YulIdentifier","src":"17091:6:11"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"17049:25:11"},"nodeType":"YulFunctionCall","src":"17049:49:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17041:4:11"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16661:9:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"16672:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16680:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16688:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16696:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16704:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16712:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16723:4:11","type":""}],"src":"16495:609:11"},{"body":{"nodeType":"YulBlock","src":"17318:310:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17335:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17350:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17358:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17346:3:11"},"nodeType":"YulFunctionCall","src":"17346:19:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17328:6:11"},"nodeType":"YulFunctionCall","src":"17328:38:11"},"nodeType":"YulExpressionStatement","src":"17328:38:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17386:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17397:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17382:3:11"},"nodeType":"YulFunctionCall","src":"17382:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"17402:3:11","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17375:6:11"},"nodeType":"YulFunctionCall","src":"17375:31:11"},"nodeType":"YulExpressionStatement","src":"17375:31:11"},{"nodeType":"YulAssignment","src":"17415:70:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17449:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"17457:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17469:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17480:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17465:3:11"},"nodeType":"YulFunctionCall","src":"17465:19:11"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"17423:25:11"},"nodeType":"YulFunctionCall","src":"17423:62:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17415:4:11"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17505:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17516:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17501:3:11"},"nodeType":"YulFunctionCall","src":"17501:18:11"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17525:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"17533:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17521:3:11"},"nodeType":"YulFunctionCall","src":"17521:31:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17494:6:11"},"nodeType":"YulFunctionCall","src":"17494:59:11"},"nodeType":"YulExpressionStatement","src":"17494:59:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17573:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17584:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17569:3:11"},"nodeType":"YulFunctionCall","src":"17569:18:11"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17593:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17609:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"17614:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17605:3:11"},"nodeType":"YulFunctionCall","src":"17605:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"17618:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17601:3:11"},"nodeType":"YulFunctionCall","src":"17601:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17589:3:11"},"nodeType":"YulFunctionCall","src":"17589:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17562:6:11"},"nodeType":"YulFunctionCall","src":"17562:60:11"},"nodeType":"YulExpressionStatement","src":"17562:60:11"}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_address__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17255:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"17266:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17274:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17282:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17290:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17298:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17309:4:11","type":""}],"src":"17109:519:11"},{"body":{"nodeType":"YulBlock","src":"17807:226:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17824:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17835:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17817:6:11"},"nodeType":"YulFunctionCall","src":"17817:21:11"},"nodeType":"YulExpressionStatement","src":"17817:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17858:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17869:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17854:3:11"},"nodeType":"YulFunctionCall","src":"17854:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"17874:2:11","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17847:6:11"},"nodeType":"YulFunctionCall","src":"17847:30:11"},"nodeType":"YulExpressionStatement","src":"17847:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17897:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17908:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17893:3:11"},"nodeType":"YulFunctionCall","src":"17893:18:11"},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2072656365697665207265656e7472","kind":"string","nodeType":"YulLiteral","src":"17913:34:11","type":"","value":"LayerZeroMock: no receive reentr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17886:6:11"},"nodeType":"YulFunctionCall","src":"17886:62:11"},"nodeType":"YulExpressionStatement","src":"17886:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17968:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"17979:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17964:3:11"},"nodeType":"YulFunctionCall","src":"17964:18:11"},{"hexValue":"616e6379","kind":"string","nodeType":"YulLiteral","src":"17984:6:11","type":"","value":"ancy"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17957:6:11"},"nodeType":"YulFunctionCall","src":"17957:34:11"},"nodeType":"YulExpressionStatement","src":"17957:34:11"},{"nodeType":"YulAssignment","src":"18000:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18012:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18023:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18008:3:11"},"nodeType":"YulFunctionCall","src":"18008:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18000:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_82caa7769a2a1defb5e8d4082900c39c0f04eedfd5e921c1e3bf1d16730a12ab__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17784:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17798:4:11","type":""}],"src":"17633:400:11"},{"body":{"nodeType":"YulBlock","src":"18084:163:11","statements":[{"nodeType":"YulVariableDeclaration","src":"18094:28:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18104:18:11","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18098:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18131:29:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18150:5:11"},{"name":"_1","nodeType":"YulIdentifier","src":"18157:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18146:3:11"},"nodeType":"YulFunctionCall","src":"18146:14:11"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"18135:7:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"18188:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18190:16:11"},"nodeType":"YulFunctionCall","src":"18190:18:11"},"nodeType":"YulExpressionStatement","src":"18190:18:11"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"18175:7:11"},{"name":"_1","nodeType":"YulIdentifier","src":"18184:2:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18172:2:11"},"nodeType":"YulFunctionCall","src":"18172:15:11"},"nodeType":"YulIf","src":"18169:41:11"},{"nodeType":"YulAssignment","src":"18219:22:11","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"18230:7:11"},{"kind":"number","nodeType":"YulLiteral","src":"18239:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18226:3:11"},"nodeType":"YulFunctionCall","src":"18226:15:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"18219:3:11"}]}]},"name":"increment_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18066:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"18076:3:11","type":""}],"src":"18038:209:11"},{"body":{"nodeType":"YulBlock","src":"18426:176:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18443:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18454:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18436:6:11"},"nodeType":"YulFunctionCall","src":"18436:21:11"},"nodeType":"YulExpressionStatement","src":"18436:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18477:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18488:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18473:3:11"},"nodeType":"YulFunctionCall","src":"18473:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"18493:2:11","type":"","value":"26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18466:6:11"},"nodeType":"YulFunctionCall","src":"18466:30:11"},"nodeType":"YulExpressionStatement","src":"18466:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18516:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18527:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18512:3:11"},"nodeType":"YulFunctionCall","src":"18512:18:11"},{"hexValue":"4c617965725a65726f4d6f636b3a2077726f6e67206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"18532:28:11","type":"","value":"LayerZeroMock: wrong nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18505:6:11"},"nodeType":"YulFunctionCall","src":"18505:56:11"},"nodeType":"YulExpressionStatement","src":"18505:56:11"},{"nodeType":"YulAssignment","src":"18570:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18582:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"18593:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18578:3:11"},"nodeType":"YulFunctionCall","src":"18578:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18570:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_cfe15a20060cae4027edaeadac99a28b9a581999e01bac9619e7f52b82ee25ac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18403:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18417:4:11","type":""}],"src":"18252:350:11"},{"body":{"nodeType":"YulBlock","src":"18662:65:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18679:1:11","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"18682:3:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18672:6:11"},"nodeType":"YulFunctionCall","src":"18672:14:11"},"nodeType":"YulExpressionStatement","src":"18672:14:11"},{"nodeType":"YulAssignment","src":"18695:26:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18713:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18716:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18703:9:11"},"nodeType":"YulFunctionCall","src":"18703:18:11"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18695:4:11"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18645:3:11","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"18653:4:11","type":""}],"src":"18607:120:11"},{"body":{"nodeType":"YulBlock","src":"18812:464:11","statements":[{"body":{"nodeType":"YulBlock","src":"18845:425:11","statements":[{"nodeType":"YulVariableDeclaration","src":"18859:11:11","value":{"kind":"number","nodeType":"YulLiteral","src":"18869:1:11","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18863:2:11","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"18890:2:11"},{"name":"array","nodeType":"YulIdentifier","src":"18894:5:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18883:6:11"},"nodeType":"YulFunctionCall","src":"18883:17:11"},"nodeType":"YulExpressionStatement","src":"18883:17:11"},{"nodeType":"YulVariableDeclaration","src":"18913:31:11","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"18935:2:11"},{"kind":"number","nodeType":"YulLiteral","src":"18939:4:11","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18925:9:11"},"nodeType":"YulFunctionCall","src":"18925:19:11"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"18917:4:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18957:57:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18980:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18990:1:11","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"18997:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"19009:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18993:3:11"},"nodeType":"YulFunctionCall","src":"18993:19:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18986:3:11"},"nodeType":"YulFunctionCall","src":"18986:27:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18976:3:11"},"nodeType":"YulFunctionCall","src":"18976:38:11"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"18961:11:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"19051:23:11","statements":[{"nodeType":"YulAssignment","src":"19053:19:11","value":{"name":"data","nodeType":"YulIdentifier","src":"19068:4:11"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"19053:11:11"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"19033:10:11"},{"kind":"number","nodeType":"YulLiteral","src":"19045:4:11","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19030:2:11"},"nodeType":"YulFunctionCall","src":"19030:20:11"},"nodeType":"YulIf","src":"19027:47:11"},{"nodeType":"YulVariableDeclaration","src":"19087:41:11","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19101:4:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19111:1:11","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"19118:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"19123:2:11","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19114:3:11"},"nodeType":"YulFunctionCall","src":"19114:12:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19107:3:11"},"nodeType":"YulFunctionCall","src":"19107:20:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19097:3:11"},"nodeType":"YulFunctionCall","src":"19097:31:11"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"19091:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19141:24:11","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"19154:11:11"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"19145:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"19239:21:11","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19248:5:11"},{"name":"_1","nodeType":"YulIdentifier","src":"19255:2:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19241:6:11"},"nodeType":"YulFunctionCall","src":"19241:17:11"},"nodeType":"YulExpressionStatement","src":"19241:17:11"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19189:5:11"},{"name":"_2","nodeType":"YulIdentifier","src":"19196:2:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19186:2:11"},"nodeType":"YulFunctionCall","src":"19186:13:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19200:26:11","statements":[{"nodeType":"YulAssignment","src":"19202:22:11","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"19215:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"19222:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19211:3:11"},"nodeType":"YulFunctionCall","src":"19211:13:11"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"19202:5:11"}]}]},"pre":{"nodeType":"YulBlock","src":"19182:3:11","statements":[]},"src":"19178:82:11"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18828:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"18833:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18825:2:11"},"nodeType":"YulFunctionCall","src":"18825:11:11"},"nodeType":"YulIf","src":"18822:448:11"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"18784:5:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"18791:3:11","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"18796:10:11","type":""}],"src":"18732:544:11"},{"body":{"nodeType":"YulBlock","src":"19366:81:11","statements":[{"nodeType":"YulAssignment","src":"19376:65:11","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19391:4:11"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19409:1:11","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"19412:3:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19405:3:11"},"nodeType":"YulFunctionCall","src":"19405:11:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19422:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19418:3:11"},"nodeType":"YulFunctionCall","src":"19418:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"19401:3:11"},"nodeType":"YulFunctionCall","src":"19401:24:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19397:3:11"},"nodeType":"YulFunctionCall","src":"19397:29:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19387:3:11"},"nodeType":"YulFunctionCall","src":"19387:40:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19433:1:11","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"19436:3:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19429:3:11"},"nodeType":"YulFunctionCall","src":"19429:11:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19384:2:11"},"nodeType":"YulFunctionCall","src":"19384:57:11"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"19376:4:11"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"19343:4:11","type":""},{"name":"len","nodeType":"YulTypedName","src":"19349:3:11","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"19357:4:11","type":""}],"src":"19281:166:11"},{"body":{"nodeType":"YulBlock","src":"19546:1254:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19556:24:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19576:3:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19570:5:11"},"nodeType":"YulFunctionCall","src":"19570:10:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"19560:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"19623:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19625:16:11"},"nodeType":"YulFunctionCall","src":"19625:18:11"},"nodeType":"YulExpressionStatement","src":"19625:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19595:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19603:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19592:2:11"},"nodeType":"YulFunctionCall","src":"19592:30:11"},"nodeType":"YulIf","src":"19589:56:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19697:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19735:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19729:5:11"},"nodeType":"YulFunctionCall","src":"19729:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"19703:25:11"},"nodeType":"YulFunctionCall","src":"19703:38:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"19743:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"19654:42:11"},"nodeType":"YulFunctionCall","src":"19654:96:11"},"nodeType":"YulExpressionStatement","src":"19654:96:11"},{"nodeType":"YulVariableDeclaration","src":"19759:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19776:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"19763:9:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19786:23:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19805:4:11","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"19790:11:11","type":""}]},{"nodeType":"YulAssignment","src":"19818:24:11","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"19831:11:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19818:9:11"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"19888:655:11","statements":[{"nodeType":"YulVariableDeclaration","src":"19902:35:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19921:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19933:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19929:3:11"},"nodeType":"YulFunctionCall","src":"19929:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19917:3:11"},"nodeType":"YulFunctionCall","src":"19917:20:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"19906:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19950:48:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19993:4:11"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"19964:28:11"},"nodeType":"YulFunctionCall","src":"19964:34:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"19954:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20011:10:11","value":{"kind":"number","nodeType":"YulLiteral","src":"20020:1:11","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20015:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"20098:172:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20123:6:11"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20141:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20146:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20137:3:11"},"nodeType":"YulFunctionCall","src":"20137:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20131:5:11"},"nodeType":"YulFunctionCall","src":"20131:26:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20116:6:11"},"nodeType":"YulFunctionCall","src":"20116:42:11"},"nodeType":"YulExpressionStatement","src":"20116:42:11"},{"nodeType":"YulAssignment","src":"20175:24:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20189:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"20197:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20185:3:11"},"nodeType":"YulFunctionCall","src":"20185:14:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20175:6:11"}]},{"nodeType":"YulAssignment","src":"20216:40:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20233:9:11"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"20244:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20229:3:11"},"nodeType":"YulFunctionCall","src":"20229:27:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"20216:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20045:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"20048:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20042:2:11"},"nodeType":"YulFunctionCall","src":"20042:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20057:28:11","statements":[{"nodeType":"YulAssignment","src":"20059:24:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20068:1:11"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"20071:11:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20064:3:11"},"nodeType":"YulFunctionCall","src":"20064:19:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20059:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"20038:3:11","statements":[]},"src":"20034:236:11"},{"body":{"nodeType":"YulBlock","src":"20318:166:11","statements":[{"nodeType":"YulVariableDeclaration","src":"20336:43:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20363:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20368:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20359:3:11"},"nodeType":"YulFunctionCall","src":"20359:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20353:5:11"},"nodeType":"YulFunctionCall","src":"20353:26:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"20340:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20403:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"20415:9:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20442:1:11","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"20445:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20438:3:11"},"nodeType":"YulFunctionCall","src":"20438:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"20454:3:11","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20434:3:11"},"nodeType":"YulFunctionCall","src":"20434:24:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20464:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20460:3:11"},"nodeType":"YulFunctionCall","src":"20460:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"20430:3:11"},"nodeType":"YulFunctionCall","src":"20430:37:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20426:3:11"},"nodeType":"YulFunctionCall","src":"20426:42:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20411:3:11"},"nodeType":"YulFunctionCall","src":"20411:58:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20396:6:11"},"nodeType":"YulFunctionCall","src":"20396:74:11"},"nodeType":"YulExpressionStatement","src":"20396:74:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"20289:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"20298:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20286:2:11"},"nodeType":"YulFunctionCall","src":"20286:19:11"},"nodeType":"YulIf","src":"20283:201:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20504:4:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20518:1:11","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"20521:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20514:3:11"},"nodeType":"YulFunctionCall","src":"20514:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"20530:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20510:3:11"},"nodeType":"YulFunctionCall","src":"20510:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20497:6:11"},"nodeType":"YulFunctionCall","src":"20497:36:11"},"nodeType":"YulExpressionStatement","src":"20497:36:11"}]},"nodeType":"YulCase","src":"19881:662:11","value":{"kind":"number","nodeType":"YulLiteral","src":"19886:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"20560:234:11","statements":[{"nodeType":"YulVariableDeclaration","src":"20574:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"20587:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20578:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"20623:67:11","statements":[{"nodeType":"YulAssignment","src":"20641:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20660:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20665:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20656:3:11"},"nodeType":"YulFunctionCall","src":"20656:19:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20650:5:11"},"nodeType":"YulFunctionCall","src":"20650:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20641:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"20604:6:11"},"nodeType":"YulIf","src":"20601:89:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20710:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20769:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"20776:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"20716:52:11"},"nodeType":"YulFunctionCall","src":"20716:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20703:6:11"},"nodeType":"YulFunctionCall","src":"20703:81:11"},"nodeType":"YulExpressionStatement","src":"20703:81:11"}]},"nodeType":"YulCase","src":"20552:242:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19861:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"19869:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19858:2:11"},"nodeType":"YulFunctionCall","src":"19858:14:11"},"nodeType":"YulSwitch","src":"19851:943:11"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19531:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"19537:3:11","type":""}],"src":"19452:1348:11"},{"body":{"nodeType":"YulBlock","src":"20854:79:11","statements":[{"nodeType":"YulAssignment","src":"20864:17:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20876:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"20879:1:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20872:3:11"},"nodeType":"YulFunctionCall","src":"20872:9:11"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"20864:4:11"}]},{"body":{"nodeType":"YulBlock","src":"20905:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20907:16:11"},"nodeType":"YulFunctionCall","src":"20907:18:11"},"nodeType":"YulExpressionStatement","src":"20907:18:11"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"20896:4:11"},{"name":"x","nodeType":"YulIdentifier","src":"20902:1:11"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20893:2:11"},"nodeType":"YulFunctionCall","src":"20893:11:11"},"nodeType":"YulIf","src":"20890:37:11"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20836:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"20839:1:11","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"20845:4:11","type":""}],"src":"20805:128:11"},{"body":{"nodeType":"YulBlock","src":"20970:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20987:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20994:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"20999:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20990:3:11"},"nodeType":"YulFunctionCall","src":"20990:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20980:6:11"},"nodeType":"YulFunctionCall","src":"20980:31:11"},"nodeType":"YulExpressionStatement","src":"20980:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21027:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21030:4:11","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21020:6:11"},"nodeType":"YulFunctionCall","src":"21020:15:11"},"nodeType":"YulExpressionStatement","src":"21020:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21051:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21054:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21044:6:11"},"nodeType":"YulFunctionCall","src":"21044:15:11"},"nodeType":"YulExpressionStatement","src":"21044:15:11"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20938:127:11"},{"body":{"nodeType":"YulBlock","src":"21161:1335:11","statements":[{"body":{"nodeType":"YulBlock","src":"21188:9:11","statements":[{"nodeType":"YulLeave","src":"21190:5:11"}]},"condition":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21177:4:11"},{"name":"src","nodeType":"YulIdentifier","src":"21183:3:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21174:2:11"},"nodeType":"YulFunctionCall","src":"21174:13:11"},"nodeType":"YulIf","src":"21171:26:11"},{"nodeType":"YulVariableDeclaration","src":"21206:51:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21252:3:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"21246:5:11"},"nodeType":"YulFunctionCall","src":"21246:10:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"21220:25:11"},"nodeType":"YulFunctionCall","src":"21220:37:11"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"21210:6:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"21300:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"21302:16:11"},"nodeType":"YulFunctionCall","src":"21302:18:11"},"nodeType":"YulExpressionStatement","src":"21302:18:11"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21272:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21280:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21269:2:11"},"nodeType":"YulFunctionCall","src":"21269:30:11"},"nodeType":"YulIf","src":"21266:56:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21374:4:11"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21412:4:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"21406:5:11"},"nodeType":"YulFunctionCall","src":"21406:11:11"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"21380:25:11"},"nodeType":"YulFunctionCall","src":"21380:38:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"21420:6:11"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"21331:42:11"},"nodeType":"YulFunctionCall","src":"21331:96:11"},"nodeType":"YulExpressionStatement","src":"21331:96:11"},{"nodeType":"YulVariableDeclaration","src":"21436:18:11","value":{"kind":"number","nodeType":"YulLiteral","src":"21453:1:11","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"21440:9:11","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"21500:739:11","statements":[{"nodeType":"YulVariableDeclaration","src":"21514:35:11","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21533:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21545:2:11","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"21541:3:11"},"nodeType":"YulFunctionCall","src":"21541:7:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21529:3:11"},"nodeType":"YulFunctionCall","src":"21529:20:11"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"21518:7:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21562:46:11","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"21604:3:11"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"21575:28:11"},"nodeType":"YulFunctionCall","src":"21575:33:11"},"variables":[{"name":"src_1","nodeType":"YulTypedName","src":"21566:5:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21621:48:11","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21664:4:11"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"21635:28:11"},"nodeType":"YulFunctionCall","src":"21635:34:11"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"21625:6:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21682:18:11","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"21691:9:11"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"21686:1:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"21770:194:11","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21795:6:11"},{"arguments":[{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"21813:5:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"21820:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21809:3:11"},"nodeType":"YulFunctionCall","src":"21809:21:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"21803:5:11"},"nodeType":"YulFunctionCall","src":"21803:28:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"21788:6:11"},"nodeType":"YulFunctionCall","src":"21788:44:11"},"nodeType":"YulExpressionStatement","src":"21788:44:11"},{"nodeType":"YulVariableDeclaration","src":"21849:11:11","value":{"kind":"number","nodeType":"YulLiteral","src":"21859:1:11","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21853:2:11","type":""}]},{"nodeType":"YulAssignment","src":"21877:25:11","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21891:6:11"},{"name":"_1","nodeType":"YulIdentifier","src":"21899:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21887:3:11"},"nodeType":"YulFunctionCall","src":"21887:15:11"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"21877:6:11"}]},{"nodeType":"YulAssignment","src":"21919:31:11","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21936:9:11"},{"name":"_1","nodeType":"YulIdentifier","src":"21947:2:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21932:3:11"},"nodeType":"YulFunctionCall","src":"21932:18:11"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"21919:9:11"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21724:1:11"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"21727:7:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21721:2:11"},"nodeType":"YulFunctionCall","src":"21721:14:11"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21736:21:11","statements":[{"nodeType":"YulAssignment","src":"21738:17:11","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"21747:1:11"},{"kind":"number","nodeType":"YulLiteral","src":"21750:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21743:3:11"},"nodeType":"YulFunctionCall","src":"21743:12:11"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"21738:1:11"}]}]},"pre":{"nodeType":"YulBlock","src":"21717:3:11","statements":[]},"src":"21713:251:11"},{"body":{"nodeType":"YulBlock","src":"22012:168:11","statements":[{"nodeType":"YulVariableDeclaration","src":"22030:45:11","value":{"arguments":[{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"22057:5:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22064:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22053:3:11"},"nodeType":"YulFunctionCall","src":"22053:21:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22047:5:11"},"nodeType":"YulFunctionCall","src":"22047:28:11"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"22034:9:11","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"22099:6:11"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"22111:9:11"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22138:1:11","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"22141:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22134:3:11"},"nodeType":"YulFunctionCall","src":"22134:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"22150:3:11","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22130:3:11"},"nodeType":"YulFunctionCall","src":"22130:24:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22160:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22156:3:11"},"nodeType":"YulFunctionCall","src":"22156:6:11"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"22126:3:11"},"nodeType":"YulFunctionCall","src":"22126:37:11"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22122:3:11"},"nodeType":"YulFunctionCall","src":"22122:42:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22107:3:11"},"nodeType":"YulFunctionCall","src":"22107:58:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22092:6:11"},"nodeType":"YulFunctionCall","src":"22092:74:11"},"nodeType":"YulExpressionStatement","src":"22092:74:11"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"21983:7:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"21992:6:11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21980:2:11"},"nodeType":"YulFunctionCall","src":"21980:19:11"},"nodeType":"YulIf","src":"21977:203:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22200:4:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22214:1:11","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"22217:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"22210:3:11"},"nodeType":"YulFunctionCall","src":"22210:14:11"},{"kind":"number","nodeType":"YulLiteral","src":"22226:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22206:3:11"},"nodeType":"YulFunctionCall","src":"22206:22:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22193:6:11"},"nodeType":"YulFunctionCall","src":"22193:36:11"},"nodeType":"YulExpressionStatement","src":"22193:36:11"}]},"nodeType":"YulCase","src":"21493:746:11","value":{"kind":"number","nodeType":"YulLiteral","src":"21498:1:11","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"22256:234:11","statements":[{"nodeType":"YulVariableDeclaration","src":"22270:14:11","value":{"kind":"number","nodeType":"YulLiteral","src":"22283:1:11","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"22274:5:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"22319:67:11","statements":[{"nodeType":"YulAssignment","src":"22337:35:11","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22356:3:11"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"22361:9:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22352:3:11"},"nodeType":"YulFunctionCall","src":"22352:19:11"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22346:5:11"},"nodeType":"YulFunctionCall","src":"22346:26:11"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22337:5:11"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"22300:6:11"},"nodeType":"YulIf","src":"22297:89:11"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22406:4:11"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22465:5:11"},{"name":"newLen","nodeType":"YulIdentifier","src":"22472:6:11"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"22412:52:11"},"nodeType":"YulFunctionCall","src":"22412:67:11"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"22399:6:11"},"nodeType":"YulFunctionCall","src":"22399:81:11"},"nodeType":"YulExpressionStatement","src":"22399:81:11"}]},"nodeType":"YulCase","src":"22248:242:11","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"21473:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"21481:2:11","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21470:2:11"},"nodeType":"YulFunctionCall","src":"21470:14:11"},"nodeType":"YulSwitch","src":"21463:1027:11"}]},"name":"copy_byte_array_to_storage_from_t_bytes_storage_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"21146:4:11","type":""},{"name":"src","nodeType":"YulTypedName","src":"21152:3:11","type":""}],"src":"21070:1426:11"},{"body":{"nodeType":"YulBlock","src":"22548:88:11","statements":[{"body":{"nodeType":"YulBlock","src":"22579:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22581:16:11"},"nodeType":"YulFunctionCall","src":"22581:18:11"},"nodeType":"YulExpressionStatement","src":"22581:18:11"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22564:5:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22575:1:11","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22571:3:11"},"nodeType":"YulFunctionCall","src":"22571:6:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22561:2:11"},"nodeType":"YulFunctionCall","src":"22561:17:11"},"nodeType":"YulIf","src":"22558:43:11"},{"nodeType":"YulAssignment","src":"22610:20:11","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22621:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"22628:1:11","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22617:3:11"},"nodeType":"YulFunctionCall","src":"22617:13:11"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22610:3:11"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22530:5:11","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22540:3:11","type":""}],"src":"22501:135:11"},{"body":{"nodeType":"YulBlock","src":"22952:557:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22969:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22984:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"22992:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22980:3:11"},"nodeType":"YulFunctionCall","src":"22980:19:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22962:6:11"},"nodeType":"YulFunctionCall","src":"22962:38:11"},"nodeType":"YulExpressionStatement","src":"22962:38:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23020:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23031:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23016:3:11"},"nodeType":"YulFunctionCall","src":"23016:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"23036:3:11","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23009:6:11"},"nodeType":"YulFunctionCall","src":"23009:31:11"},"nodeType":"YulExpressionStatement","src":"23009:31:11"},{"nodeType":"YulVariableDeclaration","src":"23049:76:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23089:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"23097:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23109:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23120:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23105:3:11"},"nodeType":"YulFunctionCall","src":"23105:19:11"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"23063:25:11"},"nodeType":"YulFunctionCall","src":"23063:62:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"23053:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23145:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23156:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23141:3:11"},"nodeType":"YulFunctionCall","src":"23141:18:11"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23165:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23181:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"23186:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"23177:3:11"},"nodeType":"YulFunctionCall","src":"23177:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"23190:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23173:3:11"},"nodeType":"YulFunctionCall","src":"23173:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23161:3:11"},"nodeType":"YulFunctionCall","src":"23161:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23134:6:11"},"nodeType":"YulFunctionCall","src":"23134:60:11"},"nodeType":"YulExpressionStatement","src":"23134:60:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23214:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23225:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23210:3:11"},"nodeType":"YulFunctionCall","src":"23210:18:11"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23234:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"23242:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23230:3:11"},"nodeType":"YulFunctionCall","src":"23230:31:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23203:6:11"},"nodeType":"YulFunctionCall","src":"23203:59:11"},"nodeType":"YulExpressionStatement","src":"23203:59:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23282:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23293:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23278:3:11"},"nodeType":"YulFunctionCall","src":"23278:19:11"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"23303:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"23311:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23299:3:11"},"nodeType":"YulFunctionCall","src":"23299:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23271:6:11"},"nodeType":"YulFunctionCall","src":"23271:51:11"},"nodeType":"YulExpressionStatement","src":"23271:51:11"},{"nodeType":"YulVariableDeclaration","src":"23331:63:11","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23371:6:11"},{"name":"value6","nodeType":"YulIdentifier","src":"23379:6:11"},{"name":"tail_1","nodeType":"YulIdentifier","src":"23387:6:11"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"23345:25:11"},"nodeType":"YulFunctionCall","src":"23345:49:11"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"23335:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23414:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23425:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23410:3:11"},"nodeType":"YulFunctionCall","src":"23410:19:11"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"23435:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"23443:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23431:3:11"},"nodeType":"YulFunctionCall","src":"23431:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23403:6:11"},"nodeType":"YulFunctionCall","src":"23403:51:11"},"nodeType":"YulExpressionStatement","src":"23403:51:11"},{"nodeType":"YulAssignment","src":"23463:40:11","value":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"23488:6:11"},{"name":"tail_2","nodeType":"YulIdentifier","src":"23496:6:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"23471:16:11"},"nodeType":"YulFunctionCall","src":"23471:32:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23463:4:11"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_address_t_uint64_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22865:9:11","type":""},{"name":"value7","nodeType":"YulTypedName","src":"22876:6:11","type":""},{"name":"value6","nodeType":"YulTypedName","src":"22884:6:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"22892:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22900:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22908:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22916:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22924:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22932:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22943:4:11","type":""}],"src":"22641:868:11"},{"body":{"nodeType":"YulBlock","src":"23688:223:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23705:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23716:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23698:6:11"},"nodeType":"YulFunctionCall","src":"23698:21:11"},"nodeType":"YulExpressionStatement","src":"23698:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23739:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23750:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23735:3:11"},"nodeType":"YulFunctionCall","src":"23735:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"23755:2:11","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23728:6:11"},"nodeType":"YulFunctionCall","src":"23728:30:11"},"nodeType":"YulExpressionStatement","src":"23728:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23778:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23789:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23774:3:11"},"nodeType":"YulFunctionCall","src":"23774:18:11"},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f2073656e64207265656e7472616e63","kind":"string","nodeType":"YulLiteral","src":"23794:34:11","type":"","value":"LayerZeroMock: no send reentranc"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23767:6:11"},"nodeType":"YulFunctionCall","src":"23767:62:11"},"nodeType":"YulExpressionStatement","src":"23767:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23849:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23860:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23845:3:11"},"nodeType":"YulFunctionCall","src":"23845:18:11"},{"hexValue":"79","kind":"string","nodeType":"YulLiteral","src":"23865:3:11","type":"","value":"y"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23838:6:11"},"nodeType":"YulFunctionCall","src":"23838:31:11"},"nodeType":"YulExpressionStatement","src":"23838:31:11"},{"nodeType":"YulAssignment","src":"23878:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23890:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"23901:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23886:3:11"},"nodeType":"YulFunctionCall","src":"23886:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23878:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_73b1d6d5ba54cd5e4e2ebace0c8623f647e51a2b5e72af7e7df83d716224bbcb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23665:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23679:4:11","type":""}],"src":"23514:397:11"},{"body":{"nodeType":"YulBlock","src":"24090:234:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24107:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24118:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24100:6:11"},"nodeType":"YulFunctionCall","src":"24100:21:11"},"nodeType":"YulExpressionStatement","src":"24100:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24141:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24152:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24137:3:11"},"nodeType":"YulFunctionCall","src":"24137:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"24157:2:11","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24130:6:11"},"nodeType":"YulFunctionCall","src":"24130:30:11"},"nodeType":"YulExpressionStatement","src":"24130:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24180:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24191:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24176:3:11"},"nodeType":"YulFunctionCall","src":"24176:18:11"},{"hexValue":"4c617965725a65726f4d6f636b3a20696e636f72726563742072656d6f746520","kind":"string","nodeType":"YulLiteral","src":"24196:34:11","type":"","value":"LayerZeroMock: incorrect remote "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24169:6:11"},"nodeType":"YulFunctionCall","src":"24169:62:11"},"nodeType":"YulExpressionStatement","src":"24169:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24251:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24262:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24247:3:11"},"nodeType":"YulFunctionCall","src":"24247:18:11"},{"hexValue":"616464726573732073697a65","kind":"string","nodeType":"YulLiteral","src":"24267:14:11","type":"","value":"address size"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24240:6:11"},"nodeType":"YulFunctionCall","src":"24240:42:11"},"nodeType":"YulExpressionStatement","src":"24240:42:11"},{"nodeType":"YulAssignment","src":"24291:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24303:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24314:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24299:3:11"},"nodeType":"YulFunctionCall","src":"24299:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24291:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_a84f16779931db7ec618d2bd334bd656888d24e7e320bdf2dd7a0a0862d1916b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24067:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24081:4:11","type":""}],"src":"23916:408:11"},{"body":{"nodeType":"YulBlock","src":"24503:245:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24520:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24531:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24513:6:11"},"nodeType":"YulFunctionCall","src":"24513:21:11"},"nodeType":"YulExpressionStatement","src":"24513:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24554:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24565:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24550:3:11"},"nodeType":"YulFunctionCall","src":"24550:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"24570:2:11","type":"","value":"55"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24543:6:11"},"nodeType":"YulFunctionCall","src":"24543:30:11"},"nodeType":"YulExpressionStatement","src":"24543:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24593:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24604:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24589:3:11"},"nodeType":"YulFunctionCall","src":"24589:18:11"},{"hexValue":"4c617965725a65726f4d6f636b3a2064657374696e6174696f6e204c61796572","kind":"string","nodeType":"YulLiteral","src":"24609:34:11","type":"","value":"LayerZeroMock: destination Layer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24582:6:11"},"nodeType":"YulFunctionCall","src":"24582:62:11"},"nodeType":"YulExpressionStatement","src":"24582:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24664:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24675:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24660:3:11"},"nodeType":"YulFunctionCall","src":"24660:18:11"},{"hexValue":"5a65726f20456e64706f696e74206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"24680:25:11","type":"","value":"Zero Endpoint not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24653:6:11"},"nodeType":"YulFunctionCall","src":"24653:53:11"},"nodeType":"YulExpressionStatement","src":"24653:53:11"},{"nodeType":"YulAssignment","src":"24715:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24727:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24738:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24723:3:11"},"nodeType":"YulFunctionCall","src":"24723:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24715:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_03f2c372695dfb7017d0d1b5b039a7a7c563c382ff38f9563e77eedca785e4df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24480:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24494:4:11","type":""}],"src":"24329:419:11"},{"body":{"nodeType":"YulBlock","src":"24927:231:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24944:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24955:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24937:6:11"},"nodeType":"YulFunctionCall","src":"24937:21:11"},"nodeType":"YulExpressionStatement","src":"24937:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24978:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"24989:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24974:3:11"},"nodeType":"YulFunctionCall","src":"24974:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"24994:2:11","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24967:6:11"},"nodeType":"YulFunctionCall","src":"24967:30:11"},"nodeType":"YulExpressionStatement","src":"24967:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25017:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25028:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25013:3:11"},"nodeType":"YulFunctionCall","src":"25013:18:11"},{"hexValue":"4c617965725a65726f4d6f636b3a206e6f7420656e6f756768206e6174697665","kind":"string","nodeType":"YulLiteral","src":"25033:34:11","type":"","value":"LayerZeroMock: not enough native"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25006:6:11"},"nodeType":"YulFunctionCall","src":"25006:62:11"},"nodeType":"YulExpressionStatement","src":"25006:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25088:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25099:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25084:3:11"},"nodeType":"YulFunctionCall","src":"25084:18:11"},{"hexValue":"20666f722066656573","kind":"string","nodeType":"YulLiteral","src":"25104:11:11","type":"","value":" for fees"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25077:6:11"},"nodeType":"YulFunctionCall","src":"25077:39:11"},"nodeType":"YulExpressionStatement","src":"25077:39:11"},{"nodeType":"YulAssignment","src":"25125:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25137:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25148:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25133:3:11"},"nodeType":"YulFunctionCall","src":"25133:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25125:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_1d7a441e6351efbe3589b780f6d9098a5373ce9246e759367f3fb559adf16b4a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24904:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24918:4:11","type":""}],"src":"24753:405:11"},{"body":{"nodeType":"YulBlock","src":"25354:14:11","statements":[{"nodeType":"YulAssignment","src":"25356:10:11","value":{"name":"pos","nodeType":"YulIdentifier","src":"25363:3:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25356:3:11"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25338:3:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25346:3:11","type":""}],"src":"25163:205:11"},{"body":{"nodeType":"YulBlock","src":"25547:181:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25564:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25575:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25557:6:11"},"nodeType":"YulFunctionCall","src":"25557:21:11"},"nodeType":"YulExpressionStatement","src":"25557:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25598:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25609:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25594:3:11"},"nodeType":"YulFunctionCall","src":"25594:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"25614:2:11","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25587:6:11"},"nodeType":"YulFunctionCall","src":"25587:30:11"},"nodeType":"YulExpressionStatement","src":"25587:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25637:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25648:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25633:3:11"},"nodeType":"YulFunctionCall","src":"25633:18:11"},{"hexValue":"4c617965725a65726f4d6f636b3a206661696c656420746f20726566756e64","kind":"string","nodeType":"YulLiteral","src":"25653:33:11","type":"","value":"LayerZeroMock: failed to refund"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25626:6:11"},"nodeType":"YulFunctionCall","src":"25626:61:11"},"nodeType":"YulExpressionStatement","src":"25626:61:11"},{"nodeType":"YulAssignment","src":"25696:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25708:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"25719:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25704:3:11"},"nodeType":"YulFunctionCall","src":"25704:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25696:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_dcfb2fb846bf29eed16ab1966cc303d2b0cbdcaede7d9e78ee4c30c1a8119790__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25524:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25538:4:11","type":""}],"src":"25373:355:11"},{"body":{"nodeType":"YulBlock","src":"25880:186:11","statements":[{"nodeType":"YulVariableDeclaration","src":"25890:41:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25904:26:11","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"25900:3:11"},"nodeType":"YulFunctionCall","src":"25900:31:11"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"25894:2:11","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25947:3:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25960:2:11","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"25964:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25956:3:11"},"nodeType":"YulFunctionCall","src":"25956:15:11"},{"name":"_1","nodeType":"YulIdentifier","src":"25973:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25952:3:11"},"nodeType":"YulFunctionCall","src":"25952:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25940:6:11"},"nodeType":"YulFunctionCall","src":"25940:37:11"},"nodeType":"YulExpressionStatement","src":"25940:37:11"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25997:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"26002:2:11","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25993:3:11"},"nodeType":"YulFunctionCall","src":"25993:12:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26015:2:11","type":"","value":"96"},{"name":"value1","nodeType":"YulIdentifier","src":"26019:6:11"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26011:3:11"},"nodeType":"YulFunctionCall","src":"26011:15:11"},{"name":"_1","nodeType":"YulIdentifier","src":"26028:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26007:3:11"},"nodeType":"YulFunctionCall","src":"26007:24:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25986:6:11"},"nodeType":"YulFunctionCall","src":"25986:46:11"},"nodeType":"YulExpressionStatement","src":"25986:46:11"},{"nodeType":"YulAssignment","src":"26041:19:11","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26052:3:11"},{"kind":"number","nodeType":"YulLiteral","src":"26057:2:11","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26048:3:11"},"nodeType":"YulFunctionCall","src":"26048:12:11"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26041:3:11"}]}]},"name":"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25848:3:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25853:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25861:6:11","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25872:3:11","type":""}],"src":"25733:333:11"},{"body":{"nodeType":"YulBlock","src":"26344:452:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26361:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26376:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"26384:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26372:3:11"},"nodeType":"YulFunctionCall","src":"26372:19:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26354:6:11"},"nodeType":"YulFunctionCall","src":"26354:38:11"},"nodeType":"YulExpressionStatement","src":"26354:38:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26412:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26423:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26408:3:11"},"nodeType":"YulFunctionCall","src":"26408:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"26428:3:11","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26401:6:11"},"nodeType":"YulFunctionCall","src":"26401:31:11"},"nodeType":"YulExpressionStatement","src":"26401:31:11"},{"nodeType":"YulVariableDeclaration","src":"26441:59:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26472:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26484:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26495:3:11","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26480:3:11"},"nodeType":"YulFunctionCall","src":"26480:19:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"26455:16:11"},"nodeType":"YulFunctionCall","src":"26455:45:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"26445:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26520:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26531:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26516:3:11"},"nodeType":"YulFunctionCall","src":"26516:18:11"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26540:6:11"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26556:3:11","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"26561:1:11","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"26552:3:11"},"nodeType":"YulFunctionCall","src":"26552:11:11"},{"kind":"number","nodeType":"YulLiteral","src":"26565:1:11","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26548:3:11"},"nodeType":"YulFunctionCall","src":"26548:19:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26536:3:11"},"nodeType":"YulFunctionCall","src":"26536:32:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26509:6:11"},"nodeType":"YulFunctionCall","src":"26509:60:11"},"nodeType":"YulExpressionStatement","src":"26509:60:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26589:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26600:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26585:3:11"},"nodeType":"YulFunctionCall","src":"26585:18:11"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26609:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"26617:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26605:3:11"},"nodeType":"YulFunctionCall","src":"26605:31:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26578:6:11"},"nodeType":"YulFunctionCall","src":"26578:59:11"},"nodeType":"YulExpressionStatement","src":"26578:59:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26657:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26668:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26653:3:11"},"nodeType":"YulFunctionCall","src":"26653:19:11"},{"name":"value4","nodeType":"YulIdentifier","src":"26674:6:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26646:6:11"},"nodeType":"YulFunctionCall","src":"26646:35:11"},"nodeType":"YulExpressionStatement","src":"26646:35:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26701:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"26712:3:11","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26697:3:11"},"nodeType":"YulFunctionCall","src":"26697:19:11"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"26722:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"26730:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26718:3:11"},"nodeType":"YulFunctionCall","src":"26718:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26690:6:11"},"nodeType":"YulFunctionCall","src":"26690:51:11"},"nodeType":"YulExpressionStatement","src":"26690:51:11"},{"nodeType":"YulAssignment","src":"26750:40:11","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"26775:6:11"},{"name":"tail_1","nodeType":"YulIdentifier","src":"26783:6:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"26758:16:11"},"nodeType":"YulFunctionCall","src":"26758:32:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26750:4:11"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_uint256_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26273:9:11","type":""},{"name":"value5","nodeType":"YulTypedName","src":"26284:6:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"26292:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26300:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26308:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26316:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26324:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26335:4:11","type":""}],"src":"26071:725:11"},{"body":{"nodeType":"YulBlock","src":"26975:228:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26992:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27003:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26985:6:11"},"nodeType":"YulFunctionCall","src":"26985:21:11"},"nodeType":"YulExpressionStatement","src":"26985:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27026:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27037:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27022:3:11"},"nodeType":"YulFunctionCall","src":"27022:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"27042:2:11","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27015:6:11"},"nodeType":"YulFunctionCall","src":"27015:30:11"},"nodeType":"YulExpressionStatement","src":"27015:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27065:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27076:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27061:3:11"},"nodeType":"YulFunctionCall","src":"27061:18:11"},{"hexValue":"4c617965725a65726f4d6f636b3a206473744e6174697665416d7420746f6f20","kind":"string","nodeType":"YulLiteral","src":"27081:34:11","type":"","value":"LayerZeroMock: dstNativeAmt too "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27054:6:11"},"nodeType":"YulFunctionCall","src":"27054:62:11"},"nodeType":"YulExpressionStatement","src":"27054:62:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27136:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27147:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27132:3:11"},"nodeType":"YulFunctionCall","src":"27132:18:11"},{"hexValue":"6c6172676520","kind":"string","nodeType":"YulLiteral","src":"27152:8:11","type":"","value":"large "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27125:6:11"},"nodeType":"YulFunctionCall","src":"27125:36:11"},"nodeType":"YulExpressionStatement","src":"27125:36:11"},{"nodeType":"YulAssignment","src":"27170:27:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27182:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"27193:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27178:3:11"},"nodeType":"YulFunctionCall","src":"27178:19:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27170:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9ed68b89a8d51980886c19b98768f5848012f002a5537f0951f8528791f91206__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26952:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26966:4:11","type":""}],"src":"26801:402:11"},{"body":{"nodeType":"YulBlock","src":"27260:116:11","statements":[{"nodeType":"YulAssignment","src":"27270:20:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27285:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"27288:1:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27281:3:11"},"nodeType":"YulFunctionCall","src":"27281:9:11"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"27270:7:11"}]},{"body":{"nodeType":"YulBlock","src":"27348:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27350:16:11"},"nodeType":"YulFunctionCall","src":"27350:18:11"},"nodeType":"YulExpressionStatement","src":"27350:18:11"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27319:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27312:6:11"},"nodeType":"YulFunctionCall","src":"27312:9:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27326:1:11"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"27333:7:11"},{"name":"x","nodeType":"YulIdentifier","src":"27342:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"27329:3:11"},"nodeType":"YulFunctionCall","src":"27329:15:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27323:2:11"},"nodeType":"YulFunctionCall","src":"27323:22:11"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"27309:2:11"},"nodeType":"YulFunctionCall","src":"27309:37:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27302:6:11"},"nodeType":"YulFunctionCall","src":"27302:45:11"},"nodeType":"YulIf","src":"27299:71:11"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27239:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"27242:1:11","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"27248:7:11","type":""}],"src":"27208:168:11"},{"body":{"nodeType":"YulBlock","src":"27413:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27430:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27437:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"27442:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"27433:3:11"},"nodeType":"YulFunctionCall","src":"27433:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27423:6:11"},"nodeType":"YulFunctionCall","src":"27423:31:11"},"nodeType":"YulExpressionStatement","src":"27423:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27470:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27473:4:11","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27463:6:11"},"nodeType":"YulFunctionCall","src":"27463:15:11"},"nodeType":"YulExpressionStatement","src":"27463:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27494:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27497:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27487:6:11"},"nodeType":"YulFunctionCall","src":"27487:15:11"},"nodeType":"YulExpressionStatement","src":"27487:15:11"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"27381:127:11"},{"body":{"nodeType":"YulBlock","src":"27559:74:11","statements":[{"body":{"nodeType":"YulBlock","src":"27582:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"27584:16:11"},"nodeType":"YulFunctionCall","src":"27584:18:11"},"nodeType":"YulExpressionStatement","src":"27584:18:11"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27579:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27572:6:11"},"nodeType":"YulFunctionCall","src":"27572:9:11"},"nodeType":"YulIf","src":"27569:35:11"},{"nodeType":"YulAssignment","src":"27613:14:11","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27622:1:11"},{"name":"y","nodeType":"YulIdentifier","src":"27625:1:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"27618:3:11"},"nodeType":"YulFunctionCall","src":"27618:9:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"27613:1:11"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27544:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"27547:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"27553:1:11","type":""}],"src":"27513:120:11"},{"body":{"nodeType":"YulBlock","src":"27690:222:11","statements":[{"nodeType":"YulVariableDeclaration","src":"27700:44:11","value":{"kind":"number","nodeType":"YulLiteral","src":"27710:34:11","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"27704:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"27753:46:11","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27780:1:11"},{"name":"_1","nodeType":"YulIdentifier","src":"27783:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27776:3:11"},"nodeType":"YulFunctionCall","src":"27776:10:11"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27792:1:11"},{"name":"_1","nodeType":"YulIdentifier","src":"27795:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27788:3:11"},"nodeType":"YulFunctionCall","src":"27788:10:11"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27772:3:11"},"nodeType":"YulFunctionCall","src":"27772:27:11"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"27757:11:11","type":""}]},{"nodeType":"YulAssignment","src":"27808:31:11","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"27823:11:11"},{"name":"_1","nodeType":"YulIdentifier","src":"27836:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27819:3:11"},"nodeType":"YulFunctionCall","src":"27819:20:11"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"27808:7:11"}]},{"body":{"nodeType":"YulBlock","src":"27884:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27886:16:11"},"nodeType":"YulFunctionCall","src":"27886:18:11"},"nodeType":"YulExpressionStatement","src":"27886:18:11"}]},"condition":{"arguments":[{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"27861:7:11"},{"name":"product_raw","nodeType":"YulIdentifier","src":"27870:11:11"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27858:2:11"},"nodeType":"YulFunctionCall","src":"27858:24:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27851:6:11"},"nodeType":"YulFunctionCall","src":"27851:32:11"},"nodeType":"YulIf","src":"27848:58:11"}]},"name":"checked_mul_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27669:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"27672:1:11","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"27678:7:11","type":""}],"src":"27638:274:11"},{"body":{"nodeType":"YulBlock","src":"27963:170:11","statements":[{"nodeType":"YulVariableDeclaration","src":"27973:44:11","value":{"kind":"number","nodeType":"YulLiteral","src":"27983:34:11","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"27977:2:11","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28026:21:11","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28041:1:11"},{"name":"_1","nodeType":"YulIdentifier","src":"28044:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28037:3:11"},"nodeType":"YulFunctionCall","src":"28037:10:11"},"variables":[{"name":"y_1","nodeType":"YulTypedName","src":"28030:3:11","type":""}]},{"body":{"nodeType":"YulBlock","src":"28071:22:11","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"28073:16:11"},"nodeType":"YulFunctionCall","src":"28073:18:11"},"nodeType":"YulExpressionStatement","src":"28073:18:11"}]},"condition":{"arguments":[{"name":"y_1","nodeType":"YulIdentifier","src":"28066:3:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28059:6:11"},"nodeType":"YulFunctionCall","src":"28059:11:11"},"nodeType":"YulIf","src":"28056:37:11"},{"nodeType":"YulAssignment","src":"28102:25:11","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28115:1:11"},{"name":"_1","nodeType":"YulIdentifier","src":"28118:2:11"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28111:3:11"},"nodeType":"YulFunctionCall","src":"28111:10:11"},{"name":"y_1","nodeType":"YulIdentifier","src":"28123:3:11"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28107:3:11"},"nodeType":"YulFunctionCall","src":"28107:20:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28102:1:11"}]}]},"name":"checked_div_t_uint128","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27948:1:11","type":""},{"name":"y","nodeType":"YulTypedName","src":"27951:1:11","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"27957:1:11","type":""}],"src":"27917:216:11"},{"body":{"nodeType":"YulBlock","src":"28365:355:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28382:9:11"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28397:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"28405:6:11","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28393:3:11"},"nodeType":"YulFunctionCall","src":"28393:19:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28375:6:11"},"nodeType":"YulFunctionCall","src":"28375:38:11"},"nodeType":"YulExpressionStatement","src":"28375:38:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28433:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"28444:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28429:3:11"},"nodeType":"YulFunctionCall","src":"28429:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"28449:3:11","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28422:6:11"},"nodeType":"YulFunctionCall","src":"28422:31:11"},"nodeType":"YulExpressionStatement","src":"28422:31:11"},{"nodeType":"YulVariableDeclaration","src":"28462:76:11","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28502:6:11"},{"name":"value2","nodeType":"YulIdentifier","src":"28510:6:11"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28522:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"28533:3:11","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28518:3:11"},"nodeType":"YulFunctionCall","src":"28518:19:11"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"28476:25:11"},"nodeType":"YulFunctionCall","src":"28476:62:11"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"28466:6:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28558:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"28569:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28554:3:11"},"nodeType":"YulFunctionCall","src":"28554:18:11"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"28578:6:11"},{"kind":"number","nodeType":"YulLiteral","src":"28586:18:11","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28574:3:11"},"nodeType":"YulFunctionCall","src":"28574:31:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28547:6:11"},"nodeType":"YulFunctionCall","src":"28547:59:11"},"nodeType":"YulExpressionStatement","src":"28547:59:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28626:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"28637:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28622:3:11"},"nodeType":"YulFunctionCall","src":"28622:18:11"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"28646:6:11"},{"name":"headStart","nodeType":"YulIdentifier","src":"28654:9:11"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28642:3:11"},"nodeType":"YulFunctionCall","src":"28642:22:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28615:6:11"},"nodeType":"YulFunctionCall","src":"28615:50:11"},"nodeType":"YulExpressionStatement","src":"28615:50:11"},{"nodeType":"YulAssignment","src":"28674:40:11","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"28699:6:11"},{"name":"tail_1","nodeType":"YulIdentifier","src":"28707:6:11"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"28682:16:11"},"nodeType":"YulFunctionCall","src":"28682:32:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28674:4:11"}]}]},"name":"abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28302:9:11","type":""},{"name":"value4","nodeType":"YulTypedName","src":"28313:6:11","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28321:6:11","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28329:6:11","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28337:6:11","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28345:6:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28356:4:11","type":""}],"src":"28138:582:11"},{"body":{"nodeType":"YulBlock","src":"28757:95:11","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28774:1:11","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28781:3:11","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"28786:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"28777:3:11"},"nodeType":"YulFunctionCall","src":"28777:20:11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28767:6:11"},"nodeType":"YulFunctionCall","src":"28767:31:11"},"nodeType":"YulExpressionStatement","src":"28767:31:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28814:1:11","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28817:4:11","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28807:6:11"},"nodeType":"YulFunctionCall","src":"28807:15:11"},"nodeType":"YulExpressionStatement","src":"28807:15:11"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28838:1:11","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28841:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28831:6:11"},"nodeType":"YulFunctionCall","src":"28831:15:11"},"nodeType":"YulExpressionStatement","src":"28831:15:11"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"28725:127:11"},{"body":{"nodeType":"YulBlock","src":"29031:171:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29048:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29059:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29041:6:11"},"nodeType":"YulFunctionCall","src":"29041:21:11"},"nodeType":"YulExpressionStatement","src":"29041:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29082:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29093:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29078:3:11"},"nodeType":"YulFunctionCall","src":"29078:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"29098:2:11","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29071:6:11"},"nodeType":"YulFunctionCall","src":"29071:30:11"},"nodeType":"YulExpressionStatement","src":"29071:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29121:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29132:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29117:3:11"},"nodeType":"YulFunctionCall","src":"29117:18:11"},{"hexValue":"496e76616c69642061646170746572506172616d73","kind":"string","nodeType":"YulLiteral","src":"29137:23:11","type":"","value":"Invalid adapterParams"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29110:6:11"},"nodeType":"YulFunctionCall","src":"29110:51:11"},"nodeType":"YulExpressionStatement","src":"29110:51:11"},{"nodeType":"YulAssignment","src":"29170:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29182:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29193:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29178:3:11"},"nodeType":"YulFunctionCall","src":"29178:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29170:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29008:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29022:4:11","type":""}],"src":"28857:345:11"},{"body":{"nodeType":"YulBlock","src":"29381:168:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29398:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29409:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29391:6:11"},"nodeType":"YulFunctionCall","src":"29391:21:11"},"nodeType":"YulExpressionStatement","src":"29391:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29432:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29443:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29428:3:11"},"nodeType":"YulFunctionCall","src":"29428:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"29448:2:11","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29421:6:11"},"nodeType":"YulFunctionCall","src":"29421:30:11"},"nodeType":"YulExpressionStatement","src":"29421:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29471:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29482:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29467:3:11"},"nodeType":"YulFunctionCall","src":"29467:18:11"},{"hexValue":"556e737570706f7274656420747854797065","kind":"string","nodeType":"YulLiteral","src":"29487:20:11","type":"","value":"Unsupported txType"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29460:6:11"},"nodeType":"YulFunctionCall","src":"29460:48:11"},"nodeType":"YulExpressionStatement","src":"29460:48:11"},{"nodeType":"YulAssignment","src":"29517:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29529:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29540:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29525:3:11"},"nodeType":"YulFunctionCall","src":"29525:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29517:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29358:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29372:4:11","type":""}],"src":"29207:342:11"},{"body":{"nodeType":"YulBlock","src":"29728:161:11","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29745:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29756:2:11","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29738:6:11"},"nodeType":"YulFunctionCall","src":"29738:21:11"},"nodeType":"YulExpressionStatement","src":"29738:21:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29779:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29790:2:11","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29775:3:11"},"nodeType":"YulFunctionCall","src":"29775:18:11"},{"kind":"number","nodeType":"YulLiteral","src":"29795:2:11","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29768:6:11"},"nodeType":"YulFunctionCall","src":"29768:30:11"},"nodeType":"YulExpressionStatement","src":"29768:30:11"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29818:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29829:2:11","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29814:3:11"},"nodeType":"YulFunctionCall","src":"29814:18:11"},{"hexValue":"47617320746f6f206c6f77","kind":"string","nodeType":"YulLiteral","src":"29834:13:11","type":"","value":"Gas too low"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29807:6:11"},"nodeType":"YulFunctionCall","src":"29807:41:11"},"nodeType":"YulExpressionStatement","src":"29807:41:11"},{"nodeType":"YulAssignment","src":"29857:26:11","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29869:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"29880:2:11","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29865:3:11"},"nodeType":"YulFunctionCall","src":"29865:18:11"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29857:4:11"}]}]},"name":"abi_encode_tuple_t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29705:9:11","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29719:4:11","type":""}],"src":"29554:335:11"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_uint64_t_bytes_memory_ptr__to_t_address_t_uint64_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffff))\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_bytes(value2, add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_uint128(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint128t_uint128t_uint128t_uint64t_uint64(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint128(headStart)\n        value1 := abi_decode_uint128(add(headStart, 32))\n        value2 := abi_decode_uint128(add(headStart, 64))\n        value3 := abi_decode_uint64(add(headStart, 96))\n        value4 := abi_decode_uint64(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint16t_addresst_bytes_memory_ptrt_boolt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let value_1 := calldataload(add(headStart, 96))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value3 := value_1\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint64_t_address_t_bytes32__to_t_uint64_t_address_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_uint16t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint128_t_uint128_t_uint128_t_uint64_t_uint64__to_t_uint128_t_uint128_t_uint128_t_uint64_t_uint64__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        let _2 := 0xffffffffffffffff\n        mstore(add(headStart, 96), and(value3, _2))\n        mstore(add(headStart, 128), and(value4, _2))\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint16t_bytes_calldata_ptrt_addresst_uint64t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value3 := value\n        value4 := abi_decode_uint64(add(headStart, 96))\n        value5 := calldataload(add(headStart, 128))\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_uint16t_bytes_memory_ptrt_bytes_calldata_ptrt_address_payablet_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value4 := value\n        let value_1 := calldataload(add(headStart, 128))\n        validator_revert_address(value_1)\n        value5 := value_1\n        let offset_2 := calldataload(add(headStart, 160))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value6 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint16t_uint16t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_51a3ef37d923cf8e75eb89061483426b10018e2e4b4ca788f8efcc1c7ad071db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"LayerZeroMock: no stored payload\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3967011d6285a9dce57c3ff82ee9dd83446fd39eaaeb6fa26af022508e44801b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"LayerZeroMock: invalid caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_5d0b005579c4d5f607baec096f4a22c77289f237586c7362a7902ea2a3c322fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"LayerZeroMock: invalid payload\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes_calldata_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_bytes_calldata(value1, value2, add(headStart, 128))\n        mstore(add(headStart, 64), and(value3, 0xffffffffffffffff))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_bytes_calldata(value4, value5, tail_1)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_address__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 128))\n        mstore(add(headStart, 64), and(value3, 0xffffffffffffffff))\n        mstore(add(headStart, 96), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_82caa7769a2a1defb5e8d4082900c39c0f04eedfd5e921c1e3bf1d16730a12ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"LayerZeroMock: no receive reentr\")\n        mstore(add(headStart, 96), \"ancy\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint64(value) -> ret\n    {\n        let _1 := 0xffffffffffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_cfe15a20060cae4027edaeadac99a28b9a581999e01bac9619e7f52b82ee25ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"LayerZeroMock: wrong nonce\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function copy_byte_array_to_storage_from_t_bytes_storage_to_t_bytes_storage(slot, src)\n    {\n        if eq(slot, src) { leave }\n        let newLen := extract_byte_array_length(sload(src))\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let src_1 := array_dataslot_bytes_storage(src)\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, sload(add(src_1, srcOffset)))\n                let _1 := 1\n                dstPtr := add(dstPtr, _1)\n                srcOffset := add(srcOffset, _1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := sload(add(src_1, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := sload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_address_t_uint64_t_bytes_calldata_ptr_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 192)\n        let tail_1 := abi_encode_bytes_calldata(value1, value2, add(headStart, 192))\n        mstore(add(headStart, 64), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), and(value4, 0xffffffffffffffff))\n        mstore(add(headStart, 128), sub(tail_1, headStart))\n        let tail_2 := abi_encode_bytes_calldata(value5, value6, tail_1)\n        mstore(add(headStart, 160), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value7, tail_2)\n    }\n    function abi_encode_tuple_t_stringliteral_73b1d6d5ba54cd5e4e2ebace0c8623f647e51a2b5e72af7e7df83d716224bbcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"LayerZeroMock: no send reentranc\")\n        mstore(add(headStart, 96), \"y\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a84f16779931db7ec618d2bd334bd656888d24e7e320bdf2dd7a0a0862d1916b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"LayerZeroMock: incorrect remote \")\n        mstore(add(headStart, 96), \"address size\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_03f2c372695dfb7017d0d1b5b039a7a7c563c382ff38f9563e77eedca785e4df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"LayerZeroMock: destination Layer\")\n        mstore(add(headStart, 96), \"Zero Endpoint not found\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1d7a441e6351efbe3589b780f6d9098a5373ce9246e759367f3fb559adf16b4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"LayerZeroMock: not enough native\")\n        mstore(add(headStart, 96), \" for fees\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_dcfb2fb846bf29eed16ab1966cc303d2b0cbdcaede7d9e78ee4c30c1a8119790__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"LayerZeroMock: failed to refund\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_uint256_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_address_t_uint64_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 192)\n        let tail_1 := abi_encode_bytes(value1, add(headStart, 192))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffff))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value5, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_9ed68b89a8d51980886c19b98768f5848012f002a5537f0951f8528791f91206__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LayerZeroMock: dstNativeAmt too \")\n        mstore(add(headStart, 96), \"large \")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint128(x, y) -> product\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        let product_raw := mul(and(x, _1), and(y, _1))\n        product := and(product_raw, _1)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n    function checked_div_t_uint128(x, y) -> r\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        let y_1 := and(y, _1)\n        if iszero(y_1) { panic_error_0x12() }\n        r := div(and(x, _1), y_1)\n    }\n    function abi_encode_tuple_t_uint16_t_bytes_calldata_ptr_t_uint64_t_bytes_memory_ptr__to_t_uint16_t_bytes_memory_ptr_t_uint64_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffff))\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_bytes_calldata(value1, value2, add(headStart, 128))\n        mstore(add(headStart, 64), and(value3, 0xffffffffffffffff))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value4, tail_1)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_0f005c8f9eb8529feefbf08a495f7eb29117b455a305de4654f9babf9705a811__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid adapterParams\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4077c8a598c34a32244e743d20d5e8902c44c8500a46b23d668292bbbe5d2c83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Unsupported txType\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9b212afc0809d994d44a873b9f3c4e7606021e0d8d455342b5758a2ae53b8e2b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Gas too low\")\n        tail := add(headStart, 96)\n    }\n}","id":11,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9924D33B GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xCA066B35 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xE97A448A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE97A448A EQ PUSH2 0x80A JUMPI DUP1 PUSH4 0xF5ECBDBC EQ PUSH2 0x826 JUMPI DUP1 PUSH4 0xF9CD3CEB EQ PUSH2 0x858 JUMPI DUP1 PUSH4 0xFBBA623B EQ PUSH2 0x86E JUMPI DUP1 PUSH4 0xFDC07C70 EQ PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCA066B35 EQ PUSH2 0x78A JUMPI DUP1 PUSH4 0xCBED8B9C EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0xD23104F1 EQ PUSH2 0x7CC JUMPI DUP1 PUSH4 0xDA1A7C9A EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xDB14F305 EQ PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB6D9EF60 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xB6D9EF60 EQ PUSH2 0x6B8 JUMPI DUP1 PUSH4 0xC08F15A1 EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0xC2FA4813 EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0xC5803100 EQ PUSH2 0x741 JUMPI DUP1 PUSH4 0xC81B383A EQ PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9924D33B EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0x9C729DA1 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xAAFF5F16 EQ PUSH2 0x657 JUMPI DUP1 PUSH4 0xB2086499 EQ PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3408E470 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x71BA2FD6 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x71BA2FD6 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x76A386DC EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x7A145748 EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0x7F6DF8E6 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0x907C5E7E EQ PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3408E470 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x3E0DD83E EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x40A7BB10 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x42D65A8D EQ PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10DDB137 GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x10DDB137 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x12A9EE6B EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x240DE277 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x272BD384 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x2C365E25 EQ PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D3277F EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x7E0DB17 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x96568F6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xEAF6EA6 EQ PUSH2 0x2A8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x23A SWAP2 SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x21CB JUMP JUMPDEST POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0x21FB JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2354 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x242C JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x248F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP5 DUP7 AND DUP6 MUL OR PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP4 SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 AND SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP2 SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xFFFF AND PUSH2 0x295 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x2C8 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x24F4 JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x439 CALLDATASIZE PUSH1 0x4 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0xB7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45E PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x21FB JUMP JUMPDEST POP ADDRESS SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E2 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x2594 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x25E1 JUMP JUMPDEST PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x567 PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0x5C1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL SWAP3 DUP4 SWAP1 DIV DUP3 AND SWAP3 SWAP2 DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x620 CALLDATASIZE PUSH1 0x4 PUSH2 0x2594 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x672 CALLDATASIZE PUSH1 0x4 PUSH2 0x2618 JUMP JUMPDEST PUSH2 0xD39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x692 CALLDATASIZE PUSH1 0x4 PUSH2 0x25E1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x6D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2698 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x6F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x73C CALLDATASIZE PUSH1 0x4 PUSH2 0x26CF JUMP JUMPDEST PUSH2 0xF4F JUMP JUMPDEST PUSH2 0x272 PUSH2 0x74F CALLDATASIZE PUSH1 0x4 PUSH2 0x277E JUMP JUMPDEST PUSH2 0x168A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45E PUSH2 0x76F CALLDATASIZE PUSH1 0x4 PUSH2 0x21FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x796 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 EQ SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x7C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2845 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH1 0x1 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x295 SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0x841 CALLDATASIZE PUSH1 0x4 PUSH2 0x28AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x567 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x889 CALLDATASIZE PUSH1 0x4 PUSH2 0x28F9 JUMP JUMPDEST PUSH2 0x1C25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0x8A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2260 JUMP JUMPDEST PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x8D4 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO ISZERO SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP1 DUP6 ADD DUP4 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP4 ADD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP2 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x92B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP7 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP5 POP SWAP2 SWAP3 POP PUSH2 0x96E SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x99A SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x9FE SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA2A SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA77 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA4C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA77 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA5A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD GT PUSH2 0xB1C JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0xA99 SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAC5 SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB12 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAE7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB12 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAF5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xB1E JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB31 DUP10 PUSH1 0x1 DUP11 DUP11 MLOAD DUP7 PUSH2 0x1C7A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB42 DUP8 DUP4 PUSH1 0x6 SLOAD PUSH2 0x1E13 JUMP JUMPDEST SWAP1 POP DUP7 PUSH2 0xB52 JUMPI DUP1 SWAP5 POP DUP5 PUSH2 0xB57 JUMP JUMPDEST DUP1 SWAP4 POP DUP4 JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0xB65 DUP4 DUP8 PUSH2 0x2995 JUMP JUMPDEST PUSH2 0xB6F SWAP2 SWAP1 PUSH2 0x2995 JUMP JUMPDEST SWAP5 POP POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xBA1 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2073746F726564207061796C6F6164 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A20696E76616C69642063616C6C6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 MLOAD PUSH32 0x23D2684F396E92A6E2FF2D16F98E6FEA00D50CB27A64B531BC0748F730211F98 SWAP1 PUSH2 0xCB2 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x29D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x7C6 DUP5 DUP5 DUP5 PUSH2 0x1E50 JUMP JUMPDEST PUSH2 0xFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xD20 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xD5C SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xDBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2073746F726564207061796C6F6164 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP3 EQ DUP1 ISZERO PUSH2 0xDF2 JUMPI POP DUP1 PUSH1 0x1 ADD SLOAD DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDE8 SWAP3 SWAP2 SWAP1 PUSH2 0x2935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A20696E76616C6964207061796C6F61640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH2 0xFFFF DUP9 AND DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH2 0xE88 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 SLOAD PUSH3 0x1D3567 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH3 0x1D3567 SWAP1 PUSH2 0xED4 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP8 SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x29EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x612434F39581C8E7D99746C9C20C6EB0CE8C0EB99F007C5719D620841370957D DUP9 DUP9 DUP9 DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xF3D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2072656365697665207265656E7472 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E6379 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x200 OR SWAP1 SSTORE PUSH2 0xFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xFE7 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x8 PUSH1 0x0 DUP11 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1022 SWAP3 SWAP2 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1048 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2A85 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ PUSH2 0x10CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A2077726F6E67206E6F6E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD ISZERO PUSH2 0x139D JUMPI PUSH2 0xFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x10F8 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP2 MSTORE POP DUP3 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x132E JUMPI DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP5 MUL ADD DUP1 SLOAD SWAP2 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP4 SWAP3 SWAP2 DUP3 ADD SWAP1 PUSH2 0x11D9 SWAP1 DUP3 PUSH2 0x2AFA JUMP JUMPDEST POP POP POP PUSH1 0x0 JUMPDEST DUP3 SLOAD PUSH2 0x11ED SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x12B3 JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1206 JUMPI PUSH2 0x1206 PUSH2 0x2BCC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD DUP4 DUP3 PUSH1 0x1 PUSH2 0x1222 SWAP2 SWAP1 PUSH2 0x2995 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1232 JUMPI PUSH2 0x1232 PUSH2 0x2BCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP3 SSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND OR PUSH1 0x1 PUSH1 0xA0 SHL SWAP3 DUP4 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD SWAP1 PUSH2 0x129C SWAP1 DUP5 ADD DUP3 PUSH2 0x2BE2 JUMP JUMPDEST POP SWAP1 POP POP DUP1 DUP1 PUSH2 0x12AB SWAP1 PUSH2 0x2CBC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11DF JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x12C8 JUMPI PUSH2 0x12C8 PUSH2 0x2BCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD SWAP3 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x1325 SWAP1 DUP3 PUSH2 0x2AFA JUMP JUMPDEST POP SWAP1 POP POP PUSH2 0x1396 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP5 MUL ADD DUP1 SLOAD SWAP2 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR DUP3 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP4 SWAP3 SWAP2 DUP3 ADD SWAP1 PUSH2 0x1392 SWAP1 DUP3 PUSH2 0x2AFA JUMP JUMPDEST POP POP POP JUMPDEST POP POP PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14CB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13EA SWAP3 SWAP2 SWAP1 PUSH2 0x2935 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 MSTORE PUSH2 0xFFFF DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x1419 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD DUP7 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR OR DUP2 SSTORE SWAP4 DUP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP2 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xF9E4D95B62F08222D612B5AB92039CD8FBBBEA550A95E8DF9F927436BBDF5DB SWAP2 PUSH2 0x14B2 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP12 SWAP2 DUP12 SWAP2 SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1D3567 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH3 0x1D3567 SWAP1 DUP7 SWAP1 PUSH2 0x1501 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP13 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x29EF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x152D JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1670 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x155B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1560 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP6 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x159D SWAP3 SWAP2 SWAP1 PUSH2 0x2935 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 MSTORE PUSH2 0xFFFF DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x15CC SWAP1 DUP13 SWAP1 DUP13 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP3 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP3 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0xF9E4D95B62F08222D612B5AB92039CD8FBBBEA550A95E8DF9F927436BBDF5DB SWAP1 PUSH2 0x165A SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP11 SWAP1 PUSH2 0x2CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE JUMPDEST POP POP PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x16E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F2073656E64207265656E7472616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE DUP6 MLOAD PUSH1 0x28 EQ PUSH2 0x175C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A20696E636F72726563742072656D6F746520 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x616464726573732073697A65 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x14 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A2064657374696E6174696F6E204C61796572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x5A65726F20456E64706F696E74206E6F7420666F756E64000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 MLOAD GT PUSH2 0x1889 JUMPI PUSH1 0x7 DUP1 SLOAD PUSH2 0x1806 SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1832 SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x187F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1854 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x187F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1862 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x188B JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18DC DUP12 CALLER DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO ISZERO DUP7 PUSH2 0xA7F JUMP JUMPDEST POP SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x1941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206E6F7420656E6F756768206E6174697665 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x20666F722066656573 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH2 0xFFFF DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP1 PUSH2 0x1975 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2A85 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE SWAP1 POP PUSH1 0x0 DUP3 CALLVALUE PUSH2 0x19A8 SWAP2 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1A55 JUMPI PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19FD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1A53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206661696C656420746F20726566756E6400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1A63 DUP8 PUSH2 0x2047 JUMP JUMPDEST SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP POP DUP2 ISZERO PUSH2 0x1B05 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1ABE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1B03 JUMPI PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x2C7A964CA3DE5EC1D42D9822F9BBD0EB142A59CC9F855E9D93813B773192C7A3 SWAP1 PUSH1 0x0 SWAP1 LOG3 JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SWAP1 DUP2 SHL DUP3 AND PUSH1 0x20 DUP5 ADD MSTORE DUP12 SWAP1 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x48 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP16 DUP16 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC2FA4813 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP5 DUP15 DUP12 DUP11 DUP8 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD2 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH2 0x1C31 DUP3 DUP3 PUSH2 0x2AFA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1C58 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C89 DUP6 PUSH2 0x2047 JUMP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP4 PUSH2 0xFFFF AND PUSH1 0x2 SUB PUSH2 0x1D15 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 GT ISZERO PUSH2 0x1D08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C617965725A65726F4D6F636B3A206473744E6174697665416D7420746F6F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3630B933B29 PUSH1 0xD5 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x1D12 DUP3 DUP3 PUSH2 0x2995 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1D36 SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2995 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D53 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2D9B JUMP JUMPDEST SWAP1 POP PUSH2 0x1D5F DUP2 DUP4 PUSH2 0x2995 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP3 POP PUSH1 0x0 SWAP1 PUSH5 0x2540BE400 SWAP1 PUSH2 0x1D82 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 PUSH2 0x2D9B JUMP JUMPDEST PUSH2 0x1D8C SWAP2 SWAP1 PUSH2 0x2DC8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH5 0x2540BE400 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP3 PUSH2 0x1DCF SWAP3 PUSH1 0x1 PUSH1 0xC0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV AND PUSH2 0x2DDC JUMP JUMPDEST PUSH2 0x1DD9 SWAP2 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST PUSH2 0x1DE3 SWAP2 SWAP1 PUSH2 0x2E07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP PUSH2 0x1DF8 DUP2 DUP12 PUSH2 0x2D9B JUMP JUMPDEST PUSH2 0x1E02 SWAP1 DUP4 PUSH2 0x2995 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO PUSH2 0x1E24 JUMPI POP PUSH1 0x4 SLOAD PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2710 SWAP1 PUSH2 0x1E35 DUP5 DUP7 PUSH2 0x2995 JUMP JUMPDEST PUSH2 0x1E3F SWAP2 SWAP1 PUSH2 0x2D9B JUMP JUMPDEST PUSH2 0x1E49 SWAP2 SWAP1 PUSH2 0x2DC8 JUMP JUMPDEST SWAP1 POP PUSH2 0x8ED JUMP JUMPDEST PUSH2 0xFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x1E73 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x2935 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x7C6 JUMPI DUP1 SLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH2 0x1E9E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2BB9 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1EAE JUMPI PUSH2 0x1EAE PUSH2 0x2BCC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 DUP4 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x1F07 SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F33 SWAP1 PUSH2 0x2945 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F80 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F55 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F80 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F63 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x1D3567 DUP7 DUP7 DUP7 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FCA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E2D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 DUP1 SLOAD DUP1 PUSH2 0x200C JUMPI PUSH2 0x200C PUSH2 0x2E78 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x2 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 SSTORE SWAP1 PUSH2 0x203D PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0x2166 JUMP JUMPDEST POP POP SWAP1 SSTORE POP PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x22 EQ DUP1 PUSH2 0x205E JUMPI POP PUSH1 0x42 DUP6 MLOAD GT JUMPDEST PUSH2 0x20A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642061646170746572506172616D73 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD MLOAD SWAP4 POP PUSH1 0x22 DUP6 ADD MLOAD SWAP3 POP DUP4 PUSH2 0xFFFF AND PUSH1 0x1 EQ DUP1 PUSH2 0x20C7 JUMPI POP DUP4 PUSH2 0xFFFF AND PUSH1 0x2 EQ JUMPDEST PUSH2 0x2108 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x556E737570706F7274656420747854797065 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x2146 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x47617320746F6F206C6F77 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xC00 JUMP JUMPDEST DUP4 PUSH2 0xFFFF AND PUSH1 0x2 SUB PUSH2 0x215F JUMPI POP POP PUSH1 0x42 DUP4 ADD MLOAD PUSH1 0x56 DUP5 ADD MLOAD JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x2172 SWAP1 PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x2182 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x21B0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x219C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8ED DUP3 PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x220D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8ED DUP2 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x222A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x227E DUP5 PUSH2 0x21B4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22A5 DUP7 DUP3 DUP8 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x22F3 JUMPI PUSH2 0x22F3 PUSH2 0x22B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x231B JUMPI PUSH2 0x231B PUSH2 0x22B2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2372 DUP5 PUSH2 0x21B4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x238D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2399 DUP7 DUP3 DUP8 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23D0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x23B4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2423 SWAP1 DUP4 ADD DUP5 PUSH2 0x23AA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x243F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x8ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23AA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24B0 DUP7 PUSH2 0x2461 JUMP JUMPDEST SWAP5 POP PUSH2 0x24BE PUSH1 0x20 DUP8 ADD PUSH2 0x2461 JUMP JUMPDEST SWAP4 POP PUSH2 0x24CC PUSH1 0x40 DUP8 ADD PUSH2 0x2461 JUMP JUMPDEST SWAP3 POP PUSH2 0x24DA PUSH1 0x60 DUP8 ADD PUSH2 0x2478 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E8 PUSH1 0x80 DUP8 ADD PUSH2 0x2478 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x250C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2515 DUP7 PUSH2 0x21B4 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x2525 DUP2 PUSH2 0x21E6 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x254D DUP10 DUP4 DUP11 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP2 ISZERO ISZERO DUP3 EQ PUSH2 0x2564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x257A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2587 DUP9 DUP3 DUP10 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25B0 DUP4 PUSH2 0x21B4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x25CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25D7 DUP6 DUP3 DUP7 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25FD DUP4 PUSH2 0x21B4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x260D DUP2 PUSH2 0x21E6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2639 DUP7 PUSH2 0x21B4 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2661 DUP10 DUP4 DUP11 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x267A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2687 DUP9 DUP3 DUP10 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x25FD DUP2 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x26EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26F4 DUP10 PUSH2 0x21B4 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x271C DUP13 DUP4 DUP14 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2731 DUP3 PUSH2 0x21E6 JUMP JUMPDEST DUP2 SWAP7 POP PUSH2 0x2740 PUSH1 0x60 DUP13 ADD PUSH2 0x2478 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x275D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276A DUP12 DUP3 DUP13 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27A2 DUP9 PUSH2 0x21B4 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x27BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27CA DUP12 DUP4 DUP13 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x27E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27EC DUP12 DUP4 DUP13 ADD PUSH2 0x2218 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2801 DUP3 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP1 PUSH2 0x2813 DUP3 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x2829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2836 DUP11 DUP3 DUP12 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x285B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2864 DUP6 PUSH2 0x21B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2872 PUSH1 0x20 DUP7 ADD PUSH2 0x21B4 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28A0 DUP8 DUP3 DUP9 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x28C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28CB DUP6 PUSH2 0x21B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x28D9 PUSH1 0x20 DUP7 ADD PUSH2 0x21B4 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x28E9 DUP2 PUSH2 0x21E6 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x290B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x292D DUP5 DUP3 DUP6 ADD PUSH2 0x22C8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2959 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2979 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xCF7 JUMPI PUSH2 0xCF7 PUSH2 0x297F JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2423 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x29A8 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2A0D PUSH1 0x80 DUP4 ADD DUP8 DUP10 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2A2F DUP2 DUP6 DUP8 PUSH2 0x29A8 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2A5A PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x2AA1 JUMPI PUSH2 0x2AA1 PUSH2 0x297F JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2AF5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2AD2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2AF1 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2ADE JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B13 JUMPI PUSH2 0x2B13 PUSH2 0x22B2 JUMP JUMPDEST PUSH2 0x2B27 DUP2 PUSH2 0x2B21 DUP5 SLOAD PUSH2 0x2945 JUMP JUMPDEST DUP5 PUSH2 0x2AAB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2B5C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2B44 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2AF1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2B8B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2B6C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2BA9 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xCF7 JUMPI PUSH2 0xCF7 PUSH2 0x297F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB PUSH2 0x2BED JUMPI POP POP JUMP JUMPDEST PUSH2 0x2BF7 DUP3 SLOAD PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C0E JUMPI PUSH2 0x2C0E PUSH2 0x22B2 JUMP JUMPDEST PUSH2 0x2C1C DUP2 PUSH2 0x2B21 DUP5 SLOAD PUSH2 0x2945 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C50 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x2C38 JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2CB5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C8A JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x2C6A JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x2CA8 JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP PUSH1 0x1 DUP4 PUSH1 0x1 SHL ADD DUP5 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2CCE JUMPI PUSH2 0x2CCE PUSH2 0x297F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF DUP10 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2CF3 PUSH1 0xC0 DUP4 ADD DUP10 DUP12 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND PUSH1 0x60 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x2D24 DUP2 DUP7 DUP9 PUSH2 0x29A8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2D38 DUP2 DUP6 PUSH2 0x23AA JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2D64 PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x23AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x2A2F DUP2 DUP6 PUSH2 0x23AA JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xCF7 JUMPI PUSH2 0xCF7 PUSH2 0x297F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2DD7 JUMPI PUSH2 0x2DD7 PUSH2 0x2DB2 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x2DFF JUMPI PUSH2 0x2DFF PUSH2 0x297F JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x2E21 JUMPI PUSH2 0x2E21 PUSH2 0x2DB2 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2E4B PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND PUSH1 0x40 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2E6C DUP2 DUP6 PUSH2 0x23AA JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0xD7 0xBA 0x2C PUSH20 0xA398675676DC636F7D9FCD1F0C0FED865A358DAD DUP11 0xE7 0xAA 0xB1 DUP5 0xE2 COINBASE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"812:15736:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1139:42;;;;;;;;;;-1:-1:-1;1139:42:10;;;;;;;;;;;;;188:25:11;;;244:2;229:18;;222:34;;;;161:18;1139:42:10;;;;;;;;11848:78;;;;;;;;;;-1:-1:-1;11848:78:10;;;;;:::i;:::-;;;;;11394:133;;;;;;;;;;-1:-1:-1;11394:133:10;;;;;:::i;:::-;-1:-1:-1;11519:1:10;;11394:133;;;;1182:6:11;1170:19;;;1152:38;;1140:2;1125:18;11394:133:10;1008:188:11;10434:228:10;;;;;;;;;;-1:-1:-1;10434:228:10;;;;;:::i;:::-;;:::i;:::-;;;2204:14:11;;2197:22;2179:41;;2167:2;2152:18;10434:228:10;2039:187:11;1841:73:10;;;;;;;;;;-1:-1:-1;1841:73:10;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;13817:162::-;;;;;;;;;;-1:-1:-1;13817:162:10;;;;;:::i;:::-;13890:17;:34;;;;13934:26;:38;13817:162;1214:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;13333:478::-;;;;;;;;;;-1:-1:-1;13333:478:10;;;;;:::i;:::-;-1:-1:-1;;;;;13537:47:10;;;-1:-1:-1;;;13594:53:10;;;;;;13537:16;13594:53;13657:32;:51;;;;;;-1:-1:-1;;;;;;13718:35:10;;;;;;;-1:-1:-1;;;;;13718:35:10;;;;;;;;;;-1:-1:-1;;;;;13763:41:10;-1:-1:-1;;;13763:41:10;;;;;;;;13333:478;9502:97;;;;;;;;;;-1:-1:-1;9581:11:10;;;;9502:97;;1042:26;;;;;;;;;;-1:-1:-1;1042:26:10;;;;;;;;;;;8748:748;;;;;;;;;;-1:-1:-1;8748:748:10;;;;;:::i;:::-;;:::i;12019:720::-;;;;;;;;;;-1:-1:-1;12019:720:10;;;;;:::i;:::-;;:::i;10792:121::-;;;;;;;;;;-1:-1:-1;10792:121:10;;;;;:::i;:::-;-1:-1:-1;10901:4:10;;10792:121;;;;-1:-1:-1;;;;;6806:32:11;;;6788:51;;6776:2;6761:18;10792:121:10;6642:203:11;1723:71:10;;;;;;;;;;-1:-1:-1;1723:71:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1723:71:10;;;-1:-1:-1;;;1723:71:10;;-1:-1:-1;;;;;1723:71:10;;;;;;;;-1:-1:-1;;;;;7465:31:11;;;7447:50;;-1:-1:-1;;;;;7533:32:11;;;7528:2;7513:18;;7506:60;7582:18;;;7575:34;7435:2;7420:18;1723:71:10;7247:368:11;8578:164:10;;;;;;;;;;-1:-1:-1;8578:164:10;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8106:31:11;;;8088:50;;8076:2;8061:18;8578:164:10;7944:200:11;12867:173:10;;;;;;;;;;-1:-1:-1;12867:173:10;;;;;:::i;:::-;;:::i;:::-;;;8295:25:11;;;8283:2;8268:18;12867:173:10;8149:177:11;1093:40:10;;;;;;;;;;-1:-1:-1;1093:40:10;;;;;;-1:-1:-1;;;;;1093:40:10;;;;-1:-1:-1;;;1093:40:10;;;;;;;;;;;-1:-1:-1;;;;;1093:40:10;;;;;;-1:-1:-1;;;1093:40:10;;;;;;;;;-1:-1:-1;;;;;8657:15:11;;;8639:34;;8709:15;;;8704:2;8689:18;;8682:43;8761:15;;;;8741:18;;;8734:43;;;;-1:-1:-1;;;;;8850:15:11;;;8845:2;8830:18;;8823:43;8903:15;;;8897:3;8882:19;;8875:44;8573:3;8558:19;1093:40:10;8331:594:11;1340:63:10;;;;;;;;;;-1:-1:-1;1340:63:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1340:63:10;;;9605:823;;;;;;;;;;-1:-1:-1;9605:823:10;;;;;:::i;:::-;;:::i;1484:66::-;;;;;;;;;;-1:-1:-1;1484:66:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1484:66:10;;;13985:87;;;;;;;;;;-1:-1:-1;13985:87:10;;;;;:::i;:::-;14043:9;:22;13985:87;13189:138;;;;;;;;;;-1:-1:-1;13189:138:10;;;;;:::i;:::-;-1:-1:-1;;;;;13277:26:10;;;:16;:26;;;;;;;;;;:43;;-1:-1:-1;;;;;;13277:43:10;;;;;;;;13189:138;6080:2329;;;;;;;;;;-1:-1:-1;6080:2329:10;;;;;:::i;:::-;;:::i;4008:2066::-;;;;;;:::i;:::-;;:::i;953:51::-;;;;;;;;;;-1:-1:-1;953:51:10;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;953:51:10;;;11046:126;;;;;;;;;;;;11131:22;;;;;:34;:22;945:1;11131:34;;11046:126;11675:167;;;;;;;;;;-1:-1:-1;11675:167:10;;;;;:::i;:::-;12107:632;12019:720;;;;13112:71;;;;;;;;;;;;13172:4;13155:21;;-1:-1:-1;;13155:21:10;;;;;13112:71;1011:25;;;;;;;;;;-1:-1:-1;1011:25:10;;;;;;;;10919:121;;;;;;;;;;;;11002:19;;:31;:19;945:1;11002:31;;10919:121;11178:210;;;;;;;;;;-1:-1:-1;11178:210:10;;;;;:::i;:::-;11372:9;;;;;;;;;-1:-1:-1;11372:9:10;;11178:210;;;;;;;1187:21;;;;;;;;;;;;;;;;14078:125;;;;;;;;;;-1:-1:-1;14078:125:10;;;;;:::i;:::-;;:::i;8415:157::-;;;;;;;;;;-1:-1:-1;8415:157:10;;;;;:::i;:::-;;:::i;10434:228::-;10577:26;;;10534:4;10577:26;;;:13;:26;;;;;;:33;;10534:4;;10577:26;:33;;10604:5;;;;10577:33;:::i;:::-;;;;;;;;;;;;;;10627:14;;;:28;;;-1:-1:-1;;10434:228:10;;;;;;:::o;1841:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1841:73:10;;;-1:-1:-1;;;;1841:73:10;;;-1:-1:-1;;;;;1841:73:10;;-1:-1:-1;1841:73:10;;-1:-1:-1;1841:73:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1214:33::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8748:748::-;8960:14;8976:11;8999:26;9052:1;9028:14;:21;:25;:65;;9073:20;9028:65;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9056:14;9028:65;8999:94;;9127:15;9145:80;9160:11;9173:1;9176:16;9194:8;:15;9211:13;9145:14;:80::i;:::-;9127:98;;9261:16;9280:50;9297:9;9308:10;9320:9;;9280:16;:50::i;:::-;9261:69;;9340:9;:58;;9387:11;9375:23;;;9340:58;;;9361:11;9352:20;;;9340:58;-1:-1:-1;9480:9:10;;9455:22;9467:10;9455:9;:22;:::i;:::-;:34;;;;:::i;:::-;9443:46;;8989:507;;;8748:748;;;;;;;;:::o;12019:720::-;12144:26;;;12117:24;12144:26;;;:13;:26;;;;;;:33;;;;12171:5;;;;12144:33;:::i;:::-;;;;;;;;;;;;;;12273:14;;;;12144:33;;-1:-1:-1;12265:73:10;;;;-1:-1:-1;;;12265:73:10;;15017:2:11;12265:73:10;;;14999:21:11;;;15036:18;;;15029:30;15095:34;15075:18;;;15068:62;15147:18;;12265:73:10;;;;;;;;;12356:13;;-1:-1:-1;;;12356:13:10;;-1:-1:-1;;;;;12356:13:10;12373:10;12356:27;12348:69;;;;-1:-1:-1;;;12348:69:10;;15378:2:11;12348:69:10;;;15360:21:11;15417:2;15397:18;;;15390:30;15456:31;15436:18;;;15429:59;15505:18;;12348:69:10;15176:353:11;12348:69:10;12463:20;;-1:-1:-1;;;;;;12493:26:10;;;12482:1;12463:20;12529:14;;:27;12572:40;;;;;;12593:11;;12606:5;;;;12572:40;:::i;:::-;;;;;;;;12700:32;12713:11;12726:5;;12700:12;:32::i;8578:164::-;8699:23;;;8674:6;8699:23;;;:13;:23;;;;;;;;-1:-1:-1;;;;;8699:36:10;;;;;;;;;;-1:-1:-1;;;;;8699:36:10;8578:164;;;;;:::o;12867:173::-;12987:26;;;12964:4;12987:26;;;:13;:26;;;;;;:39;;;;13014:11;;;;12987:39;:::i;:::-;;;;;;;;;;;;;;:46;;-1:-1:-1;12867:173:10;;;;;:::o;9605:823::-;9779:26;;;9752:24;9779:26;;;:13;:26;;;;;;:33;;;;9806:5;;;;9779:33;:::i;:::-;;;;;;;;;;;;;;9830:14;;;;9779:33;;-1:-1:-1;9822:73:10;;;;-1:-1:-1;;;9822:73:10;;15017:2:11;9822:73:10;;;14999:21:11;;;15036:18;;;15029:30;15095:34;15075:18;;;15068:62;15147:18;;9822:73:10;14815:356:11;9822:73:10;9932:16;;-1:-1:-1;;;;;9932:16:10;9913:35;;:76;;;;;9975:2;:14;;;9962:8;;9952:19;;;;;;;:::i;:::-;;;;;;;;:37;9913:76;9905:119;;;;-1:-1:-1;;;9905:119:10;;16338:2:11;9905:119:10;;;16320:21:11;16377:2;16357:18;;;16350:30;16416:32;16396:18;;;16389:60;16466:18;;9905:119:10;16136:354:11;9905:119:10;10056:13;;-1:-1:-1;;;;;;10144:26:10;;;;-1:-1:-1;;10180:14:10;;:27;;;10233:25;;;;;10056:13;10233:25;;;;;;:32;;-1:-1:-1;;;10056:13:10;;;-1:-1:-1;;;;;10056:13:10;;10233:32;;10259:5;;;;10233:32;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;10276:77:10;;-1:-1:-1;;;;;10233:32:10;;-1:-1:-1;;;;;;10276:40:10;;;;;:77;;10317:11;;10330:5;;;;10233:32;;10344:8;;;;10276:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10368:53;10383:11;10396:5;;10403;10410:10;10368:53;;;;;;;;;;:::i;:::-;;;;;;;;9742:686;;;9605:823;;;;;:::o;6080:2329::-;2818:22;;;;;:38;:22;903:1;2818:38;2810:87;;;;-1:-1:-1;;;2810:87:10;;17835:2:11;2810:87:10;;;17817:21:11;17874:2;17854:18;;;17847:30;17913:34;17893:18;;;17886:62;-1:-1:-1;;;17964:18:11;;;17957:34;18008:19;;2810:87:10;17633:400:11;2810:87:10;2907:22;:33;;-1:-1:-1;;2907:33:10;;;;;6352:26:::1;::::0;::::1;-1:-1:-1::0;6352:26:10;;;:13:::1;:26;::::0;;;;;:33;;::::1;::::0;6379:5;;;;6352:33:::1;:::i;:::-;;;;;;;;;;;;;6325:60;;6480:12;:25;6493:11;6480:25;;;;;;;;;;;;;;;6506:5;;6480:32;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;6478:34;;6480:32:::1;::::0;6478:34:::1;::::0;-1:-1:-1;;;;;6478:34:10::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;6478:34:10::1;;;;;-1:-1:-1::0;;;;;6478:34:10::1;;;;;-1:-1:-1::0;;;;;6468:44:10::1;:6;-1:-1:-1::0;;;;;6468:44:10::1;;6460:83;;;::::0;-1:-1:-1;;;6460:83:10;;18454:2:11;6460:83:10::1;::::0;::::1;18436:21:11::0;18493:2;18473:18;;;18466:30;18532:28;18512:18;;;18505:56;18578:18;;6460:83:10::1;18252:350:11::0;6460:83:10::1;6681:14;::::0;::::1;::::0;:28;6677:1726:::1;;6756:26;::::0;::::1;6725:28;6756:26:::0;;;:13:::1;:26;::::0;;;;;:33;;::::1;::::0;6783:5;;;;6756:33:::1;:::i;:::-;;;;;;;;;;;;;6725:64;;6803:27;6833:44;;;;;;;;6847:11;-1:-1:-1::0;;;;;6833:44:10::1;;;;;6860:6;-1:-1:-1::0;;;;;6833:44:10::1;;;;;6868:8;;6833:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;6833:44:10;;-1:-1:-1;7083:11:10;;6803:74;;-1:-1:-1;7083:15:10;7079:436:::1;;7154:17:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;7154:17:10;;;::::1;::::0;;;;;;::::1;::::0;;::::1;;::::0;;;;::::1;::::0;-1:-1:-1;;;;;7154:17:10::1;-1:-1:-1::0;;;7154:17:10::1;-1:-1:-1::0;;;;;;7154:17:10;;;-1:-1:-1;;;;;7154:17:10;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;7164:6;;7154:17;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;7249:6;7244:105;7265:11:::0;;:15:::1;::::0;7279:1:::1;::::0;7265:15:::1;:::i;:::-;7261:1;:19;7244:105;;;7323:4;7328:1;7323:7;;;;;;;;:::i;:::-;;;;;;;;;;;7309:4;7314:1;7318;7314:5;;;;:::i;:::-;7309:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:21;;:11:::1;::::0;;::::1;;:21:::0;;-1:-1:-1;;;;;7309:21:10;;::::1;-1:-1:-1::0;;;;;;7309:21:10;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;7309:21:10;;;;-1:-1:-1;;;7309:21:10;;;::::1;-1:-1:-1::0;;;;;7309:21:10::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;7309:21:10;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;;;;7282:3;;;;;:::i;:::-;;;;7244:105;;;;7438:6;7428:4;7433:1;7428:7;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:16;;:7:::1;::::0;;::::1;;:16:::0;;;;::::1;::::0;-1:-1:-1;;;;;7428:16:10::1;-1:-1:-1::0;;;7428:16:10::1;-1:-1:-1::0;;;;;;7428:16:10;;;-1:-1:-1;;;;;7428:16:10;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;;7079:436;;;7483:17:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;7483:17:10;;;::::1;::::0;;;;;;::::1;::::0;;::::1;;::::0;;;;::::1;::::0;-1:-1:-1;;;;;7483:17:10::1;-1:-1:-1::0;;;7483:17:10::1;-1:-1:-1::0;;;;;;7483:17:10;;;-1:-1:-1;;;;;7483:17:10;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;7493:6;;7483:17;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;7079:436;6711:814;;6677:1726;;;7535:14;::::0;;;::::1;;;7531:872;;;7601:72;;;;;;;;7622:8;;:15;;-1:-1:-1::0;;;;;7601:72:10::1;;;;;7640:11;-1:-1:-1::0;;;;;7601:72:10::1;;;;;7663:8;;7653:19;;;;;;;:::i;:::-;;::::0;;;;;::::1;::::0;;;7601:72;;;7565:26:::1;::::0;::::1;;::::0;;;:13:::1;:26;::::0;;;;:33;;::::1;::::0;7592:5;;;;7565:33:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;:108;;;;;;::::1;::::0;-1:-1:-1;;;;;7565:108:10::1;-1:-1:-1::0;;;7565:108:10::1;-1:-1:-1::0;;;;;;7565:108:10;;;-1:-1:-1;;;;;7565:108:10;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;;7757:9;;::::1;::::0;;7565:108:::1;7757:9:::0;;7692:75;;::::1;::::0;::::1;::::0;7706:11;;7719:5;;;;7726:11;;7739:6;;7747:8;;;;7565:33;7692:75:::1;:::i;:::-;;;;;;;;7855:14;:22:::0;;-1:-1:-1;;7855:22:10::1;::::0;;7531:872:::1;;;7912:95;::::0;-1:-1:-1;;;7912:95:10;;-1:-1:-1;;;;;7912:41:10;::::1;::::0;::::1;::::0;7959:9;;7912:95:::1;::::0;7970:11;;7983:5;;;;7990:6;;7998:8;;;;7912:95:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;7908:485;;;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8093:72;;;;;;;;8114:8;;:15;;-1:-1:-1::0;;;;;8093:72:10::1;;;;;8132:11;-1:-1:-1::0;;;;;8093:72:10::1;;;;;8155:8;;8145:19;;;;;;;:::i;:::-;;::::0;;;;;::::1;::::0;;;8093:72;;;8057:26:::1;::::0;::::1;;::::0;;;:13:::1;:26;::::0;;;;:33;;::::1;::::0;8084:5;;;;8057:33:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;:108;;;;;;::::1;::::0;-1:-1:-1;;;;;8057:108:10::1;-1:-1:-1::0;;;8057:108:10::1;-1:-1:-1::0;;;;;;8057:108:10;;;-1:-1:-1;;;;;8057:108:10;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;;;8188:72:::1;::::0;::::1;::::0;8202:11;;8215:5;;;;8222:11;;8235:6;;8243:8;;;;8253:6;;8188:72:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;8356:14:10::1;:22:::0;;-1:-1:-1;;8356:22:10::1;::::0;;7908:485:::1;-1:-1:-1::0;;2961:22:10;:37;;-1:-1:-1;;2961:37:10;;;;;-1:-1:-1;;;;;;;6080:2329:10:o;4008:2066::-;2588:19;;:35;:19;903:1;2588:35;2580:81;;;;-1:-1:-1;;;2580:81:10;;23716:2:11;2580:81:10;;;23698:21:11;23755:2;23735:18;;;23728:30;23794:34;23774:18;;;23767:62;-1:-1:-1;;;23845:18:11;;;23838:31;23886:19;;2580:81:10;23514:397:11;2580:81:10;2671:19;:30;;-1:-1:-1;;2671:30:10;945:1;2671:30;;;4288:12;;4304:2:::1;4288:18;4280:75;;;::::0;-1:-1:-1;;;4280:75:10;;24118:2:11;4280:75:10::1;::::0;::::1;24100:21:11::0;24157:2;24137:18;;;24130:30;24196:34;24176:18;;;24169:62;-1:-1:-1;;;24247:18:11;;;24240:42;24299:19;;4280:75:10::1;23916:408:11::0;4280:75:10::1;4469:2;4458:14:::0;::::1;4452:21:::0;-1:-1:-1;;;;;4514:25:10;;::::1;4393:15;4514:25:::0;;;::::1;::::0;;;;;;;::::1;::::0;4549:92:::1;;;::::0;-1:-1:-1;;;4549:92:10;;24531:2:11;4549:92:10::1;::::0;::::1;24513:21:11::0;24570:2;24550:18;;;24543:30;24609:34;24589:18;;;24582:62;24680:25;24660:18;;;24653:53;24723:19;;4549:92:10::1;24329:419:11::0;4549:92:10::1;4684:26;4737:1:::0;4713:14:::1;:21;:25;:65;;4758:20;4713:65;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4741:14;4713:65;4684:94;;4789:14;4809:95;4822:8;4832:10;4844:8;;4809:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;4854:34:10;::::1;::::0;::::1;4890:13:::0;4809:12:::1;:95::i;:::-;4788:116;;;4935:9;4922;:22;;4914:76;;;::::0;-1:-1:-1;;;4914:76:10;;24955:2:11;4914:76:10::1;::::0;::::1;24937:21:11::0;24994:2;24974:18;;;24967:30;25033:34;25013:18;;;25006:62;-1:-1:-1;;;25084:18:11;;;25077:39;25133:19;;4914:76:10::1;24753:405:11::0;4914:76:10::1;5018:23;::::0;::::1;5001:12;5018:23:::0;;;:13:::1;:23;::::0;;;;;;;5042:10:::1;5018:35:::0;;;;;;;5016:37;;5001:12;;5016:37:::1;::::0;-1:-1:-1;;;;;5016:37:10::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;5016:37:10::1;;;;;-1:-1:-1::0;;;;;5016:37:10::1;;;;;5001:52;;5104:11;5130:9;5118;:21;;;;:::i;:::-;5104:35:::0;-1:-1:-1;5153:10:10;;5149:163:::1;;5180:12;5198:14;-1:-1:-1::0;;;;;5198:19:10::1;5225:6;5198:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5179:57;;;5258:7;5250:51;;;::::0;-1:-1:-1;;;5250:51:10;;25575:2:11;5250:51:10::1;::::0;::::1;25557:21:11::0;25614:2;25594:18;;;25587:30;25653:33;25633:18;;;25626:61;25704:18;;5250:51:10::1;25373:355:11::0;5250:51:10::1;5165:147;5149:163;5469:13;5484:17:::0;5503:29:::1;5536:40;5562:13;5536:25;:40::i;:::-;5466:110:::0;;-1:-1:-1;5466:110:10;-1:-1:-1;5466:110:10;-1:-1:-1;;5590:16:10;;5586:222:::1;;5623:12;5641:13;-1:-1:-1::0;;;;;5641:18:10::1;5667:12;5641:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5622:62;;;5703:7;5698:100;;5735:48;::::0;5770:12;;-1:-1:-1;;;;;5735:48:10;::::1;::::0;::::1;::::0;;;::::1;5698:100;5608:200;5586:222;5846:37;::::0;-1:-1:-1;;5863:10:10::1;25960:2:11::0;25956:15;;;25952:24;;5846:37:10::1;::::0;::::1;25940::11::0;26011:15;;;26007:24;25993:12;;;25986:46;5818:25:10::1;::::0;26048:12:11;;5846:37:10::1;;;;;;;;;;;;5818:65;;5923:20;5946:8;;5923:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5979:10;-1:-1:-1::0;;;;;5964:41:10::1;;6006:11;;;;;;;;;;;6019:12;6033:7;6042:5;6049:8;6059:7;5964:103;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2722:19:10;:34;;-1:-1:-1;;2722:34:10;903:1;2722:34;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;4008:2066:10:o;14078:125::-;14159:20;:37;14182:14;14159:20;:37;:::i;:::-;;14078:125;:::o;8415:157::-;8536:22;;;8511:6;8536:22;;;:12;:22;;;;;;:29;;;;8559:5;;;;8536:29;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;8536:29:10;;-1:-1:-1;8415:157:10;;;;;:::o;15224:1322::-;15456:4;15473:13;15488;15503:17;15526:41;15552:14;15526:25;:41::i;:::-;15472:95;;;;;;;15577:21;15659:6;:11;;15669:1;15659:11;15655:187;;15694:32;;-1:-1:-1;;;;;15694:32:10;:48;-1:-1:-1;15694:48:10;15686:99;;;;-1:-1:-1;;;15686:99:10;;27003:2:11;15686:99:10;;;26985:21:11;27042:2;27022:18;;;27015:30;27081:34;27061:18;;;27054:62;-1:-1:-1;;;27132:18:11;;;27125:36;27178:19;;15686:99:10;26801:402:11;15686:99:10;15799:32;15819:12;15799:32;;:::i;:::-;;;15655:187;15978:24;;15919:19;;15978:35;;16005:8;;-1:-1:-1;;;15978:24:10;;-1:-1:-1;;;;;15978:24:10;:35;:::i;:::-;15941:16;:33;:73;;;-1:-1:-1;;;15941:33:10;;-1:-1:-1;;;;;15941:33:10;:73;:::i;:::-;15919:95;-1:-1:-1;16024:34:10;15919:95;16024:34;;:::i;:::-;16223:16;:30;16024:34;;-1:-1:-1;16186:14:10;;16257:6;;16204:49;;-1:-1:-1;;;;;16223:30:10;16024:34;16204:49;:::i;:::-;16203:60;;;;:::i;:::-;16442:16;:30;16412:27;;16186:77;;-1:-1:-1;16355:17:10;;16476:6;;-1:-1:-1;;;;;16442:30:10;;;;16376:63;;-1:-1:-1;;;16412:27:10;;;-1:-1:-1;;;;;16412:27:10;;-1:-1:-1;;;16376:33:10;;;;:63;:::i;:::-;:96;;;;:::i;:::-;16375:107;;;;:::i;:::-;-1:-1:-1;;;;;16355:127:10;;-1:-1:-1;16512:27:10;16355:127;16512:12;:27;:::i;:::-;16500:39;;:9;:39;:::i;:::-;16493:46;15224:1322;-1:-1:-1;;;;;;;;;;;;;15224:1322:10:o;14892:326::-;15022:4;15042:9;15038:174;;;-1:-1:-1;15074:17:10;:24;15067:31;;15038:174;15166:26;;15196:5;;15138:24;15152:10;15138:11;:24;:::i;:::-;15137:55;;;;:::i;:::-;15136:65;;;;:::i;:::-;15129:72;;;;14388:498;14502:26;;;14471:28;14502:26;;;:13;:26;;;;;;:33;;;;14529:5;;;;14502:33;:::i;:::-;;;;;;;;;;;;;14471:64;;14641:239;14648:11;;:15;14641:239;;14715:11;;14679:28;;14710:4;;14715:15;;14729:1;;14715:15;:::i;:::-;14710:21;;;;;;;;:::i;:::-;;;;;;;;;;14679:52;;;;;;;;14710:21;;;;;;;14679:52;;-1:-1:-1;;;;;14679:52:10;;;;-1:-1:-1;;;;;;;;14679:52:10;;;;;;;;;;;;;;;;;;14710:21;14679:52;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14764:7;:18;;;-1:-1:-1;;;;;14745:48:10;;14794:11;14807:5;;14814:7;:13;;;14829:7;:15;;;14745:100;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14859:4;:10;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;14859:10:10;;;;;;;;;-1:-1:-1;;;;;;14859:10:10;;;;;;;;;;:::i;:::-;;;;;14665:215;14641:239;;2036:801:9;2154:13;2181:10;2205:18;2237:30;2300:14;:21;2325:2;2300:27;:57;;;;2355:2;2331:14;:21;:26;2300:57;2292:91;;;;-1:-1:-1;;;2292:91:9;;29059:2:11;2292:91:9;;;29041:21:11;29098:2;29078:18;;;29071:30;-1:-1:-1;;;29117:18:11;;;29110:51;29178:18;;2292:91:9;28857:345:11;2292:91:9;2452:1;2436:14;2432:22;2426:29;2416:39;;2503:2;2487:14;2483:23;2477:30;2468:39;;2534:6;:11;;2544:1;2534:11;:26;;;;2549:6;:11;;2559:1;2549:11;2534:26;2526:57;;;;-1:-1:-1;;;2526:57:9;;29409:2:11;2526:57:9;;;29391:21:11;29448:2;29428:18;;;29421:30;-1:-1:-1;;;29467:18:11;;;29460:48;29525:18;;2526:57:9;29207:342:11;2526:57:9;2609:1;2601:5;:9;2593:33;;;;-1:-1:-1;;;2593:33:9;;29756:2:11;2593:33:9;;;29738:21:11;29795:2;29775:18;;;29768:30;-1:-1:-1;;;29814:18:11;;;29807:41;29865:18;;2593:33:9;29554:335:11;2593:33:9;2641:6;:11;;2651:1;2641:11;2637:194;;-1:-1:-1;;2738:2:9;2718:23;;2712:30;2803:2;2783:23;;2777:30;2637:194;2036:801;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;267:159:11:-;334:20;;394:6;383:18;;373:29;;363:57;;416:1;413;406:12;363:57;267:159;;;:::o;431:184::-;489:6;542:2;530:9;521:7;517:23;513:32;510:52;;;558:1;555;548:12;510:52;581:28;599:9;581:28;:::i;620:131::-;-1:-1:-1;;;;;695:31:11;;685:42;;675:70;;741:1;738;731:12;756:247;815:6;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;923:9;910:23;942:31;967:5;942:31;:::i;1201:347::-;1252:8;1262:6;1316:3;1309:4;1301:6;1297:17;1293:27;1283:55;;1334:1;1331;1324:12;1283:55;-1:-1:-1;1357:20:11;;-1:-1:-1;;;;;1389:30:11;;1386:50;;;1432:1;1429;1422:12;1386:50;1469:4;1461:6;1457:17;1445:29;;1521:3;1514:4;1505:6;1497;1493:19;1489:30;1486:39;1483:59;;;1538:1;1535;1528:12;1483:59;1201:347;;;;;:::o;1553:481::-;1631:6;1639;1647;1700:2;1688:9;1679:7;1675:23;1671:32;1668:52;;;1716:1;1713;1706:12;1668:52;1739:28;1757:9;1739:28;:::i;:::-;1729:38;;1818:2;1807:9;1803:18;1790:32;-1:-1:-1;;;;;1837:6:11;1834:30;1831:50;;;1877:1;1874;1867:12;1831:50;1916:58;1966:7;1957:6;1946:9;1942:22;1916:58;:::i;:::-;1553:481;;1993:8;;-1:-1:-1;1890:84:11;;-1:-1:-1;;;;1553:481:11:o;2231:127::-;2292:10;2287:3;2283:20;2280:1;2273:31;2323:4;2320:1;2313:15;2347:4;2344:1;2337:15;2363:718;2405:5;2458:3;2451:4;2443:6;2439:17;2435:27;2425:55;;2476:1;2473;2466:12;2425:55;2512:6;2499:20;-1:-1:-1;;;;;2575:2:11;2571;2568:10;2565:36;;;2581:18;;:::i;:::-;2656:2;2650:9;2624:2;2710:13;;-1:-1:-1;;2706:22:11;;;2730:2;2702:31;2698:40;2686:53;;;2754:18;;;2774:22;;;2751:46;2748:72;;;2800:18;;:::i;:::-;2840:10;2836:2;2829:22;2875:2;2867:6;2860:18;2921:3;2914:4;2909:2;2901:6;2897:15;2893:26;2890:35;2887:55;;;2938:1;2935;2928:12;2887:55;3002:2;2995:4;2987:6;2983:17;2976:4;2968:6;2964:17;2951:54;3049:1;3042:4;3037:2;3029:6;3025:15;3021:26;3014:37;3069:6;3060:15;;;;;;2363:718;;;;:::o;3086:460::-;3171:6;3179;3187;3240:2;3228:9;3219:7;3215:23;3211:32;3208:52;;;3256:1;3253;3246:12;3208:52;3279:28;3297:9;3279:28;:::i;:::-;3269:38;;3358:2;3347:9;3343:18;3330:32;-1:-1:-1;;;;;3377:6:11;3374:30;3371:50;;;3417:1;3414;3407:12;3371:50;3440:49;3481:7;3472:6;3461:9;3457:22;3440:49;:::i;:::-;3430:59;;;3536:2;3525:9;3521:18;3508:32;3498:42;;3086:460;;;;;:::o;3551:422::-;3592:3;3630:5;3624:12;3657:6;3652:3;3645:19;3682:1;3692:162;3706:6;3703:1;3700:13;3692:162;;;3768:4;3824:13;;;3820:22;;3814:29;3796:11;;;3792:20;;3785:59;3721:12;3692:162;;;3696:3;3899:1;3892:4;3883:6;3878:3;3874:16;3870:27;3863:38;3962:4;3955:2;3951:7;3946:2;3938:6;3934:15;3930:29;3925:3;3921:39;3917:50;3910:57;;;3551:422;;;;:::o;3978:408::-;-1:-1:-1;;;;;4179:32:11;;4161:51;;-1:-1:-1;;;;;4248:31:11;;4243:2;4228:18;;4221:59;4316:2;4311;4296:18;;4289:30;;;-1:-1:-1;;4336:44:11;;4361:18;;4353:6;4336:44;:::i;:::-;4328:52;3978:408;-1:-1:-1;;;;;3978:408:11:o;4391:248::-;4459:6;4467;4520:2;4508:9;4499:7;4495:23;4491:32;4488:52;;;4536:1;4533;4526:12;4488:52;-1:-1:-1;;4559:23:11;;;4629:2;4614:18;;;4601:32;;-1:-1:-1;4391:248:11:o;4644:217::-;4791:2;4780:9;4773:21;4754:4;4811:44;4851:2;4840:9;4836:18;4828:6;4811:44;:::i;4866:188::-;4934:20;;-1:-1:-1;;;;;4983:46:11;;4973:57;;4963:85;;5044:1;5041;5034:12;5059:171;5126:20;;-1:-1:-1;;;;;5175:30:11;;5165:41;;5155:69;;5220:1;5217;5210:12;5235:480;5328:6;5336;5344;5352;5360;5413:3;5401:9;5392:7;5388:23;5384:33;5381:53;;;5430:1;5427;5420:12;5381:53;5453:29;5472:9;5453:29;:::i;:::-;5443:39;;5501:38;5535:2;5524:9;5520:18;5501:38;:::i;:::-;5491:48;;5558:38;5592:2;5581:9;5577:18;5558:38;:::i;:::-;5548:48;;5615:37;5648:2;5637:9;5633:18;5615:37;:::i;:::-;5605:47;;5671:38;5704:3;5693:9;5689:19;5671:38;:::i;:::-;5661:48;;5235:480;;;;;;;;:::o;5720:917::-;5829:6;5837;5845;5853;5861;5914:3;5902:9;5893:7;5889:23;5885:33;5882:53;;;5931:1;5928;5921:12;5882:53;5954:28;5972:9;5954:28;:::i;:::-;5944:38;;6032:2;6021:9;6017:18;6004:32;6045:31;6070:5;6045:31;:::i;:::-;6095:5;-1:-1:-1;6151:2:11;6136:18;;6123:32;-1:-1:-1;;;;;6204:14:11;;;6201:34;;;6231:1;6228;6221:12;6201:34;6254:49;6295:7;6286:6;6275:9;6271:22;6254:49;:::i;:::-;6244:59;;6355:2;6344:9;6340:18;6327:32;6312:47;;6404:7;6397:15;6390:23;6381:7;6378:36;6368:64;;6428:1;6425;6418:12;6368:64;6451:7;;-1:-1:-1;6511:3:11;6496:19;;6483:33;;6528:16;;;6525:36;;;6557:1;6554;6547:12;6525:36;;6580:51;6623:7;6612:8;6601:9;6597:24;6580:51;:::i;:::-;6570:61;;;5720:917;;;;;;;;:::o;6850:392::-;6926:6;6934;6987:2;6975:9;6966:7;6962:23;6958:32;6955:52;;;7003:1;7000;6993:12;6955:52;7026:28;7044:9;7026:28;:::i;:::-;7016:38;;7105:2;7094:9;7090:18;7077:32;-1:-1:-1;;;;;7124:6:11;7121:30;7118:50;;;7164:1;7161;7154:12;7118:50;7187:49;7228:7;7219:6;7208:9;7204:22;7187:49;:::i;:::-;7177:59;;;6850:392;;;;;:::o;7620:319::-;7687:6;7695;7748:2;7736:9;7727:7;7723:23;7719:32;7716:52;;;7764:1;7761;7754:12;7716:52;7787:28;7805:9;7787:28;:::i;:::-;7777:38;;7865:2;7854:9;7850:18;7837:32;7878:31;7903:5;7878:31;:::i;:::-;7928:5;7918:15;;;7620:319;;;;;:::o;8930:789::-;9028:6;9036;9044;9052;9060;9113:2;9101:9;9092:7;9088:23;9084:32;9081:52;;;9129:1;9126;9119:12;9081:52;9152:28;9170:9;9152:28;:::i;:::-;9142:38;;9231:2;9220:9;9216:18;9203:32;-1:-1:-1;;;;;9295:2:11;9287:6;9284:14;9281:34;;;9311:1;9308;9301:12;9281:34;9350:58;9400:7;9391:6;9380:9;9376:22;9350:58;:::i;:::-;9427:8;;-1:-1:-1;9324:84:11;-1:-1:-1;9515:2:11;9500:18;;9487:32;;-1:-1:-1;9531:16:11;;;9528:36;;;9560:1;9557;9550:12;9528:36;;9599:60;9651:7;9640:8;9629:9;9625:24;9599:60;:::i;:::-;8930:789;;;;-1:-1:-1;8930:789:11;;-1:-1:-1;9678:8:11;;9573:86;8930:789;-1:-1:-1;;;8930:789:11:o;9724:180::-;9783:6;9836:2;9824:9;9815:7;9811:23;9807:32;9804:52;;;9852:1;9849;9842:12;9804:52;-1:-1:-1;9875:23:11;;9724:180;-1:-1:-1;9724:180:11:o;9909:388::-;9977:6;9985;10038:2;10026:9;10017:7;10013:23;10009:32;10006:52;;;10054:1;10051;10044:12;10006:52;10093:9;10080:23;10112:31;10137:5;10112:31;:::i;10302:1067::-;10426:6;10434;10442;10450;10458;10466;10474;10482;10535:3;10523:9;10514:7;10510:23;10506:33;10503:53;;;10552:1;10549;10542:12;10503:53;10575:28;10593:9;10575:28;:::i;:::-;10565:38;;10654:2;10643:9;10639:18;10626:32;-1:-1:-1;;;;;10718:2:11;10710:6;10707:14;10704:34;;;10734:1;10731;10724:12;10704:34;10773:58;10823:7;10814:6;10803:9;10799:22;10773:58;:::i;:::-;10850:8;;-1:-1:-1;10747:84:11;-1:-1:-1;10935:2:11;10920:18;;10907:32;;-1:-1:-1;10948:31:11;10907:32;10948:31;:::i;:::-;10998:5;10988:15;;11022:37;11055:2;11044:9;11040:18;11022:37;:::i;:::-;11012:47;;11106:3;11095:9;11091:19;11078:33;11068:43;;11164:3;11153:9;11149:19;11136:33;11120:49;;11194:2;11184:8;11181:16;11178:36;;;11210:1;11207;11200:12;11178:36;;11249:60;11301:7;11290:8;11279:9;11275:24;11249:60;:::i;:::-;10302:1067;;;;-1:-1:-1;10302:1067:11;;-1:-1:-1;10302:1067:11;;;;;;11328:8;-1:-1:-1;;;10302:1067:11:o;11374:1185::-;11514:6;11522;11530;11538;11546;11554;11562;11615:3;11603:9;11594:7;11590:23;11586:33;11583:53;;;11632:1;11629;11622:12;11583:53;11655:28;11673:9;11655:28;:::i;:::-;11645:38;;11734:2;11723:9;11719:18;11706:32;-1:-1:-1;;;;;11798:2:11;11790:6;11787:14;11784:34;;;11814:1;11811;11804:12;11784:34;11837:49;11878:7;11869:6;11858:9;11854:22;11837:49;:::i;:::-;11827:59;;11939:2;11928:9;11924:18;11911:32;11895:48;;11968:2;11958:8;11955:16;11952:36;;;11984:1;11981;11974:12;11952:36;12023:60;12075:7;12064:8;12053:9;12049:24;12023:60;:::i;:::-;12102:8;;-1:-1:-1;11997:86:11;-1:-1:-1;12187:2:11;12172:18;;12159:32;;-1:-1:-1;12200:31:11;12159:32;12200:31;:::i;:::-;12250:5;;-1:-1:-1;12307:3:11;12292:19;;12279:33;;12321;12279;12321;:::i;:::-;12373:7;;-1:-1:-1;12433:3:11;12418:19;;12405:33;;12450:16;;;12447:36;;;12479:1;12476;12469:12;12447:36;;12502:51;12545:7;12534:8;12523:9;12519:24;12502:51;:::i;:::-;12492:61;;;11374:1185;;;;;;;;;;:::o;12564:533::-;12657:6;12665;12673;12681;12734:3;12722:9;12713:7;12709:23;12705:33;12702:53;;;12751:1;12748;12741:12;12702:53;12774:28;12792:9;12774:28;:::i;:::-;12764:38;;12821:37;12854:2;12843:9;12839:18;12821:37;:::i;:::-;12811:47;;12905:2;12894:9;12890:18;12877:32;12867:42;;12960:2;12949:9;12945:18;12932:32;-1:-1:-1;;;;;12979:6:11;12976:30;12973:50;;;13019:1;13016;13009:12;12973:50;13042:49;13083:7;13074:6;13063:9;13059:22;13042:49;:::i;:::-;13032:59;;;12564:533;;;;;;;:::o;13102:460::-;13186:6;13194;13202;13210;13263:3;13251:9;13242:7;13238:23;13234:33;13231:53;;;13280:1;13277;13270:12;13231:53;13303:28;13321:9;13303:28;:::i;:::-;13293:38;;13350:37;13383:2;13372:9;13368:18;13350:37;:::i;:::-;13340:47;;13437:2;13426:9;13422:18;13409:32;13450:31;13475:5;13450:31;:::i;:::-;13102:460;;;;-1:-1:-1;13500:5:11;;13552:2;13537:18;13524:32;;-1:-1:-1;;13102:460:11:o;13567:320::-;13635:6;13688:2;13676:9;13667:7;13663:23;13659:32;13656:52;;;13704:1;13701;13694:12;13656:52;13744:9;13731:23;-1:-1:-1;;;;;13769:6:11;13766:30;13763:50;;;13809:1;13806;13799:12;13763:50;13832:49;13873:7;13864:6;13853:9;13849:22;13832:49;:::i;:::-;13822:59;13567:320;-1:-1:-1;;;;13567:320:11:o;13892:271::-;14075:6;14067;14062:3;14049:33;14031:3;14101:16;;14126:13;;;14101:16;13892:271;-1:-1:-1;13892:271:11:o;14168:380::-;14247:1;14243:12;;;;14290;;;14311:61;;14365:4;14357:6;14353:17;14343:27;;14311:61;14418:2;14410:6;14407:14;14387:18;14384:38;14381:161;;14464:10;14459:3;14455:20;14452:1;14445:31;14499:4;14496:1;14489:15;14527:4;14524:1;14517:15;14381:161;;14168:380;;;:::o;14553:127::-;14614:10;14609:3;14605:20;14602:1;14595:31;14645:4;14642:1;14635:15;14669:4;14666:1;14659:15;14685:125;14750:9;;;14771:10;;;14768:36;;;14784:18;;:::i;15534:266::-;15622:6;15617:3;15610:19;15674:6;15667:5;15660:4;15655:3;15651:14;15638:43;-1:-1:-1;15726:1:11;15701:16;;;15719:4;15697:27;;;15690:38;;;;15782:2;15761:15;;;-1:-1:-1;;15757:29:11;15748:39;;;15744:50;;15534:266::o;15805:326::-;16000:6;15992;15988:19;15977:9;15970:38;16044:2;16039;16028:9;16024:18;16017:30;15951:4;16064:61;16121:2;16110:9;16106:18;16098:6;16090;16064:61;:::i;16495:609::-;16772:6;16764;16760:19;16749:9;16742:38;16816:3;16811:2;16800:9;16796:18;16789:31;16723:4;16843:62;16900:3;16889:9;16885:19;16877:6;16869;16843:62;:::i;:::-;-1:-1:-1;;;;;16945:6:11;16941:31;16936:2;16925:9;16921:18;16914:59;17021:9;17013:6;17009:22;17004:2;16993:9;16989:18;16982:50;17049:49;17091:6;17083;17075;17049:49;:::i;:::-;17041:57;16495:609;-1:-1:-1;;;;;;;;;16495:609:11:o;17109:519::-;17358:6;17350;17346:19;17335:9;17328:38;17402:3;17397:2;17386:9;17382:18;17375:31;17309:4;17423:62;17480:3;17469:9;17465:19;17457:6;17449;17423:62;:::i;:::-;-1:-1:-1;;;;;17521:31:11;;;;17516:2;17501:18;;17494:59;-1:-1:-1;;;;;;17589:32:11;;;;17584:2;17569:18;;;17562:60;17415:70;17109:519;-1:-1:-1;;;17109:519:11:o;18038:209::-;18076:3;-1:-1:-1;;;;;18157:2:11;18150:5;18146:14;18184:2;18175:7;18172:15;18169:41;;18190:18;;:::i;:::-;18239:1;18226:15;;18038:209;-1:-1:-1;;;18038:209:11:o;18732:544::-;18833:2;18828:3;18825:11;18822:448;;;18869:1;18894:5;18890:2;18883:17;18939:4;18935:2;18925:19;19009:2;18997:10;18993:19;18990:1;18986:27;18980:4;18976:38;19045:4;19033:10;19030:20;19027:47;;;-1:-1:-1;19068:4:11;19027:47;19123:2;19118:3;19114:12;19111:1;19107:20;19101:4;19097:31;19087:41;;19178:82;19196:2;19189:5;19186:13;19178:82;;;19241:17;;;19222:1;19211:13;19178:82;;;19182:3;;;18822:448;18732:544;;;:::o;19452:1348::-;19576:3;19570:10;-1:-1:-1;;;;;19595:6:11;19592:30;19589:56;;;19625:18;;:::i;:::-;19654:96;19743:6;19703:38;19735:4;19729:11;19703:38;:::i;:::-;19697:4;19654:96;:::i;:::-;19805:4;;19869:2;19858:14;;19886:1;19881:662;;;;20587:1;20604:6;20601:89;;;-1:-1:-1;20656:19:11;;;20650:26;20601:89;-1:-1:-1;;19409:1:11;19405:11;;;19401:24;19397:29;19387:40;19433:1;19429:11;;;19384:57;20703:81;;19851:943;;19881:662;18679:1;18672:14;;;18716:4;18703:18;;-1:-1:-1;;19917:20:11;;;20034:236;20048:7;20045:1;20042:14;20034:236;;;20137:19;;;20131:26;20116:42;;20229:27;;;;20197:1;20185:14;;;;20064:19;;20034:236;;;20038:3;20298:6;20289:7;20286:19;20283:201;;;20359:19;;;20353:26;-1:-1:-1;;20442:1:11;20438:14;;;20454:3;20434:24;20430:37;20426:42;20411:58;20396:74;;20283:201;-1:-1:-1;;;;;20530:1:11;20514:14;;;20510:22;20497:36;;-1:-1:-1;19452:1348:11:o;20805:128::-;20872:9;;;20893:11;;;20890:37;;;20907:18;;:::i;20938:127::-;20999:10;20994:3;20990:20;20987:1;20980:31;21030:4;21027:1;21020:15;21054:4;21051:1;21044:15;21070:1426;21183:3;21177:4;21174:13;21171:26;;21190:5;;21070:1426::o;21171:26::-;21220:37;21252:3;21246:10;21220:37;:::i;:::-;-1:-1:-1;;;;;21272:6:11;21269:30;21266:56;;;21302:18;;:::i;:::-;21331:96;21420:6;21380:38;21412:4;21406:11;21380:38;:::i;21331:96::-;21453:1;21481:2;21473:6;21470:14;21498:1;21493:746;;;;22283:1;22300:6;22297:89;;;-1:-1:-1;22352:19:11;;;22346:26;22297:89;-1:-1:-1;;19409:1:11;19405:11;;;19401:24;19397:29;19387:40;19433:1;19429:11;;;19384:57;22399:81;;21463:1027;;21493:746;18679:1;18672:14;;;18716:4;18703:18;;-1:-1:-1;;21529:20:11;;;18679:1;18672:14;;;18716:4;18703:18;;21691:9;21713:251;21727:7;21724:1;21721:14;21713:251;;;21809:21;;;21803:28;21788:44;;21859:1;21932:18;;;;21887:15;;;;21750:4;21743:12;21713:251;;;21717:3;21992:6;21983:7;21980:19;21977:203;;;22053:21;;;22047:28;-1:-1:-1;;22138:1:11;22134:14;;;22150:3;22130:24;22126:37;22122:42;22107:58;22092:74;;21977:203;;;;22226:1;22217:6;22214:1;22210:14;22206:22;22200:4;22193:36;21463:1027;;;;21070:1426;;:::o;22501:135::-;22540:3;22561:17;;;22558:43;;22581:18;;:::i;:::-;-1:-1:-1;22628:1:11;22617:13;;22501:135::o;22641:868::-;22992:6;22984;22980:19;22969:9;22962:38;23036:3;23031:2;23020:9;23016:18;23009:31;22943:4;23063:62;23120:3;23109:9;23105:19;23097:6;23089;23063:62;:::i;:::-;-1:-1:-1;;;;;23161:32:11;;23156:2;23141:18;;23134:60;-1:-1:-1;;;;;23230:31:11;;23225:2;23210:18;;23203:59;23299:22;;;23293:3;23278:19;;23271:51;23345:49;23303:6;23379;23371;23345:49;:::i;:::-;23331:63;;23443:9;23435:6;23431:22;23425:3;23414:9;23410:19;23403:51;23471:32;23496:6;23488;23471:32;:::i;:::-;23463:40;22641:868;-1:-1:-1;;;;;;;;;;;22641:868:11:o;26071:725::-;26384:6;26376;26372:19;26361:9;26354:38;26428:3;26423:2;26412:9;26408:18;26401:31;26335:4;26455:45;26495:3;26484:9;26480:19;26472:6;26455:45;:::i;:::-;-1:-1:-1;;;;;26536:32:11;;26531:2;26516:18;;26509:60;-1:-1:-1;;;;;26605:31:11;;26600:2;26585:18;;26578:59;26668:3;26653:19;;26646:35;;;26718:22;;;26556:3;26697:19;;26690:51;26758:32;26722:6;26775;26758:32;:::i;27208:168::-;27281:9;;;27312;;27329:15;;;27323:22;;27309:37;27299:71;;27350:18;;:::i;27381:127::-;27442:10;27437:3;27433:20;27430:1;27423:31;27473:4;27470:1;27463:15;27497:4;27494:1;27487:15;27513:120;27553:1;27579;27569:35;;27584:18;;:::i;:::-;-1:-1:-1;27618:9:11;;27513:120::o;27638:274::-;-1:-1:-1;;;;;27776:10:11;;;27788;;;27772:27;27819:20;;;;27710:34;27858:24;;;27848:58;;27886:18;;:::i;:::-;27848:58;;27638:274;;;;:::o;27917:216::-;27957:1;-1:-1:-1;;;;;28044:2:11;28041:1;28037:10;28066:3;28056:37;;28073:18;;:::i;:::-;28111:10;;28107:20;;;;;27917:216;-1:-1:-1;;27917:216:11:o;28138:582::-;28405:6;28397;28393:19;28382:9;28375:38;28449:3;28444:2;28433:9;28429:18;28422:31;28356:4;28476:62;28533:3;28522:9;28518:19;28510:6;28502;28476:62;:::i;:::-;-1:-1:-1;;;;;28578:6:11;28574:31;28569:2;28558:9;28554:18;28547:59;28654:9;28646:6;28642:22;28637:2;28626:9;28622:18;28615:50;28682:32;28707:6;28699;28682:32;:::i;:::-;28674:40;28138:582;-1:-1:-1;;;;;;;;28138:582:11:o;28725:127::-;28786:10;28781:3;28777:20;28774:1;28767:31;28817:4;28814:1;28807:15;28841:4;28838:1;28831:15"},"gasEstimates":{"creation":{"codeDepositCost":"2394400","executionCost":"infinite","totalCost":"infinite"},"external":{"blockNextMsg()":"24445","defaultAdapterParams()":"infinite","estimateFees(uint16,address,bytes,bool,bytes)":"infinite","forceResumeReceive(uint16,bytes)":"infinite","getChainId()":"2353","getConfig(uint16,uint16,address,uint256)":"infinite","getInboundNonce(uint16,bytes)":"infinite","getLengthOfQueue(uint16,bytes)":"infinite","getOutboundNonce(uint16,address)":"2855","getReceiveLibraryAddress(address)":"414","getReceiveVersion(address)":"469","getSendLibraryAddress(address)":"437","getSendVersion(address)":"449","hasStoredPayload(uint16,bytes)":"infinite","inboundNonce(uint16,bytes)":"infinite","isReceivingPayload()":"2369","isSendingPayload()":"2357","lzEndpointLookup(address)":"2688","mockChainId()":"2446","msgsToDeliver(uint16,bytes,uint256)":"infinite","nextMsgBlocked()":"2389","oracleFee()":"2383","outboundNonce(uint16,address)":"2831","protocolFeeConfig()":"4464","receivePayload(uint16,bytes,address,uint64,uint256,bytes)":"infinite","relayerFeeConfig()":"4807","retryPayload(uint16,bytes,bytes)":"infinite","send(uint16,bytes,bytes,address,address,bytes)":"infinite","setConfig(uint16,uint16,uint256,bytes)":"infinite","setDefaultAdapterParams(bytes)":"infinite","setDestLzEndpoint(address,address)":"infinite","setOracleFee(uint256)":"22357","setProtocolFee(uint256,uint256)":"44537","setReceiveVersion(uint16)":"326","setRelayerPrice(uint128,uint128,uint128,uint64,uint64)":"infinite","setSendVersion(uint16)":"349","storedPayload(uint16,bytes)":"infinite"},"internal":{"_clearMsgQue(uint16,bytes calldata)":"infinite","_getProtocolFees(bool,uint256,uint256)":"infinite","_getRelayerFee(uint16,uint16,address,uint256,bytes memory)":"infinite"}},"methodIdentifiers":{"blockNextMsg()":"d23104f1","defaultAdapterParams()":"272bd384","estimateFees(uint16,address,bytes,bool,bytes)":"40a7bb10","forceResumeReceive(uint16,bytes)":"42d65a8d","getChainId()":"3408e470","getConfig(uint16,uint16,address,uint256)":"f5ecbdbc","getInboundNonce(uint16,bytes)":"fdc07c70","getLengthOfQueue(uint16,bytes)":"7f6df8e6","getOutboundNonce(uint16,address)":"7a145748","getReceiveLibraryAddress(address)":"71ba2fd6","getReceiveVersion(address)":"da1a7c9a","getSendLibraryAddress(address)":"9c729da1","getSendVersion(address)":"096568f6","hasStoredPayload(uint16,bytes)":"0eaf6ea6","inboundNonce(uint16,bytes)":"9924d33b","isReceivingPayload()":"ca066b35","isSendingPayload()":"e97a448a","lzEndpointLookup(address)":"c81b383a","mockChainId()":"db14f305","msgsToDeliver(uint16,bytes,uint256)":"12a9ee6b","nextMsgBlocked()":"3e0dd83e","oracleFee()":"f9cd3ceb","outboundNonce(uint16,address)":"b2086499","protocolFeeConfig()":"07d3277f","receivePayload(uint16,bytes,address,uint64,uint256,bytes)":"c2fa4813","relayerFeeConfig()":"907c5e7e","retryPayload(uint16,bytes,bytes)":"aaff5f16","send(uint16,bytes,bytes,address,address,bytes)":"c5803100","setConfig(uint16,uint16,uint256,bytes)":"cbed8b9c","setDefaultAdapterParams(bytes)":"fbba623b","setDestLzEndpoint(address,address)":"c08f15a1","setOracleFee(uint256)":"b6d9ef60","setProtocolFee(uint256,uint256)":"240de277","setReceiveVersion(uint16)":"10ddb137","setRelayerPrice(uint128,uint128,uint128,uint64,uint64)":"2c365e25","setSendVersion(uint16)":"07e0db17","storedPayload(uint16,bytes)":"76a386dc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"}],\"name\":\"PayloadCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"srcChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"PayloadStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"srcAddress\",\"type\":\"bytes\"}],\"name\":\"UaForceResumeReceive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"ValueTransferFailed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"blockNextMsg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultAdapterParams\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_userApplication\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInZRO\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"forceResumeReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainID\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"getInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_srcAddress\",\"type\":\"bytes\"}],\"name\":\"getLengthOfQueue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainID\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_srcAddress\",\"type\":\"address\"}],\"name\":\"getOutboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getReceiveLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getReceiveVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getSendLibraryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getSendVersion\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"hasStoredPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"inboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReceivingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingPayload\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lzEndpointLookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"msgsToDeliver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextMsgBlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"outboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"zroFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nativeBP\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_dstAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"receivePayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayerFeeConfig\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"dstPriceRatio\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"dstGasPriceInWei\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"dstNativeAmtCap\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"baseGas\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasPerByte\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_srcChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"retryPayload\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"_refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zroPaymentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"setDefaultAdapterParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lzEndpointAddr\",\"type\":\"address\"}],\"name\":\"setDestLzEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_oracleFee\",\"type\":\"uint256\"}],\"name\":\"setOracleFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zroFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nativeBP\",\"type\":\"uint256\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"setReceiveVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_dstPriceRatio\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_dstGasPriceInWei\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_dstNativeAmtCap\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"_baseGas\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_gasPerByte\",\"type\":\"uint64\"}],\"name\":\"setRelayerPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"storedPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"payloadLength\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"dstAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lzApp/mocks/LZEndpointMock.sol\":\"LZEndpointMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"contracts/lzApp/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroReceiver {\\n    // @notice LayerZero endpoint will invoke this function to deliver the message on the destination\\n    // @param _srcChainId - the source endpoint identifier\\n    // @param _srcAddress - the source sending contract address from the source chain\\n    // @param _nonce - the ordered message nonce\\n    // @param _payload - the signed payload is the UA bytes has encoded to be sent\\n    function lzReceive(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        uint64 _nonce,\\n        bytes calldata _payload\\n    ) external;\\n}\\n\",\"keccak256\":\"0xac1966c1229bd4dc36b6c69eeb94a537bd9aa2198d7623b9ba7f8f7dbe79bb4c\",\"license\":\"MIT\"},\"contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"},\"contracts/lzApp/libs/LzLib.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.6.0;\\npragma experimental ABIEncoderV2;\\n\\nlibrary LzLib {\\n    // LayerZero communication\\n    struct CallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n\\n    struct AirdropParams {\\n        uint airdropAmount;\\n        bytes32 airdropAddress;\\n    }\\n\\n    function buildAdapterParams(LzLib.AirdropParams memory _airdropParams, uint _uaGasLimit) internal pure returns (bytes memory adapterParams) {\\n        if (_airdropParams.airdropAmount == 0 && _airdropParams.airdropAddress == bytes32(0x0)) {\\n            adapterParams = buildDefaultAdapterParams(_uaGasLimit);\\n        } else {\\n            adapterParams = buildAirdropAdapterParams(_uaGasLimit, _airdropParams);\\n        }\\n    }\\n\\n    // Build Adapter Params\\n    function buildDefaultAdapterParams(uint _uaGas) internal pure returns (bytes memory) {\\n        // txType 1\\n        // bytes  [2       32      ]\\n        // fields [txType  extraGas]\\n        return abi.encodePacked(uint16(1), _uaGas);\\n    }\\n\\n    function buildAirdropAdapterParams(uint _uaGas, AirdropParams memory _params) internal pure returns (bytes memory) {\\n        require(_params.airdropAmount > 0, \\\"Airdrop amount must be greater than 0\\\");\\n        require(_params.airdropAddress != bytes32(0x0), \\\"Airdrop address must be set\\\");\\n\\n        // txType 2\\n        // bytes  [2       32        32            bytes[]         ]\\n        // fields [txType  extraGas  dstNativeAmt  dstNativeAddress]\\n        return abi.encodePacked(uint16(2), _uaGas, _params.airdropAmount, _params.airdropAddress);\\n    }\\n\\n    function getGasLimit(bytes memory _adapterParams) internal pure returns (uint gasLimit) {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            gasLimit := mload(add(_adapterParams, 34))\\n        }\\n    }\\n\\n    // Decode Adapter Params\\n    function decodeAdapterParams(bytes memory _adapterParams)\\n        internal\\n        pure\\n        returns (\\n            uint16 txType,\\n            uint uaGas,\\n            uint airdropAmount,\\n            address payable airdropAddress\\n        )\\n    {\\n        require(_adapterParams.length == 34 || _adapterParams.length > 66, \\\"Invalid adapterParams\\\");\\n        assembly {\\n            txType := mload(add(_adapterParams, 2))\\n            uaGas := mload(add(_adapterParams, 34))\\n        }\\n        require(txType == 1 || txType == 2, \\\"Unsupported txType\\\");\\n        require(uaGas > 0, \\\"Gas too low\\\");\\n\\n        if (txType == 2) {\\n            assembly {\\n                airdropAmount := mload(add(_adapterParams, 66))\\n                airdropAddress := mload(add(_adapterParams, 86))\\n            }\\n        }\\n    }\\n\\n    //---------------------------------------------------------------------------\\n    // Address type handling\\n    function bytes32ToAddress(bytes32 _bytes32Address) internal pure returns (address _address) {\\n        return address(uint160(uint(_bytes32Address)));\\n    }\\n\\n    function addressToBytes32(address _address) internal pure returns (bytes32 _bytes32Address) {\\n        return bytes32(uint(uint160(_address)));\\n    }\\n}\\n\",\"keccak256\":\"0xf61b7357d6638814e1a8d5edeba5c8f5db1cd782882b96da4452604ec0d5c20a\",\"license\":\"BUSL-1.1\"},\"contracts/lzApp/mocks/LZEndpointMock.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\nimport \\\"../interfaces/ILayerZeroReceiver.sol\\\";\\nimport \\\"../interfaces/ILayerZeroEndpoint.sol\\\";\\nimport \\\"../libs/LzLib.sol\\\";\\n\\n/*\\nlike a real LayerZero endpoint but can be mocked, which handle message transmission, verification, and receipt.\\n- blocking: LayerZero provides ordered delivery of messages from a given sender to a destination chain.\\n- non-reentrancy: endpoint has a non-reentrancy guard for both the send() and receive(), respectively.\\n- adapter parameters: allows UAs to add arbitrary transaction params in the send() function, like airdrop on destination chain.\\nunlike a real LayerZero endpoint, it is\\n- no messaging library versioning\\n- send() will short circuit to lzReceive()\\n- no user application configuration\\n*/\\ncontract LZEndpointMock is ILayerZeroEndpoint {\\n    uint8 internal constant _NOT_ENTERED = 1;\\n    uint8 internal constant _ENTERED = 2;\\n\\n    mapping(address => address) public lzEndpointLookup;\\n\\n    uint16 public mockChainId;\\n    bool public nextMsgBlocked;\\n\\n    // fee config\\n    RelayerFeeConfig public relayerFeeConfig;\\n    ProtocolFeeConfig public protocolFeeConfig;\\n    uint public oracleFee;\\n    bytes public defaultAdapterParams;\\n\\n    // path = remote addrss + local address\\n    // inboundNonce = [srcChainId][path].\\n    mapping(uint16 => mapping(bytes => uint64)) public inboundNonce;\\n    //todo: this is a hack\\n    // outboundNonce = [dstChainId][srcAddress]\\n    mapping(uint16 => mapping(address => uint64)) public outboundNonce;\\n    //    // outboundNonce = [dstChainId][path].\\n    //    mapping(uint16 => mapping(bytes => uint64)) public outboundNonce;\\n    // storedPayload = [srcChainId][path]\\n    mapping(uint16 => mapping(bytes => StoredPayload)) public storedPayload;\\n    // msgToDeliver = [srcChainId][path]\\n    mapping(uint16 => mapping(bytes => QueuedPayload[])) public msgsToDeliver;\\n\\n    // reentrancy guard\\n    uint8 internal _send_entered_state = 1;\\n    uint8 internal _receive_entered_state = 1;\\n\\n    struct ProtocolFeeConfig {\\n        uint zroFee;\\n        uint nativeBP;\\n    }\\n\\n    struct RelayerFeeConfig {\\n        uint128 dstPriceRatio; // 10^10\\n        uint128 dstGasPriceInWei;\\n        uint128 dstNativeAmtCap;\\n        uint64 baseGas;\\n        uint64 gasPerByte;\\n    }\\n\\n    struct StoredPayload {\\n        uint64 payloadLength;\\n        address dstAddress;\\n        bytes32 payloadHash;\\n    }\\n\\n    struct QueuedPayload {\\n        address dstAddress;\\n        uint64 nonce;\\n        bytes payload;\\n    }\\n\\n    modifier sendNonReentrant() {\\n        require(_send_entered_state == _NOT_ENTERED, \\\"LayerZeroMock: no send reentrancy\\\");\\n        _send_entered_state = _ENTERED;\\n        _;\\n        _send_entered_state = _NOT_ENTERED;\\n    }\\n\\n    modifier receiveNonReentrant() {\\n        require(_receive_entered_state == _NOT_ENTERED, \\\"LayerZeroMock: no receive reentrancy\\\");\\n        _receive_entered_state = _ENTERED;\\n        _;\\n        _receive_entered_state = _NOT_ENTERED;\\n    }\\n\\n    event UaForceResumeReceive(uint16 chainId, bytes srcAddress);\\n    event PayloadCleared(uint16 srcChainId, bytes srcAddress, uint64 nonce, address dstAddress);\\n    event PayloadStored(uint16 srcChainId, bytes srcAddress, address dstAddress, uint64 nonce, bytes payload, bytes reason);\\n    event ValueTransferFailed(address indexed to, uint indexed quantity);\\n\\n    constructor(uint16 _chainId) {\\n        mockChainId = _chainId;\\n\\n        // init config\\n        relayerFeeConfig = RelayerFeeConfig({\\n            dstPriceRatio: 1e10, // 1:1, same chain, same native coin\\n            dstGasPriceInWei: 1e10,\\n            dstNativeAmtCap: 1e19,\\n            baseGas: 100,\\n            gasPerByte: 1\\n        });\\n        protocolFeeConfig = ProtocolFeeConfig({zroFee: 1e18, nativeBP: 1000}); // BP 0.1\\n        oracleFee = 1e16;\\n        defaultAdapterParams = LzLib.buildDefaultAdapterParams(200000);\\n    }\\n\\n    // ------------------------------ ILayerZeroEndpoint Functions ------------------------------\\n    function send(\\n        uint16 _chainId,\\n        bytes memory _path,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes memory _adapterParams\\n    ) external payable override sendNonReentrant {\\n        require(_path.length == 40, \\\"LayerZeroMock: incorrect remote address size\\\"); // only support evm chains\\n\\n        address dstAddr;\\n        assembly {\\n            dstAddr := mload(add(_path, 20))\\n        }\\n\\n        address lzEndpoint = lzEndpointLookup[dstAddr];\\n        require(lzEndpoint != address(0), \\\"LayerZeroMock: destination LayerZero Endpoint not found\\\");\\n\\n        // not handle zro token\\n        bytes memory adapterParams = _adapterParams.length > 0 ? _adapterParams : defaultAdapterParams;\\n        (uint nativeFee, ) = estimateFees(_chainId, msg.sender, _payload, _zroPaymentAddress != address(0x0), adapterParams);\\n        require(msg.value >= nativeFee, \\\"LayerZeroMock: not enough native for fees\\\");\\n\\n        uint64 nonce = ++outboundNonce[_chainId][msg.sender];\\n\\n        // refund if they send too much\\n        uint amount = msg.value - nativeFee;\\n        if (amount > 0) {\\n            (bool success, ) = _refundAddress.call{value: amount}(\\\"\\\");\\n            require(success, \\\"LayerZeroMock: failed to refund\\\");\\n        }\\n\\n        // Mock the process of receiving msg on dst chain\\n        // Mock the relayer paying the dstNativeAddr the amount of extra native token\\n        (, uint extraGas, uint dstNativeAmt, address payable dstNativeAddr) = LzLib.decodeAdapterParams(adapterParams);\\n        if (dstNativeAmt > 0) {\\n            (bool success, ) = dstNativeAddr.call{value: dstNativeAmt}(\\\"\\\");\\n            if (!success) {\\n                emit ValueTransferFailed(dstNativeAddr, dstNativeAmt);\\n            }\\n        }\\n\\n        bytes memory srcUaAddress = abi.encodePacked(msg.sender, dstAddr); // cast this address to bytes\\n        bytes memory payload = _payload;\\n        LZEndpointMock(lzEndpoint).receivePayload(mockChainId, srcUaAddress, dstAddr, nonce, extraGas, payload);\\n    }\\n\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _path,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external override receiveNonReentrant {\\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\\n\\n        // assert and increment the nonce. no message shuffling\\n        require(_nonce == ++inboundNonce[_srcChainId][_path], \\\"LayerZeroMock: wrong nonce\\\");\\n\\n        // queue the following msgs inside of a stack to simulate a successful send on src, but not fully delivered on dst\\n        if (sp.payloadHash != bytes32(0)) {\\n            QueuedPayload[] storage msgs = msgsToDeliver[_srcChainId][_path];\\n            QueuedPayload memory newMsg = QueuedPayload(_dstAddress, _nonce, _payload);\\n\\n            // warning, might run into gas issues trying to forward through a bunch of queued msgs\\n            // shift all the msgs over so we can treat this like a fifo via array.pop()\\n            if (msgs.length > 0) {\\n                // extend the array\\n                msgs.push(newMsg);\\n\\n                // shift all the indexes up for pop()\\n                for (uint i = 0; i < msgs.length - 1; i++) {\\n                    msgs[i + 1] = msgs[i];\\n                }\\n\\n                // put the newMsg at the bottom of the stack\\n                msgs[0] = newMsg;\\n            } else {\\n                msgs.push(newMsg);\\n            }\\n        } else if (nextMsgBlocked) {\\n            storedPayload[_srcChainId][_path] = StoredPayload(uint64(_payload.length), _dstAddress, keccak256(_payload));\\n            emit PayloadStored(_srcChainId, _path, _dstAddress, _nonce, _payload, bytes(\\\"\\\"));\\n            // ensure the next msgs that go through are no longer blocked\\n            nextMsgBlocked = false;\\n        } else {\\n            try ILayerZeroReceiver(_dstAddress).lzReceive{gas: _gasLimit}(_srcChainId, _path, _nonce, _payload) {} catch (bytes memory reason) {\\n                storedPayload[_srcChainId][_path] = StoredPayload(uint64(_payload.length), _dstAddress, keccak256(_payload));\\n                emit PayloadStored(_srcChainId, _path, _dstAddress, _nonce, _payload, reason);\\n                // ensure the next msgs that go through are no longer blocked\\n                nextMsgBlocked = false;\\n            }\\n        }\\n    }\\n\\n    function getInboundNonce(uint16 _chainID, bytes calldata _path) external view override returns (uint64) {\\n        return inboundNonce[_chainID][_path];\\n    }\\n\\n    function getOutboundNonce(uint16 _chainID, address _srcAddress) external view override returns (uint64) {\\n        return outboundNonce[_chainID][_srcAddress];\\n    }\\n\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes memory _payload,\\n        bool _payInZRO,\\n        bytes memory _adapterParams\\n    ) public view override returns (uint nativeFee, uint zroFee) {\\n        bytes memory adapterParams = _adapterParams.length > 0 ? _adapterParams : defaultAdapterParams;\\n\\n        // Relayer Fee\\n        uint relayerFee = _getRelayerFee(_dstChainId, 1, _userApplication, _payload.length, adapterParams);\\n\\n        // LayerZero Fee\\n        uint protocolFee = _getProtocolFees(_payInZRO, relayerFee, oracleFee);\\n        _payInZRO ? zroFee = protocolFee : nativeFee = protocolFee;\\n\\n        // return the sum of fees\\n        nativeFee = nativeFee + relayerFee + oracleFee;\\n    }\\n\\n    function getChainId() external view override returns (uint16) {\\n        return mockChainId;\\n    }\\n\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _path,\\n        bytes calldata _payload\\n    ) external override {\\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\\n        require(sp.payloadHash != bytes32(0), \\\"LayerZeroMock: no stored payload\\\");\\n        require(_payload.length == sp.payloadLength && keccak256(_payload) == sp.payloadHash, \\\"LayerZeroMock: invalid payload\\\");\\n\\n        address dstAddress = sp.dstAddress;\\n        // empty the storedPayload\\n        sp.payloadLength = 0;\\n        sp.dstAddress = address(0);\\n        sp.payloadHash = bytes32(0);\\n\\n        uint64 nonce = inboundNonce[_srcChainId][_path];\\n\\n        ILayerZeroReceiver(dstAddress).lzReceive(_srcChainId, _path, nonce, _payload);\\n        emit PayloadCleared(_srcChainId, _path, nonce, dstAddress);\\n    }\\n\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _path) external view override returns (bool) {\\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\\n        return sp.payloadHash != bytes32(0);\\n    }\\n\\n    function getSendLibraryAddress(address) external view override returns (address) {\\n        return address(this);\\n    }\\n\\n    function getReceiveLibraryAddress(address) external view override returns (address) {\\n        return address(this);\\n    }\\n\\n    function isSendingPayload() external view override returns (bool) {\\n        return _send_entered_state == _ENTERED;\\n    }\\n\\n    function isReceivingPayload() external view override returns (bool) {\\n        return _receive_entered_state == _ENTERED;\\n    }\\n\\n    function getConfig(\\n        uint16, /*_version*/\\n        uint16, /*_chainId*/\\n        address, /*_ua*/\\n        uint /*_configType*/\\n    ) external pure override returns (bytes memory) {\\n        return \\\"\\\";\\n    }\\n\\n    function getSendVersion(\\n        address /*_userApplication*/\\n    ) external pure override returns (uint16) {\\n        return 1;\\n    }\\n\\n    function getReceiveVersion(\\n        address /*_userApplication*/\\n    ) external pure override returns (uint16) {\\n        return 1;\\n    }\\n\\n    function setConfig(\\n        uint16, /*_version*/\\n        uint16, /*_chainId*/\\n        uint, /*_configType*/\\n        bytes memory /*_config*/\\n    ) external override {}\\n\\n    function setSendVersion(\\n        uint16 /*version*/\\n    ) external override {}\\n\\n    function setReceiveVersion(\\n        uint16 /*version*/\\n    ) external override {}\\n\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _path) external override {\\n        StoredPayload storage sp = storedPayload[_srcChainId][_path];\\n        // revert if no messages are cached. safeguard malicious UA behaviour\\n        require(sp.payloadHash != bytes32(0), \\\"LayerZeroMock: no stored payload\\\");\\n        require(sp.dstAddress == msg.sender, \\\"LayerZeroMock: invalid caller\\\");\\n\\n        // empty the storedPayload\\n        sp.payloadLength = 0;\\n        sp.dstAddress = address(0);\\n        sp.payloadHash = bytes32(0);\\n\\n        emit UaForceResumeReceive(_srcChainId, _path);\\n\\n        // resume the receiving of msgs after we force clear the \\\"stuck\\\" msg\\n        _clearMsgQue(_srcChainId, _path);\\n    }\\n\\n    // ------------------------------ Other Public/External Functions --------------------------------------------------\\n\\n    function getLengthOfQueue(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint) {\\n        return msgsToDeliver[_srcChainId][_srcAddress].length;\\n    }\\n\\n    // used to simulate messages received get stored as a payload\\n    function blockNextMsg() external {\\n        nextMsgBlocked = true;\\n    }\\n\\n    function setDestLzEndpoint(address destAddr, address lzEndpointAddr) external {\\n        lzEndpointLookup[destAddr] = lzEndpointAddr;\\n    }\\n\\n    function setRelayerPrice(\\n        uint128 _dstPriceRatio,\\n        uint128 _dstGasPriceInWei,\\n        uint128 _dstNativeAmtCap,\\n        uint64 _baseGas,\\n        uint64 _gasPerByte\\n    ) external {\\n        relayerFeeConfig.dstPriceRatio = _dstPriceRatio;\\n        relayerFeeConfig.dstGasPriceInWei = _dstGasPriceInWei;\\n        relayerFeeConfig.dstNativeAmtCap = _dstNativeAmtCap;\\n        relayerFeeConfig.baseGas = _baseGas;\\n        relayerFeeConfig.gasPerByte = _gasPerByte;\\n    }\\n\\n    function setProtocolFee(uint _zroFee, uint _nativeBP) external {\\n        protocolFeeConfig.zroFee = _zroFee;\\n        protocolFeeConfig.nativeBP = _nativeBP;\\n    }\\n\\n    function setOracleFee(uint _oracleFee) external {\\n        oracleFee = _oracleFee;\\n    }\\n\\n    function setDefaultAdapterParams(bytes memory _adapterParams) external {\\n        defaultAdapterParams = _adapterParams;\\n    }\\n\\n    // --------------------- Internal Functions ---------------------\\n    // simulates the relayer pushing through the rest of the msgs that got delayed due to the stored payload\\n    function _clearMsgQue(uint16 _srcChainId, bytes calldata _path) internal {\\n        QueuedPayload[] storage msgs = msgsToDeliver[_srcChainId][_path];\\n\\n        // warning, might run into gas issues trying to forward through a bunch of queued msgs\\n        while (msgs.length > 0) {\\n            QueuedPayload memory payload = msgs[msgs.length - 1];\\n            ILayerZeroReceiver(payload.dstAddress).lzReceive(_srcChainId, _path, payload.nonce, payload.payload);\\n            msgs.pop();\\n        }\\n    }\\n\\n    function _getProtocolFees(\\n        bool _payInZro,\\n        uint _relayerFee,\\n        uint _oracleFee\\n    ) internal view returns (uint) {\\n        if (_payInZro) {\\n            return protocolFeeConfig.zroFee;\\n        } else {\\n            return ((_relayerFee + _oracleFee) * protocolFeeConfig.nativeBP) / 10000;\\n        }\\n    }\\n\\n    function _getRelayerFee(\\n        uint16, /* _dstChainId */\\n        uint16, /* _outboundProofType */\\n        address, /* _userApplication */\\n        uint _payloadSize,\\n        bytes memory _adapterParams\\n    ) internal view returns (uint) {\\n        (uint16 txType, uint extraGas, uint dstNativeAmt, ) = LzLib.decodeAdapterParams(_adapterParams);\\n        uint totalRemoteToken; // = baseGas + extraGas + requiredNativeAmount\\n        if (txType == 2) {\\n            require(relayerFeeConfig.dstNativeAmtCap >= dstNativeAmt, \\\"LayerZeroMock: dstNativeAmt too large \\\");\\n            totalRemoteToken += dstNativeAmt;\\n        }\\n        // remoteGasTotal = dstGasPriceInWei * (baseGas + extraGas)\\n        uint remoteGasTotal = relayerFeeConfig.dstGasPriceInWei * (relayerFeeConfig.baseGas + extraGas);\\n        totalRemoteToken += remoteGasTotal;\\n\\n        // tokenConversionRate = dstPrice / localPrice\\n        // basePrice = totalRemoteToken * tokenConversionRate\\n        uint basePrice = (totalRemoteToken * relayerFeeConfig.dstPriceRatio) / 10**10;\\n\\n        // pricePerByte = (dstGasPriceInWei * gasPerBytes) * tokenConversionRate\\n        uint pricePerByte = (relayerFeeConfig.dstGasPriceInWei * relayerFeeConfig.gasPerByte * relayerFeeConfig.dstPriceRatio) / 10**10;\\n\\n        return basePrice + _payloadSize * pricePerByte;\\n    }\\n}\\n\",\"keccak256\":\"0x06bc56b213f08faece383b9df0eb7eeafebb36f490ca117d927c93f3d82e554b\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1788,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"lzEndpointLookup","offset":0,"slot":"0","type":"t_mapping(t_address,t_address)"},{"astId":1790,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"mockChainId","offset":0,"slot":"1","type":"t_uint16"},{"astId":1792,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"nextMsgBlocked","offset":2,"slot":"1","type":"t_bool"},{"astId":1795,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"relayerFeeConfig","offset":0,"slot":"2","type":"t_struct(RelayerFeeConfig)1851_storage"},{"astId":1798,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"protocolFeeConfig","offset":0,"slot":"4","type":"t_struct(ProtocolFeeConfig)1840_storage"},{"astId":1800,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"oracleFee","offset":0,"slot":"6","type":"t_uint256"},{"astId":1802,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"defaultAdapterParams","offset":0,"slot":"7","type":"t_bytes_storage"},{"astId":1808,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"inboundNonce","offset":0,"slot":"8","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))"},{"astId":1814,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"outboundNonce","offset":0,"slot":"9","type":"t_mapping(t_uint16,t_mapping(t_address,t_uint64))"},{"astId":1821,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"storedPayload","offset":0,"slot":"10","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)1858_storage))"},{"astId":1829,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"msgsToDeliver","offset":0,"slot":"11","type":"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)1865_storage)dyn_storage))"},{"astId":1832,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"_send_entered_state","offset":0,"slot":"12","type":"t_uint8"},{"astId":1835,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"_receive_entered_state","offset":1,"slot":"12","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(QueuedPayload)1865_storage)dyn_storage":{"base":"t_struct(QueuedPayload)1865_storage","encoding":"dynamic_array","label":"struct LZEndpointMock.QueuedPayload[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_memory_ptr":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_uint64)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint64)","numberOfBytes":"32","value":"t_uint64"},"t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)1865_storage)dyn_storage)":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => struct LZEndpointMock.QueuedPayload[])","numberOfBytes":"32","value":"t_array(t_struct(QueuedPayload)1865_storage)dyn_storage"},"t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)1858_storage)":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => struct LZEndpointMock.StoredPayload)","numberOfBytes":"32","value":"t_struct(StoredPayload)1858_storage"},"t_mapping(t_bytes_memory_ptr,t_uint64)":{"encoding":"mapping","key":"t_bytes_memory_ptr","label":"mapping(bytes => uint64)","numberOfBytes":"32","value":"t_uint64"},"t_mapping(t_uint16,t_mapping(t_address,t_uint64))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(address => uint64))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint64)"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)1865_storage)dyn_storage))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => struct LZEndpointMock.QueuedPayload[]))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_array(t_struct(QueuedPayload)1865_storage)dyn_storage)"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)1858_storage))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => struct LZEndpointMock.StoredPayload))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_struct(StoredPayload)1858_storage)"},"t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_uint64))":{"encoding":"mapping","key":"t_uint16","label":"mapping(uint16 => mapping(bytes => uint64))","numberOfBytes":"32","value":"t_mapping(t_bytes_memory_ptr,t_uint64)"},"t_struct(ProtocolFeeConfig)1840_storage":{"encoding":"inplace","label":"struct LZEndpointMock.ProtocolFeeConfig","members":[{"astId":1837,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"zroFee","offset":0,"slot":"0","type":"t_uint256"},{"astId":1839,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"nativeBP","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(QueuedPayload)1865_storage":{"encoding":"inplace","label":"struct LZEndpointMock.QueuedPayload","members":[{"astId":1860,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"dstAddress","offset":0,"slot":"0","type":"t_address"},{"astId":1862,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"nonce","offset":20,"slot":"0","type":"t_uint64"},{"astId":1864,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"payload","offset":0,"slot":"1","type":"t_bytes_storage"}],"numberOfBytes":"64"},"t_struct(RelayerFeeConfig)1851_storage":{"encoding":"inplace","label":"struct LZEndpointMock.RelayerFeeConfig","members":[{"astId":1842,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"dstPriceRatio","offset":0,"slot":"0","type":"t_uint128"},{"astId":1844,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"dstGasPriceInWei","offset":16,"slot":"0","type":"t_uint128"},{"astId":1846,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"dstNativeAmtCap","offset":0,"slot":"1","type":"t_uint128"},{"astId":1848,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"baseGas","offset":16,"slot":"1","type":"t_uint64"},{"astId":1850,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"gasPerByte","offset":24,"slot":"1","type":"t_uint64"}],"numberOfBytes":"64"},"t_struct(StoredPayload)1858_storage":{"encoding":"inplace","label":"struct LZEndpointMock.StoredPayload","members":[{"astId":1853,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"payloadLength","offset":0,"slot":"0","type":"t_uint64"},{"astId":1855,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"dstAddress","offset":8,"slot":"0","type":"t_address"},{"astId":1857,"contract":"contracts/lzApp/mocks/LZEndpointMock.sol:LZEndpointMock","label":"payloadHash","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}